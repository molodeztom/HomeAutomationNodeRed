[
    {
        "id": "6f61cfd3.3d721",
        "type": "tab",
        "label": "HomeAutomation Measurements",
        "disabled": false,
        "info": "Receive MQTT messages from sensors through HomeServer and mosquitto on raspberry.\nEach SensorStation has several subtopics for the individual sensor measurements such as temp, humi. \nWhen homeserver founds a measurement erroneous it will send a 1 on topic ERR for that SensorStation.\nThe outgoing MQTT node controls the RemoteDisplay station. It can recieve measurements and will display it (currently fixed to temp and humi)\n\nVersionen:\n20200418    V1.1: geht soweit beginne Umstellung auf Switch in Function statt lauter MQTT Knoten\n"
    },
    {
        "id": "265d3756.5a1d68",
        "type": "tab",
        "label": "Homematic",
        "disabled": false,
        "info": ""
    },
    {
        "id": "511989b1.670cc8",
        "type": "tab",
        "label": "printer",
        "disabled": false,
        "info": ""
    },
    {
        "id": "9963931.9232c7",
        "type": "tab",
        "label": "Power Measurement",
        "disabled": false,
        "info": ""
    },
    {
        "id": "7e5a345d.05161c",
        "type": "tab",
        "label": "Jalousien",
        "disabled": false,
        "info": ""
    },
    {
        "id": "303a8ac7.4ea1c6",
        "type": "tab",
        "label": "Wohnzimmer Beleuchtung",
        "disabled": false,
        "info": ""
    },
    {
        "id": "abede211eec6d1b4",
        "type": "tab",
        "label": "Schlafzimmer Temp  Alarm",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "f9aa4d8908cf3153",
        "type": "tab",
        "label": "Plug1 Weihnachtsstern",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "fd2d363b540d07e3",
        "type": "tab",
        "label": "Waschmaschine Trockner",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "8c0dc70a.3a1008",
        "type": "tab",
        "label": "Sp√ºlmaschine",
        "disabled": false,
        "info": ""
    },
    {
        "id": "b85baf22.3cc35",
        "type": "tab",
        "label": "Gewittersensor",
        "disabled": true,
        "info": ""
    },
    {
        "id": "8be0833b.6c16c",
        "type": "tab",
        "label": "Tests",
        "disabled": true,
        "info": ""
    },
    {
        "id": "1d446fc4.18a0d",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": ""
    },
    {
        "id": "d9d529d7.01c778",
        "type": "tab",
        "label": "Abwesenheit und Urlaub",
        "disabled": true,
        "info": ""
    },
    {
        "id": "286e1e1c1a02e435",
        "type": "tab",
        "label": "Flow 2",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "b83af794.4bec68",
        "type": "group",
        "z": "9963931.9232c7",
        "name": "Total Hours Counter",
        "style": {
            "label": true,
            "stroke": "#92d04f",
            "fill": "#7fb7df",
            "color": "#ffff00"
        },
        "nodes": [
            "3073af6c.b8faf",
            "eb3968c3.bb5428",
            "da1d5372.6280b",
            "c84605f2.fc07b8",
            "98f49115.c6a88",
            "2464e0ea.8854",
            "aeeace25.46d86",
            "76c727f9.1bd188",
            "4e87f92e.0671f8",
            "48c974e1.caa28c",
            "6c3ad4d5.7c797c",
            "b2c4112c.bc82e",
            "2d7342af.ce708e",
            "4965a0c.3a0ac6",
            "75749182.28289",
            "3b155418.9a8f0c",
            "6f4763e9.e5576c",
            "532bc566.df7b1c",
            "9bf89ef510fe6859",
            "297dbb510b10e781",
            "3ffa9cac5f01648d",
            "8d91d7c450e7b770"
        ],
        "x": 14,
        "y": 199
    },
    {
        "id": "7d3411b0.20fc7",
        "type": "group",
        "z": "9963931.9232c7",
        "name": "Power Measurement to Database",
        "style": {
            "stroke": "#ff3f3f",
            "fill": "#ffC000",
            "label": true
        },
        "nodes": [
            "c1e7e0f.1a2202",
            "3a6c508.ebe3cb",
            "f571eda1.7d3f5",
            "1a1c6586.ce182a",
            "2a103049.f6a29",
            "b57696ce7b657e63",
            "98e07e5594b2e3d3"
        ],
        "x": 14,
        "y": 39
    },
    {
        "id": "584f76f1.996908",
        "type": "group",
        "z": "6f61cfd3.3d721",
        "name": "Measurement Sensor to DB",
        "style": {
            "stroke": "#3f93cf",
            "fill": "#bfbfbf",
            "label": true
        },
        "nodes": [
            "15f6ffc8.eb6d3",
            "481f575d.658e08",
            "d3718c58.f498a",
            "74b1862d.2f15f8",
            "3b080467.ae49dc",
            "89c4be7a.d8218",
            "d47fd123.52af2",
            "3baa2ffa.c917b",
            "1029799b.c92736",
            "e35d7f54.4ad1f",
            "c026e49e.be0588",
            "6a1827c1.d350e8",
            "13346bce.a3e684",
            "9dbc98b8.8f08b8",
            "d0849bc.1c43168",
            "10bda896.f1d857",
            "eced108b.5f3cd",
            "95b11563.82c788",
            "e414ce6.6f20c3",
            "3bd8ac1b.081bb4",
            "3ad0e3f6.35a08c",
            "f5d3faae.391998",
            "b0817e1.cd3198",
            "f835ac14.29a9",
            "92311c170fc82c32",
            "77108fccf7818c74",
            "20f8d4c343ab09fe",
            "3ea1c26a12bbb26e",
            "38b8eb46bdbac086",
            "f76db29b82c7afec",
            "046b6a144903991f"
        ],
        "x": 34,
        "y": 19,
        "w": 1002,
        "h": 582
    },
    {
        "id": "2f27dc68.9ff574",
        "type": "group",
        "z": "6f61cfd3.3d721",
        "name": "Remote Display",
        "style": {
            "stroke": "#ffff3f",
            "fill": "#ffffbf",
            "label": true
        },
        "nodes": [
            "49e2646f.c4941c",
            "3fcd6f25.e487c",
            "ea688e79.cf481",
            "64c76441.d5f36c"
        ],
        "x": 54,
        "y": 759,
        "w": 432,
        "h": 142
    },
    {
        "id": "5c041b39.d836b4",
        "type": "group",
        "z": "511989b1.670cc8",
        "name": "Printer Measurement",
        "style": {
            "label": true,
            "fill": "#dbcbe7"
        },
        "nodes": [
            "818d3c6f.201f2",
            "4b0bda4e.1a1664",
            "d702897a.1cfcf8",
            "966ae8fb.a98fd8",
            "c6ec2928.710c18",
            "1824c144.dfb4ef",
            "d754d650.2a8f18",
            "76804725.6ac1f8",
            "5da76156.34c3f",
            "8c67a965.134088",
            "1a54d5c9.3e5b9a",
            "63b53cab.0746d4",
            "1b6c236f.f67d4d",
            "7b1463f8.f8e4cc",
            "c4532342.dddc2",
            "ff6b7215.93de5",
            "1dea714a.68511f",
            "a30d9009.4e13b"
        ],
        "x": 54,
        "y": -1
    },
    {
        "id": "18ca9346.bdbedd",
        "type": "group",
        "z": "511989b1.670cc8",
        "name": "Timer and Output",
        "style": {
            "stroke": "#ffdf7f",
            "fill": "#ffefbf",
            "label": true
        },
        "nodes": [
            "31b9404d.230c",
            "9bea78c2.290f98",
            "f46b4697.85a528",
            "ab040656.4d62c8",
            "c963b96.8ceb748",
            "29e1d371.ff155c",
            "15937479.cc992c",
            "47ac10c5.af1f3",
            "823d7203.adc6f",
            "c85e3aa6.8a06d8",
            "a781db69.92e528",
            "3b6104fe.71eecc",
            "f065d912.8cec88",
            "c60a1a40.b2a698",
            "87cac91c.8f1ba8",
            "339b0b7.0a49bf4",
            "c0b2e11c.f580f",
            "8224f7c3.a845f8",
            "19c8b5c0.3dcaca",
            "1ffa44ec.2f584b",
            "acfc89f6.5dc368",
            "550eb938.78f938",
            "54087a9f.9d1c24",
            "f665e232.83018",
            "6e793f78.19688",
            "b8c299bc.8c4e18",
            "bb147727.808968",
            "997e000a.2be07",
            "61b9f71.7b9bb08"
        ],
        "x": 54,
        "y": 516.5
    },
    {
        "id": "73d12632.94b388",
        "type": "group",
        "z": "6f61cfd3.3d721",
        "name": "Heating Measurement",
        "style": {
            "stroke": "#9363b7",
            "fill": "#dbcbe7",
            "label": true
        },
        "nodes": [
            "3bb0fb40.e717e4",
            "c772a959.162c98",
            "d5959449.a47808",
            "ecec7acf.215678",
            "9c8627c.7dea4d8",
            "541cf4bd.ec76dc"
        ],
        "x": 514,
        "y": 759,
        "w": 572,
        "h": 182
    },
    {
        "id": "1b82c7fb.e55448",
        "type": "group",
        "z": "303a8ac7.4ea1c6",
        "name": "Jalousie Zentralschalter",
        "style": {
            "stroke": "#b797cf",
            "fill": "#ffdf7f",
            "label": true,
            "color": "#001f60"
        },
        "nodes": [
            "70c7fcfe.4a18a4",
            "e5cb0df.5f800f",
            "9d5588be.cd9ff8",
            "90164b1.c8cd0b8",
            "e62cdee5.0ac4a",
            "692cb70c.99c928",
            "89de660e.32b288"
        ],
        "x": 34,
        "y": 299
    },
    {
        "id": "25c55a9c.73b9c6",
        "type": "group",
        "z": "303a8ac7.4ea1c6",
        "name": "Wohnzimmer Deckenlampe",
        "style": {
            "stroke": "#92d04f",
            "fill": "#d1d1d1",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "e093d6cc.660ef8",
            "c4729f96.429f3",
            "e698cc28.6d655",
            "f394341d.b4ebf8",
            "78b4e8db.f77fb8",
            "923ccc32.a66e2",
            "47fa255b.9cef7c",
            "d5fc8000.9e0ab"
        ],
        "x": 34,
        "y": 19
    },
    {
        "id": "b9a71c35.b8ccf",
        "type": "group",
        "z": "265d3756.5a1d68",
        "name": "Heizung Tom",
        "style": {
            "stroke": "#ff3f3f",
            "label": true,
            "color": "#001f60",
            "fill": "#bfdbef"
        },
        "nodes": [
            "b2eaa5c4.14f408",
            "e016da34.64e308",
            "65e988da.f6b958",
            "aa219fc1.1a6e2",
            "3954e69e.21d60a",
            "ae0f7157.7d2e7"
        ],
        "x": 14,
        "y": 759,
        "w": 852,
        "h": 162
    },
    {
        "id": "40936a6d.e4bc64",
        "type": "group",
        "z": "265d3756.5a1d68",
        "name": "Heizung Olga",
        "style": {
            "stroke": "#ffC000",
            "fill": "#c8e7a7",
            "label": true
        },
        "nodes": [
            "5c3137f1.b5ec18",
            "acdf657a.72a3b8",
            "130b2e36.ca9eb2",
            "f05b3b99.e44618",
            "e1622e38.47b46"
        ],
        "x": 14,
        "y": 599,
        "w": 712,
        "h": 142
    },
    {
        "id": "3644af6d.d42f6",
        "type": "group",
        "z": "265d3756.5a1d68",
        "name": "Heizung Wohnzimmer",
        "style": {
            "stroke": "#0070c0",
            "fill": "#ffff7f",
            "label": true
        },
        "nodes": [
            "9ed6a24d.c8feb",
            "8de8f997.bf7e18",
            "c12c999c.1ace08",
            "17d18fc0.b21c7",
            "1df28e68.76cf02",
            "c70dc234.9d2b2",
            "e6e8fe31.e3e38",
            "38d7b5c0.b2603a",
            "e38e18ad.3476f8",
            "3d0abac7.6df4e6",
            "7365b52e.c6858c",
            "529c3dd9.9b5374",
            "64c0d9cf.dd5978",
            "fa90773d.feded8",
            "33e7c443.634e4c",
            "562300c7.4b952",
            "a75bf925.381958",
            "4f575270.86d46c",
            "1bd2faf182fb3f8a"
        ],
        "x": 14,
        "y": 19,
        "w": 772,
        "h": 522
    },
    {
        "id": "5e94d88a.fb01e8",
        "type": "group",
        "z": "265d3756.5a1d68",
        "name": "Bedarfsberechnung",
        "style": {
            "fill": "#ffcf3f",
            "label": true
        },
        "nodes": [
            "ddb9da78.77be18",
            "2a95bc9b.1c66a4",
            "89c04ca8.7c10c",
            "7fce1939.2cfb98",
            "f0b72f63.75383",
            "77634598.aeeb5c",
            "52626602.a80e18",
            "120d4f01cac39998",
            "5b9db628891c8ab5"
        ],
        "x": 14,
        "y": 1519,
        "w": 1072,
        "h": 162
    },
    {
        "id": "bec8f6bc.d0d348",
        "type": "group",
        "z": "7e5a345d.05161c",
        "name": "Holiday Calculation",
        "style": {
            "stroke": "#ff0000",
            "fill": "#ff7f7f",
            "label": true
        },
        "nodes": [
            "f2c7f904.d08ef8",
            "6e5f1bdf.1f22e4",
            "73de636f.d668ec",
            "eb31c6ef.67a2f8",
            "dfcc41b0.b3ad2"
        ],
        "x": 34,
        "y": 59,
        "w": 642,
        "h": 142
    },
    {
        "id": "7ce4548d.b8ed0c",
        "type": "group",
        "z": "7e5a345d.05161c",
        "name": "Rollo Tom",
        "style": {
            "stroke": "#3f5787",
            "fill": "#c8e7a7",
            "fill-opacity": "0.76",
            "label": true
        },
        "nodes": [
            "66335075.9471e",
            "b9f43bc.ca86bc8",
            "29e92fc.65284d",
            "bc21088d.1042d8",
            "77bd98f3.c0e8c8"
        ],
        "x": 34,
        "y": 1319,
        "w": 852,
        "h": 142
    },
    {
        "id": "4cff6fb8.ecd81",
        "type": "group",
        "z": "7e5a345d.05161c",
        "name": "Wetterdaten",
        "style": {
            "stroke": "#001f60",
            "fill": "#3f5787",
            "label": true
        },
        "nodes": [
            "ceb59201.0651d",
            "54ec2f51.f58c5",
            "b907c2ad.b1417",
            "e5d7026a.0a239",
            "48947d58.eae5c4",
            "fd0a15dc.298558",
            "d26a7c85.ed299",
            "f69a51fd.3a899",
            "44ca9388.fa0d3c",
            "243db6c7.15d31a",
            "d70a15d40c7e6f81",
            "9e29c6c01d7c3d23",
            "f4842aaa5a034809",
            "64fc421078cd82f6"
        ],
        "x": 34,
        "y": 219,
        "w": 692,
        "h": 322
    },
    {
        "id": "6666fbc0.896914",
        "type": "group",
        "z": "7e5a345d.05161c",
        "name": "Rollo Essecke",
        "style": {
            "label": true,
            "stroke": "#ffff3f",
            "fill": "#ffcf3f"
        },
        "nodes": [
            "5eac9c57.76c314",
            "6ac2e536.abb7ec",
            "3c0c4256.7b9c2e",
            "1f1a9b31.1e6da5",
            "b71e2911.a2d248",
            "967f00fa.1ae43",
            "e1e1185c.2c8d88",
            "f525cf20.f74e1",
            "4fbc55c0.c9f85c",
            "7bd02856.8f5288",
            "20e6409a.ffe67"
        ],
        "x": 24,
        "y": 519,
        "w": 962,
        "h": 262
    },
    {
        "id": "3f11d194.8d04ee",
        "type": "group",
        "z": "7e5a345d.05161c",
        "name": "Rollo Wohnzimmer",
        "style": {
            "stroke": "#7fb7df",
            "fill": "#ff7f7f",
            "label": true
        },
        "nodes": [
            "719dd77e.126428",
            "7c0e361f.f82ce8",
            "4e597d09.2aedb4",
            "18b04498.89bb7b",
            "55fe76a1.962bf8",
            "ac11dbc3.138ca8",
            "97695071.468dc",
            "ced3fe1b.5db5b",
            "fbb3d4c7.4328d8",
            "1f2409.3d5e7bf8"
        ],
        "x": 34,
        "y": 799,
        "w": 952,
        "h": 262
    },
    {
        "id": "c87697c7.9b9e58",
        "type": "group",
        "z": "7e5a345d.05161c",
        "name": "Wohnzimmer T√ºre",
        "style": {
            "stroke": "#a4a4a4",
            "fill": "#bfdbef",
            "label": true
        },
        "nodes": [
            "b0373bec.1ade48",
            "1a538972.87cf07",
            "31ef75a9.d9e27a",
            "a74fc78c.af3c88",
            "fb2be545.fa3808",
            "fd62f2d7.c32f7",
            "18eca755.0bbeb9",
            "2d76da21.b8b846",
            "45946f85.a2da8",
            "020815130193de39",
            "3adbcc4a84edfcd0"
        ],
        "x": 34,
        "y": 1099,
        "w": 952,
        "h": 202
    },
    {
        "id": "d8d1de94.dfe9",
        "type": "group",
        "z": "303a8ac7.4ea1c6",
        "name": "Regalbeleuchtung",
        "style": {
            "stroke": "#9363b7",
            "fill": "#c8e7a7",
            "label": true
        },
        "nodes": [
            "9f8b174e.db7128",
            "1268a437.7e39bc",
            "cc16c88b.fcf548",
            "1c7e85b9.7a139a",
            "afd3f744.eebe38",
            "3b653b55.378c04",
            "cc3c23a7.cde0c",
            "b8aa167e.038cf8",
            "175136f.5bb36c9",
            "8d25df5c.ebd85",
            "1dc7e978.c48077",
            "114319b2.da6366",
            "b8fc33.612c63d",
            "dbb3fcbb.281df",
            "11294d5a.bc9e03",
            "c44943a810485120",
            "dfd88152d7f11711",
            "ff47c6e93ade7138",
            "ee576d625ea73b19",
            "269fa372f1b2b061",
            "6c481a11bf50ef2a",
            "80c803e5a0b04b9f",
            "0c44a392567ece67",
            "f9d6935864aab449",
            "8b1654739201e473",
            "3da7835372f92593",
            "5c40e7a216b4c613",
            "79e79ac4f740a2e1",
            "77d544823668d60d"
        ],
        "x": 34,
        "y": 559
    },
    {
        "id": "5d7bb23e.6c04ec",
        "type": "group",
        "z": "6f61cfd3.3d721",
        "name": "Heating Valve Control",
        "style": {
            "label": true,
            "fill": "#c8e7a7"
        },
        "nodes": [
            "17a551f9.bcd59e",
            "da2b6e45.21a05",
            "3c962617.c2f8da",
            "19222942.f62117",
            "7b6ccd29.970414",
            "20ca1b0c.9a8c24",
            "a4e3b9e2.4783a8",
            "a01343a.a42a9c",
            "97b9ac13.ca45c",
            "cb6213d.83258f",
            "130dd598.a91e6a",
            "a0fe78c.bc5a188",
            "8823d2b3.3d2ab",
            "ed0d92d3.e506c",
            "6c8377f8.cdd248",
            "89b41e2e.59495",
            "fff7a262.d8778",
            "59893d9f.a33394",
            "bdbb365a.74cc18"
        ],
        "x": 44,
        "y": 959,
        "w": 852,
        "h": 642
    },
    {
        "id": "48598788.77a428",
        "type": "group",
        "z": "303a8ac7.4ea1c6",
        "name": "Esstischlampe",
        "style": {
            "fill": "#dbcbe7",
            "label": true
        },
        "nodes": [
            "d5fbe10f.cabbe",
            "560b8c99.51d2e4",
            "aba74db0.cc5fa",
            "8a3241ff.1ce98",
            "4b0e945f.2a447c",
            "d4048c71.c6147",
            "598dc7bf.230e78",
            "1cdf209c.5f543f",
            "8967db25.f1b4d8",
            "8408ab6f.7b84f8",
            "6ea779b5.a475f8",
            "7f7def5a.ded76",
            "73f6d13a86f5a5fe",
            "3c742c50ddb82a78",
            "22488e72b78c78a8",
            "9450f1731fc4de3d"
        ],
        "x": 34,
        "y": 979
    },
    {
        "id": "40f7136f.c806bc",
        "type": "group",
        "z": "7e5a345d.05161c",
        "name": "Rollo Schlafzimmer",
        "style": {
            "fill": "#7fb7df",
            "label": true,
            "color": "#0070c0"
        },
        "nodes": [
            "485a5be0.812e94",
            "eec0f371.5a3f3",
            "571c071d.5ff3c8",
            "28683cb0.557de4",
            "24a92b79.3ccad4",
            "47b1e704.2b8a68",
            "c25c352a.ce5a48",
            "52f4f339.08914c",
            "bdb4e967.1f53d8",
            "75086919.4e5548",
            "166a9b8664b09914",
            "c80d7eb787b0e712",
            "c6aec482f41cd664",
            "15db2dbb374bc125",
            "b4458220578284d6",
            "79e70291102b361f",
            "7a6e01ce32748004"
        ],
        "x": 34,
        "y": 1859,
        "w": 1152,
        "h": 362
    },
    {
        "id": "9632f8fb2bd4fa59",
        "type": "group",
        "z": "265d3756.5a1d68",
        "name": "Heizung Bad",
        "style": {
            "stroke": "#3f93cf",
            "fill": "#7fb7df",
            "label": true,
            "color": "#ffff00"
        },
        "nodes": [
            "8f07a6fbf012ba0a",
            "2c449541cbdef5dc",
            "1d345c7ff6c674c8",
            "a3387d93bf10d65a",
            "f0f0653855c693db",
            "54e47a03f8e6baba"
        ],
        "x": 14,
        "y": 939,
        "w": 892,
        "h": 142
    },
    {
        "id": "492449f2a284d6d7",
        "type": "group",
        "z": "265d3756.5a1d68",
        "name": "Heizung Schlafzimmer",
        "style": {
            "stroke": "#3f93cf",
            "label": true,
            "color": "#000000",
            "fill": "#d1d1d1"
        },
        "nodes": [
            "c7376c1f34d5851e",
            "b31b88a99f16cc44",
            "ce590a0d1069ae2d",
            "9987df64e7156316",
            "5ca3e8fef88b5b22",
            "a448e0f6c950f185",
            "e0160b9e060c6bab",
            "bec11c3a8731a1ef",
            "5c01553b5435fa0a"
        ],
        "x": 14,
        "y": 1099,
        "w": 772,
        "h": 262
    },
    {
        "id": "ba622014ba4332d1",
        "type": "group",
        "z": "f9aa4d8908cf3153",
        "name": "Shelly MQTT Example on off",
        "style": {
            "label": true
        },
        "nodes": [
            "5f91e7602da223bd",
            "439f4e1780b18960",
            "6bbe9610015db0bb",
            "acb7a54c851e9859",
            "28e6fe851aacfbc8"
        ],
        "x": 34,
        "y": 19
    },
    {
        "id": "0ac5cf038e9b4a0e",
        "type": "group",
        "z": "f9aa4d8908cf3153",
        "name": "Weihnachtsstern Wohnz",
        "style": {
            "stroke": "#ff0000",
            "label": true,
            "color": "#0070c0",
            "fill": "#ffff00"
        },
        "nodes": [
            "8c8efc274d12449f",
            "f4e6dc9865ab090d",
            "37aac056560b1cc1"
        ],
        "x": 34,
        "y": 259
    },
    {
        "id": "32340ff2f48f54cf",
        "type": "group",
        "z": "f9aa4d8908cf3153",
        "name": "Schiff Lampe",
        "style": {
            "stroke": "#3f93cf",
            "label": true,
            "color": "#0070c0",
            "fill": "#ffff00"
        },
        "nodes": [
            "8096558a54a1573b",
            "5ed2c1ced591b927",
            "1cc8a629e50f56e4",
            "79a6f8307898f063",
            "e2bd8d200d5e2702",
            "707583bc79fdf095",
            "242b1a5b6365a506",
            "aa807b1b18ee51ae"
        ],
        "x": 34,
        "y": 359
    },
    {
        "id": "4b345f34f7b4d8e1",
        "type": "group",
        "z": "fd2d363b540d07e3",
        "name": "Shelly MQTT Example on off",
        "style": {
            "label": true
        },
        "nodes": [
            "f514b5b167b26e6a",
            "464478dd6d3aaae2",
            "3fcb2f94f630c655",
            "79a8ec2b47652bfb",
            "1620464c7201262c"
        ],
        "x": 134,
        "y": 1139
    },
    {
        "id": "bc3df6523c98c42b",
        "type": "group",
        "z": "265d3756.5a1d68",
        "name": "Luftbefeuchter Wohnzimmer",
        "style": {
            "stroke": "#7fb7df",
            "label": true,
            "fill": "#bfdbef"
        },
        "nodes": [
            "f79803a413570de7",
            "1b7db04087fe86cc",
            "d5599294c6dead65",
            "888771d5bf10f2ab",
            "a8369be11ebe74cf",
            "96617e9bd5cb6c1a",
            "811a782081f4dc3c",
            "ba0eeb88b7307863",
            "62ede9f4a383c58d",
            "3efd33a2052e6525",
            "219c0a60e201da84",
            "1a94b389528b9aaf",
            "ec6ca311df51353b",
            "5bf0eb292dccd4db",
            "5546a3e921f1ef52",
            "dc12148c24f84fe9"
        ],
        "x": 14,
        "y": 1719,
        "w": 1052,
        "h": 402
    },
    {
        "id": "de3e2e3aac07c809",
        "type": "group",
        "z": "265d3756.5a1d68",
        "name": "Luftbefeuchter Schlafzimmer",
        "style": {
            "stroke": "#3f93cf",
            "fill": "#3f93cf",
            "label": true
        },
        "nodes": [
            "d24c2a889a0623b1",
            "3a8b059a72f7cdce",
            "47d6882d43086e7b",
            "b52d2f3e354ce7e4",
            "3ee4b32e43d0f544",
            "3f88b754145efcb3",
            "6b772c7790f8c758",
            "63822450abd8c825",
            "78a32c783a9b1402",
            "6945deb0ca8c6b12",
            "cdb8955f52c79898",
            "b9f9373889ed3769",
            "4d7d2fc975c0bffa",
            "347e58777872f0ac",
            "359074cb91f0b627",
            "ef2887267666e30e",
            "c003ab02fc04b33e"
        ],
        "x": 14,
        "y": 2139,
        "w": 1152,
        "h": 402
    },
    {
        "id": "f65918f1b4342953",
        "type": "group",
        "z": "7e5a345d.05161c",
        "name": "Rollo Olga",
        "style": {
            "fill": "#ffdf7f",
            "label": true,
            "color": "#0070c0"
        },
        "nodes": [
            "a58a381aa2e38d88",
            "05d48b7f7eb46216",
            "039afede1f067b9d",
            "161e741db7a72e96",
            "45afb650ee3ca231",
            "82735bbdda171b0b",
            "b58ef69469567186",
            "1f9a2da59781e10b",
            "5a6bab5d08bdae64",
            "b72ff891bf3f618a",
            "49e822a74475131c",
            "d05a8dd424d87432",
            "75f39a461474fde6",
            "480aa351e7d8b852",
            "c3d2f84d0adc090d",
            "a9f2e8e37fab03d9",
            "a83aef368b05cde1"
        ],
        "x": 34,
        "y": 1479,
        "w": 1092,
        "h": 362
    },
    {
        "id": "6cbee2f8d8c21bd4",
        "type": "group",
        "z": "f9aa4d8908cf3153",
        "name": "Waipu Stick",
        "style": {
            "stroke": "#92d04f",
            "label": true,
            "color": "#0070c0",
            "fill": "#7fb7df"
        },
        "nodes": [
            "7315777ca52b6217",
            "ea1509d472571410",
            "0dae3786785bf5f7",
            "c096bf1bd24a9355",
            "8521c54304dfaa01",
            "33bcd57ebcf3e876",
            "b9c430a901df5ad5",
            "16f3d121ff896e83"
        ],
        "x": 34,
        "y": 599
    },
    {
        "id": "61105c945b3dbdf6",
        "type": "group",
        "z": "f9aa4d8908cf3153",
        "name": "Weihnachtsbaum",
        "style": {
            "stroke": "#3f93cf",
            "label": true,
            "color": "#0070c0",
            "fill": "#ffff00"
        },
        "nodes": [
            "46c340e550e6a541",
            "dad10dfe1ff17c1b",
            "a0374dac5c451e6c",
            "af4f39c2cb753003",
            "331427707e2f11a5",
            "392c733344f14512",
            "caaaeef37fbc1551",
            "a23fc24ad2c7b0c6"
        ],
        "x": 34,
        "y": 879
    },
    {
        "id": "19cf2a10.f9d4a6",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.178.53/",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "e3f4c3e8.b52ee",
        "type": "influxdb",
        "hostname": "influxdb",
        "port": "8086",
        "protocol": "http",
        "database": "HomeAutomation",
        "name": "HomeAutomation",
        "usetls": false,
        "tls": "",
        "influxdbVersion": "1.x",
        "url": "",
        "rejectUnauthorized": false
    },
    {
        "id": "d3280bd.1460df8",
        "type": "samsung-tv",
        "name": "Samsung TV 1",
        "model": "8001",
        "ip": "192.168.178.32",
        "mac": "5C:49:7D:52:36:8A",
        "token": ""
    },
    {
        "id": "9a5a8534.25d4d8",
        "type": "position-config",
        "name": "HOME",
        "isValide": "true",
        "longitude": "0",
        "latitude": "0",
        "angleType": "deg",
        "timeZoneOffset": 99,
        "timeZoneDST": 0,
        "stateTimeFormat": "3",
        "stateDateFormat": "12"
    },
    {
        "id": "79ccd59a.7479ec",
        "type": "telegram bot",
        "botname": "Tom1301Home_bot",
        "usernames": "",
        "chatids": "",
        "baseapiurl": "",
        "updatemode": "polling",
        "pollinterval": "300",
        "usesocks": false,
        "sockshost": "",
        "socksport": "6667",
        "socksusername": "anonymous",
        "sockspassword": "",
        "bothost": "",
        "botpath": "",
        "localbotport": "8443",
        "publicbotport": "8443",
        "privatekey": "",
        "certificate": "",
        "useselfsignedcertificate": false,
        "sslterminated": false,
        "verboselogging": false
    },
    {
        "id": "7f110bbf.a6e474",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#097479",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#0eb8c0",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "8e157408.1ce3a8",
        "type": "ui_group",
        "name": "Wetter",
        "tab": "b735724.619b39",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "5b512b5d.99aec4",
        "type": "ui_group",
        "name": "Heizung",
        "tab": "b735724.619b39",
        "order": 2,
        "disp": true,
        "width": "7",
        "collapse": false
    },
    {
        "id": "13a03688.c43e99",
        "type": "ui_group",
        "name": "Jalousien",
        "tab": "b735724.619b39",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "ae60322a.3a15c",
        "type": "ui_group",
        "name": "Beleuchtung",
        "tab": "b735724.619b39",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "67365e98.aacf3",
        "type": "ui_group",
        "name": "TV Remote",
        "tab": "42f15bd.59322a4",
        "order": 1,
        "disp": true,
        "width": "8",
        "collapse": true
    },
    {
        "id": "b735724.619b39",
        "type": "ui_tab",
        "name": "Rollosteuerung",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "42f15bd.59322a4",
        "type": "ui_tab",
        "name": "TV Remote",
        "icon": "fa-tv",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "fd0259eef2520d3a",
        "type": "home-connect-auth",
        "name": "NodeRedTom2",
        "simulation_mode": false,
        "scope": "",
        "callback_url": "http://192.168.178.53:1880/homeconnect/auth/callback"
    },
    {
        "id": "49e2646f.c4941c",
        "type": "mqtt out",
        "z": "6f61cfd3.3d721",
        "g": "2f27dc68.9ff574",
        "name": "",
        "topic": "Thermo",
        "qos": "",
        "retain": "",
        "broker": "19cf2a10.f9d4a6",
        "x": 400,
        "y": 860,
        "wires": []
    },
    {
        "id": "481f575d.658e08",
        "type": "mqtt in",
        "z": "6f61cfd3.3d721",
        "g": "584f76f1.996908",
        "name": "",
        "topic": "Sensor0/+",
        "qos": "0",
        "datatype": "auto",
        "broker": "19cf2a10.f9d4a6",
        "inputs": 0,
        "x": 120,
        "y": 61,
        "wires": [
            [
                "6a1827c1.d350e8"
            ]
        ]
    },
    {
        "id": "d3718c58.f498a",
        "type": "mqtt in",
        "z": "6f61cfd3.3d721",
        "g": "584f76f1.996908",
        "name": "",
        "topic": "Sensor1/+",
        "qos": "0",
        "datatype": "auto",
        "broker": "19cf2a10.f9d4a6",
        "inputs": 0,
        "x": 120,
        "y": 121,
        "wires": [
            [
                "c026e49e.be0588"
            ]
        ]
    },
    {
        "id": "3fcd6f25.e487c",
        "type": "mqtt in",
        "z": "6f61cfd3.3d721",
        "g": "2f27dc68.9ff574",
        "name": "",
        "topic": "Sensor1/fHumi",
        "qos": "0",
        "datatype": "auto",
        "broker": "19cf2a10.f9d4a6",
        "inputs": 0,
        "x": 160,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "ea688e79.cf481",
        "type": "mqtt in",
        "z": "6f61cfd3.3d721",
        "g": "2f27dc68.9ff574",
        "name": "",
        "topic": "Sensor1/fTempA",
        "qos": "0",
        "datatype": "auto",
        "broker": "19cf2a10.f9d4a6",
        "inputs": 0,
        "x": 160,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "74b1862d.2f15f8",
        "type": "mqtt in",
        "z": "6f61cfd3.3d721",
        "g": "584f76f1.996908",
        "name": "",
        "topic": "Sensor2/+",
        "qos": "0",
        "datatype": "auto",
        "broker": "19cf2a10.f9d4a6",
        "inputs": 0,
        "x": 120,
        "y": 181,
        "wires": [
            [
                "e35d7f54.4ad1f",
                "92311c170fc82c32"
            ]
        ]
    },
    {
        "id": "64c76441.d5f36c",
        "type": "mqtt out",
        "z": "6f61cfd3.3d721",
        "g": "2f27dc68.9ff574",
        "name": "",
        "topic": "Humi",
        "qos": "0",
        "retain": "",
        "broker": "19cf2a10.f9d4a6",
        "x": 390,
        "y": 800,
        "wires": []
    },
    {
        "id": "3baa2ffa.c917b",
        "type": "mqtt in",
        "z": "6f61cfd3.3d721",
        "g": "584f76f1.996908",
        "name": "",
        "topic": "Sensor3/+",
        "qos": "0",
        "datatype": "auto",
        "broker": "19cf2a10.f9d4a6",
        "inputs": 0,
        "x": 120,
        "y": 241,
        "wires": [
            [
                "1029799b.c92736"
            ]
        ]
    },
    {
        "id": "1029799b.c92736",
        "type": "function",
        "z": "6f61cfd3.3d721",
        "g": "584f76f1.996908",
        "name": "Sensor3 switch/convert",
        "func": "var topic=msg.topic;\nswitch(topic){\n    case \"Sensor3/fTempA\":\n        msg.payload={\n            fTempA: Number(msg.payload),\n        }\n        \n        return msg;\n    case \"Sensor3/fVolt\":\n        msg.payload={\n            fVolt: Number(msg.payload),\n        }\n        msg.retentionPolicy= \"half_year\"\n        return msg;\n    case \"Sensor3/Err\":\n        msg.payload={\n            Err: Number(msg.payload),\n        }\n        return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 370,
        "y": 241,
        "wires": [
            [
                "d47fd123.52af2",
                "f835ac14.29a9"
            ]
        ],
        "info": "Switch je nach Topic \nund dann in Number wandeln "
    },
    {
        "id": "e35d7f54.4ad1f",
        "type": "function",
        "z": "6f61cfd3.3d721",
        "g": "584f76f1.996908",
        "name": "Sensor2 switch/convert",
        "func": "var topic=msg.topic;\nswitch(topic){\n    case \"Sensor2/fTempA\":\n        msg.payload={\n            fTempA: Number(msg.payload),\n        }\n        \n        return msg;\n    case \"Sensor2/fTempB\":\n        msg.payload={\n            fTempB: Number(msg.payload),\n        }\n        return msg;\n    case \"Sensor2/fVolt\":\n        msg.payload={\n            fVolt: Number(msg.payload),\n        }\n        msg.retentionPolicy= \"half_year\"\n        return msg;\n    case \"Sensor2/Err\":\n        msg.payload={\n            Err: Number(msg.payload),\n        }\n        return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 370,
        "y": 181,
        "wires": [
            [
                "89c4be7a.d8218",
                "b0817e1.cd3198"
            ]
        ]
    },
    {
        "id": "c026e49e.be0588",
        "type": "function",
        "z": "6f61cfd3.3d721",
        "g": "584f76f1.996908",
        "name": "Sensor1 switch/convert",
        "func": "var topic=msg.topic;\nvar TempOut;\nswitch(topic){\n    case \"Sensor1/fTempA\":\n        TempOut = Number(msg.payload);\n        global.set(\"TempOut\",TempOut, \"file\");\n        msg.payload={\n            fTempA: TempOut                       \n        }\n\n       \n        return msg;\n    case \"Sensor1/fTempB\":\n        msg.payload={\n            fTempB: Number(msg.payload),\n        }\n        \n        return msg;\n    case \"Sensor1/fHumi\":\n        msg.payload={\n            fHumi: Number(msg.payload),\n        }\n        return msg;\n    case \"Sensor1/fVolt\":\n        msg.payload={\n            fVolt: Number(msg.payload),\n        }\n        msg.retentionPolicy= \"half_year\"\n        return msg;\n    case \"Sensor1/Err\":\n        msg.payload={\n            Err: Number(msg.payload),\n        }\n        return msg;\n        \n}\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\nglobal.set(\"TempOut\", 10, \"file\");",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 120,
        "wires": [
            [
                "3b080467.ae49dc",
                "046b6a144903991f"
            ]
        ]
    },
    {
        "id": "6a1827c1.d350e8",
        "type": "function",
        "z": "6f61cfd3.3d721",
        "g": "584f76f1.996908",
        "name": "SensorLoc switch/convert",
        "func": "var topic=msg.topic;\nswitch(topic){\n    case \"Sensor0/fTempA\":\n        msg.payload={\n            fTempA: Number(msg.payload),\n        }\n         return msg;\n    case \"Sensor0/fHumi\":\n        if((Number(msg.payload) > 99)) \n        break;\n        msg.payload={\n            fHumi: Number(msg.payload),\n        }\n        return msg;\n    case \"Sensor0/iLight\":\n        if((Number(msg.payload) > 2)) \n        break;\n        msg.payload={\n            iLight: Number(msg.payload),\n        }\n        return msg;\n    case \"Sensor0/iAtmo\":\n        msg.payload={\n            fAtmo: Number(msg.payload),\n        }\n        return msg;\n    case \"Sensor0/Err\":\n        msg.payload={\n            Err: Number(msg.payload),\n        }\n        return msg;\n}\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 61,
        "wires": [
            [
                "15f6ffc8.eb6d3",
                "e414ce6.6f20c3"
            ]
        ]
    },
    {
        "id": "13346bce.a3e684",
        "type": "mqtt in",
        "z": "6f61cfd3.3d721",
        "g": "584f76f1.996908",
        "name": "",
        "topic": "Sensor4/+",
        "qos": "0",
        "datatype": "auto",
        "broker": "19cf2a10.f9d4a6",
        "inputs": 0,
        "x": 120,
        "y": 321,
        "wires": [
            [
                "9dbc98b8.8f08b8"
            ]
        ]
    },
    {
        "id": "9dbc98b8.8f08b8",
        "type": "function",
        "z": "6f61cfd3.3d721",
        "g": "584f76f1.996908",
        "name": "Sensor4 switch/conver",
        "func": "var topic=msg.topic;\nswitch(topic){\n    case \"Sensor4/fTempA\":\n        msg.payload={\n            fTempA: Number(msg.payload),\n        }\n        \n        return msg;\n    case \"Sensor4/fVolt\":\n        msg.payload={\n            fVolt: Number(msg.payload),\n        }\n        return msg;\n    case \"Sensor4/Err\":\n        msg.payload={\n            Err: Number(msg.payload),\n        }\n        return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 360,
        "y": 321,
        "wires": [
            []
        ]
    },
    {
        "id": "d0849bc.1c43168",
        "type": "debug",
        "z": "6f61cfd3.3d721",
        "g": "584f76f1.996908",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 321,
        "wires": []
    },
    {
        "id": "10bda896.f1d857",
        "type": "mqtt in",
        "z": "6f61cfd3.3d721",
        "g": "584f76f1.996908",
        "name": "",
        "topic": "Sensor5/+",
        "qos": "2",
        "datatype": "auto",
        "broker": "19cf2a10.f9d4a6",
        "inputs": 0,
        "x": 120,
        "y": 401,
        "wires": [
            [
                "eced108b.5f3cd"
            ]
        ]
    },
    {
        "id": "eced108b.5f3cd",
        "type": "function",
        "z": "6f61cfd3.3d721",
        "g": "584f76f1.996908",
        "name": "Sensor5 switch/convert",
        "func": "var topic=msg.topic;\nswitch(topic){\n    case \"Sensor5/fTempA\":\n        msg.payload={\n            fTempA: Number(msg.payload),\n        }\n        \n        return msg;\n    case \"Sensor5/fHumi\":\n        if((Number(msg.payload) > 99)) \n        break;\n        msg.payload={\n            fHumi: Number(msg.payload),\n        }\n        return msg;\n    case \"Sensor5/fVolt\":\n        msg.payload={\n            fVolt: Number(msg.payload),\n        }\n        msg.retentionPolicy= \"half_year\"\n        return msg;\n    case \"Sensor5/Err\":\n        msg.payload={\n            Err: Number(msg.payload),\n        }\n        return msg;\n}\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 401,
        "wires": [
            [
                "d0849bc.1c43168",
                "95b11563.82c788"
            ]
        ]
    },
    {
        "id": "e414ce6.6f20c3",
        "type": "debug",
        "z": "6f61cfd3.3d721",
        "g": "584f76f1.996908",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 80,
        "wires": []
    },
    {
        "id": "c772a959.162c98",
        "type": "mqtt in",
        "z": "6f61cfd3.3d721",
        "g": "73d12632.94b388",
        "name": "",
        "topic": "ValveControl/+",
        "qos": "0",
        "datatype": "auto",
        "broker": "19cf2a10.f9d4a6",
        "inputs": 0,
        "x": 620,
        "y": 800,
        "wires": [
            [
                "3bb0fb40.e717e4",
                "d5959449.a47808"
            ]
        ]
    },
    {
        "id": "3bb0fb40.e717e4",
        "type": "debug",
        "z": "6f61cfd3.3d721",
        "g": "73d12632.94b388",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 970,
        "y": 840,
        "wires": []
    },
    {
        "id": "d5959449.a47808",
        "type": "function",
        "z": "6f61cfd3.3d721",
        "g": "73d12632.94b388",
        "name": "",
        "func": "var topic=msg.topic;\nswitch(topic){\n    case \"ValveControl/TempIn\":\n        msg.payload={\n            TempIn: Number(msg.payload),\n        }\n        \n        return msg;\n    case \"ValveControl/TempOut\":\n        msg.payload={\n            TempOut: Number(msg.payload),\n        }\n        \n        return msg;\n    case \"ValveControl/ActPos\":\n        msg.payload={\n            ValveVolt: Number(msg.payload),\n        }\n        return msg;\n    case \"ValveControl/Mode\":\n        msg.payload={\n            ValveMode: Number(msg.payload),\n        }\n        return msg;\n    case \"ValveControl/ManAuto\":\n        msg.payload={\n            ValveControl: msg.payload,\n        }\n        return msg;\n    case \"ValveControl/Light\":\n        msg.payload={\n            WVLight: Number(msg.payload),\n        }\n        return msg;\n}\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 800,
        "wires": [
            [
                "ecec7acf.215678"
            ]
        ]
    },
    {
        "id": "9c8627c.7dea4d8",
        "type": "mqtt in",
        "z": "6f61cfd3.3d721",
        "g": "73d12632.94b388",
        "name": "Error Text",
        "topic": "ValveControl/Err",
        "qos": "2",
        "datatype": "auto",
        "broker": "19cf2a10.f9d4a6",
        "inputs": 0,
        "x": 600,
        "y": 880,
        "wires": [
            [
                "541cf4bd.ec76dc"
            ]
        ]
    },
    {
        "id": "541cf4bd.ec76dc",
        "type": "debug",
        "z": "6f61cfd3.3d721",
        "g": "73d12632.94b388",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 970,
        "y": 900,
        "wires": []
    },
    {
        "id": "3bd8ac1b.081bb4",
        "type": "mqtt in",
        "z": "6f61cfd3.3d721",
        "g": "584f76f1.996908",
        "name": "",
        "topic": "Hom/stat/Olga/iActTemp",
        "qos": "0",
        "datatype": "auto",
        "broker": "19cf2a10.f9d4a6",
        "inputs": 0,
        "x": 170,
        "y": 560,
        "wires": [
            [
                "3ad0e3f6.35a08c"
            ]
        ]
    },
    {
        "id": "3ad0e3f6.35a08c",
        "type": "function",
        "z": "6f61cfd3.3d721",
        "g": "584f76f1.996908",
        "name": "Hom Olga switch/convert",
        "func": "var topic=msg.topic;\nswitch(topic){\n    case \"Hom/stat/Olga/iActTemp\":\n        msg.payload={\n            iActTemp: Number(msg.payload) \n            \n        }\n        return msg;\n\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 410,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "17a551f9.bcd59e",
        "type": "mqtt out",
        "z": "6f61cfd3.3d721",
        "g": "5d7bb23e.6c04ec",
        "name": "",
        "topic": "ValveControl/SetPos",
        "qos": "1",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "19cf2a10.f9d4a6",
        "x": 760,
        "y": 1240,
        "wires": []
    },
    {
        "id": "da2b6e45.21a05",
        "type": "inject",
        "z": "6f61cfd3.3d721",
        "g": "5d7bb23e.6c04ec",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "4",
        "payloadType": "num",
        "x": 140,
        "y": 1240,
        "wires": [
            [
                "17a551f9.bcd59e"
            ]
        ]
    },
    {
        "id": "3c962617.c2f8da",
        "type": "inject",
        "z": "6f61cfd3.3d721",
        "g": "5d7bb23e.6c04ec",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "5",
        "payloadType": "num",
        "x": 140,
        "y": 1300,
        "wires": [
            [
                "17a551f9.bcd59e"
            ]
        ]
    },
    {
        "id": "19222942.f62117",
        "type": "inject",
        "z": "6f61cfd3.3d721",
        "g": "5d7bb23e.6c04ec",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "3",
        "payloadType": "num",
        "x": 140,
        "y": 1180,
        "wires": [
            [
                "17a551f9.bcd59e"
            ]
        ]
    },
    {
        "id": "7b6ccd29.970414",
        "type": "inject",
        "z": "6f61cfd3.3d721",
        "g": "5d7bb23e.6c04ec",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "ValvPos",
        "payload": "0",
        "payloadType": "str",
        "x": 150,
        "y": 1000,
        "wires": [
            [
                "17a551f9.bcd59e"
            ]
        ]
    },
    {
        "id": "20ca1b0c.9a8c24",
        "type": "inject",
        "z": "6f61cfd3.3d721",
        "g": "5d7bb23e.6c04ec",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "2",
        "payloadType": "num",
        "x": 140,
        "y": 1120,
        "wires": [
            [
                "17a551f9.bcd59e"
            ]
        ]
    },
    {
        "id": "a4e3b9e2.4783a8",
        "type": "inject",
        "z": "6f61cfd3.3d721",
        "g": "5d7bb23e.6c04ec",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 140,
        "y": 1060,
        "wires": [
            [
                "17a551f9.bcd59e"
            ]
        ]
    },
    {
        "id": "97b9ac13.ca45c",
        "type": "inject",
        "z": "6f61cfd3.3d721",
        "g": "5d7bb23e.6c04ec",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "3",
        "payloadType": "num",
        "x": 150,
        "y": 1520,
        "wires": [
            [
                "cb6213d.83258f"
            ]
        ]
    },
    {
        "id": "cb6213d.83258f",
        "type": "mqtt out",
        "z": "6f61cfd3.3d721",
        "g": "5d7bb23e.6c04ec",
        "name": "",
        "topic": "ValveControl/SetInt",
        "qos": "0",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "19cf2a10.f9d4a6",
        "x": 390,
        "y": 1520,
        "wires": []
    },
    {
        "id": "130dd598.a91e6a",
        "type": "comment",
        "z": "6f61cfd3.3d721",
        "g": "5d7bb23e.6c04ec",
        "name": "Intervall Stufe 1 und 2",
        "info": "Intervall f√ºr Stufe 1/2",
        "x": 540,
        "y": 1060,
        "wires": []
    },
    {
        "id": "a0fe78c.bc5a188",
        "type": "mqtt in",
        "z": "6f61cfd3.3d721",
        "g": "5d7bb23e.6c04ec",
        "name": "",
        "topic": "Sensor1/fTempA",
        "qos": "0",
        "datatype": "auto",
        "broker": "19cf2a10.f9d4a6",
        "inputs": 0,
        "x": 160,
        "y": 1460,
        "wires": [
            [
                "8823d2b3.3d2ab"
            ]
        ]
    },
    {
        "id": "8823d2b3.3d2ab",
        "type": "json",
        "z": "6f61cfd3.3d721",
        "g": "5d7bb23e.6c04ec",
        "name": "fTempA",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 320,
        "y": 1460,
        "wires": [
            [
                "59893d9f.a33394"
            ]
        ]
    },
    {
        "id": "ed0d92d3.e506c",
        "type": "inject",
        "z": "6f61cfd3.3d721",
        "g": "5d7bb23e.6c04ec",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 150,
        "y": 1560,
        "wires": [
            [
                "cb6213d.83258f"
            ]
        ]
    },
    {
        "id": "6c8377f8.cdd248",
        "type": "link in",
        "z": "6f61cfd3.3d721",
        "g": "5d7bb23e.6c04ec",
        "name": "HeaterNeeded",
        "links": [
            "7fce1939.2cfb98"
        ],
        "x": 115,
        "y": 1360,
        "wires": [
            [
                "89b41e2e.59495"
            ]
        ]
    },
    {
        "id": "89b41e2e.59495",
        "type": "function",
        "z": "6f61cfd3.3d721",
        "g": "5d7bb23e.6c04ec",
        "name": "ValveCalculation V2",
        "func": "var TempOut = 11;\nvar ClockPos = 0;\nvar fTemp = 0;\nvar payload;\n//var o=msg.payload;\nvar bHeaterNeeded = false;\n//We get 3 kinds of input and trigger\n//Clock set valve by time \n//Temp A Outside Temp \n//HeaterNeeded Event if one of the local valve opens\n//The events set global variables, then the calculation logic determines the actual valve pos needed\n//\n//Clock sets a desired Valve Pos dependend on time it is stored. Ony if it \n//is 0 meant to switch off heating independend of heater needed the message\n//is forwarded to Valve.\n//temp only sets a global temp value for outdoor temp\n//heater needed close valve if no heater needed or open to valve position\n//set by Clock\n//msg payload is the valve position to set\nbHeaterNeeded = flow.get(\"HeaterNeeded\", \"file\");\nswitch (msg.topic){\n    case \"ClockValvePos\":\n        ClockPos = msg.payload;\n        flow.set(\"HeaterVentPos\",ClockPos);\n        break;\n    case \"Sensor1/fTempA\":\n        TempOut = msg.payload;\n       // fTemp = Number(TempOut);\n       // global.set(\"TempOut\",fTemp, \"file\");\n        break;\n    case \"HeaterNeeded\":\n        bHeaterNeeded = msg.payload;\n        flow.set(\"HeaterNeeded\",bHeaterNeeded, \"file\");\n        break;\n    default:\n    break;\n}\n//determine valve pos needed\n// always open if temp out less than -2 degrees\n// open if heater needed then use value set by clock\n// close otherwise\n\nif (global.get(\"TempOut\",\"file\") <= '-4'){\n     msg.payload = '5' ;\n     node.status({fill:\"white\",shape:\"ring\",text: \"ColdOutside\"});\n    } \nelse {\n  \n    if (bHeaterNeeded == false) \n    {\n        msg.payload = '0' ;\n        node.status({fill:\"blue\",shape:\"ring\",text: \"Heater not needed\"});\n    }\n    else \n    {\n        msg.payload = flow.get(\"HeaterVentPos\");\n        node.status({fill:\"red\",shape:\"ring\",text: \"Heater set to Clock Value\"});\n    }\n}\n    return msg;\n ",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1360,
        "wires": [
            [
                "17a551f9.bcd59e",
                "fff7a262.d8778"
            ]
        ]
    },
    {
        "id": "fff7a262.d8778",
        "type": "debug",
        "z": "6f61cfd3.3d721",
        "g": "5d7bb23e.6c04ec",
        "name": "Valve Calc V2.0",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 740,
        "y": 1360,
        "wires": []
    },
    {
        "id": "59893d9f.a33394",
        "type": "delay",
        "z": "6f61cfd3.3d721",
        "g": "5d7bb23e.6c04ec",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "10",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "outputs": 1,
        "x": 530,
        "y": 1460,
        "wires": [
            [
                "89b41e2e.59495",
                "bdbb365a.74cc18"
            ]
        ]
    },
    {
        "id": "b0817e1.cd3198",
        "type": "debug",
        "z": "6f61cfd3.3d721",
        "g": "584f76f1.996908",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 900,
        "y": 200,
        "wires": []
    },
    {
        "id": "f835ac14.29a9",
        "type": "debug",
        "z": "6f61cfd3.3d721",
        "g": "584f76f1.996908",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 920,
        "y": 280,
        "wires": []
    },
    {
        "id": "bdbb365a.74cc18",
        "type": "debug",
        "z": "6f61cfd3.3d721",
        "g": "5d7bb23e.6c04ec",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 780,
        "y": 1480,
        "wires": []
    },
    {
        "id": "92311c170fc82c32",
        "type": "link out",
        "z": "6f61cfd3.3d721",
        "g": "584f76f1.996908",
        "name": "Temp Schlafz",
        "mode": "link",
        "links": [
            "17cb0817cb05a53a"
        ],
        "x": 845,
        "y": 160,
        "wires": []
    },
    {
        "id": "15f6ffc8.eb6d3",
        "type": "influxdb out",
        "z": "6f61cfd3.3d721",
        "g": "584f76f1.996908",
        "influxdb": "e3f4c3e8.b52ee",
        "name": "SensorLoc HomAut",
        "measurement": "SensorLoc",
        "precision": "",
        "retentionPolicy": "two_month",
        "database": "",
        "retentionPolicyV18Flux": "",
        "org": "",
        "bucket": "",
        "x": 690,
        "y": 60,
        "wires": []
    },
    {
        "id": "3b080467.ae49dc",
        "type": "influxdb out",
        "z": "6f61cfd3.3d721",
        "g": "584f76f1.996908",
        "influxdb": "e3f4c3e8.b52ee",
        "name": "sSens1 HomAut",
        "measurement": "sSens1",
        "precision": "",
        "retentionPolicy": "two_month",
        "database": "",
        "retentionPolicyV18Flux": "",
        "org": "",
        "bucket": "",
        "x": 680,
        "y": 121,
        "wires": []
    },
    {
        "id": "89c4be7a.d8218",
        "type": "influxdb out",
        "z": "6f61cfd3.3d721",
        "g": "584f76f1.996908",
        "influxdb": "e3f4c3e8.b52ee",
        "name": "sSens2 HomAut",
        "measurement": "sSens2",
        "precision": "",
        "retentionPolicy": "two_month",
        "database": "",
        "retentionPolicyV18Flux": "",
        "org": "",
        "bucket": "",
        "x": 680,
        "y": 181,
        "wires": []
    },
    {
        "id": "d47fd123.52af2",
        "type": "influxdb out",
        "z": "6f61cfd3.3d721",
        "g": "584f76f1.996908",
        "influxdb": "e3f4c3e8.b52ee",
        "name": "sSens3 HomeAut",
        "measurement": "sSens3",
        "precision": "",
        "retentionPolicy": "two_month",
        "database": "",
        "retentionPolicyV18Flux": "",
        "org": "",
        "bucket": "",
        "x": 690,
        "y": 241,
        "wires": []
    },
    {
        "id": "95b11563.82c788",
        "type": "influxdb out",
        "z": "6f61cfd3.3d721",
        "g": "584f76f1.996908",
        "influxdb": "e3f4c3e8.b52ee",
        "name": "sSens5 HomeAut",
        "measurement": "sSens5",
        "precision": "",
        "retentionPolicy": "two_month",
        "database": "",
        "retentionPolicyV18Flux": "",
        "org": "",
        "bucket": "",
        "x": 690,
        "y": 401,
        "wires": []
    },
    {
        "id": "ecec7acf.215678",
        "type": "influxdb out",
        "z": "6f61cfd3.3d721",
        "g": "73d12632.94b388",
        "influxdb": "e3f4c3e8.b52ee",
        "name": "ValveControl",
        "measurement": "ValveControl",
        "precision": "",
        "retentionPolicy": "two_month",
        "database": "",
        "retentionPolicyV18Flux": "",
        "org": "",
        "bucket": "",
        "x": 990,
        "y": 800,
        "wires": []
    },
    {
        "id": "f5d3faae.391998",
        "type": "influxdb out",
        "z": "6f61cfd3.3d721",
        "g": "584f76f1.996908",
        "influxdb": "e3f4c3e8.b52ee",
        "name": "Olga",
        "measurement": "Olga",
        "precision": "",
        "retentionPolicy": "two_month",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 660,
        "y": 560,
        "wires": []
    },
    {
        "id": "a01343a.a42a9c",
        "type": "clock-timer",
        "z": "6f61cfd3.3d721",
        "g": "5d7bb23e.6c04ec",
        "name": "Clock ",
        "topic": "ValvPos",
        "addIdType": "none",
        "addId": "",
        "positionConfig": "9a5a8534.25d4d8",
        "autoTrigger": true,
        "autoTriggerTime": "120000",
        "startDelayTime": 10000,
        "contextStore": "",
        "results": [
            {
                "p": "",
                "pt": "msgTopic",
                "v": "",
                "vt": "topic"
            },
            {
                "p": "",
                "pt": "msgPayload",
                "v": "",
                "vt": "payload"
            },
            {
                "p": "timeCtrl",
                "pt": "msg",
                "v": "",
                "vt": "ctrlObj"
            }
        ],
        "overwriteExpire": "",
        "rules": [
            {
                "index": 0,
                "name": "Fr√ºh Aufheizen",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [],
                "payload": {
                    "type": "str",
                    "value": "5",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000,
                    "format": ""
                },
                "topic": "ClockValvePos",
                "importance": 0,
                "resetOverwrite": false,
                "time": {
                    "type": "entered",
                    "value": "6:15",
                    "operator": 1,
                    "operatorText": "‚Üß from",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000,
                    "days": "*",
                    "months": "*"
                },
                "description": "<div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ‚Üß from <var>6:15</var></div><div><div class=\"indent-payload-text\"><i class=\"fa fa-step-backward\" aria-hidden=\"true\"></i> <span>Payload: </span> <var>\"5\"</var></div><div class=\"indent-topic-text\"> <i class=\"fa fa-tasks\" aria-hidden=\"true\"></i><span>Topic: </span> <var>ClockValvePos</var></div></div>"
            },
            {
                "index": 1,
                "name": "Tag Absenkung ",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [],
                "payload": {
                    "type": "str",
                    "value": "3",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000,
                    "format": ""
                },
                "topic": "ClockValvePos",
                "importance": 0,
                "resetOverwrite": false,
                "time": {
                    "type": "entered",
                    "value": "9:30",
                    "operator": 1,
                    "operatorText": "‚Üß from",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000,
                    "days": "*",
                    "months": "*"
                },
                "description": "<div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ‚Üß from <var>9:30</var></div><div><div class=\"indent-payload-text\"><i class=\"fa fa-step-backward\" aria-hidden=\"true\"></i> <span>Payload: </span> <var>\"3\"</var></div><div class=\"indent-topic-text\"> <i class=\"fa fa-tasks\" aria-hidden=\"true\"></i><span>Topic: </span> <var>ClockValvePos</var></div></div>"
            },
            {
                "index": 2,
                "name": "Mittag Aufheizen",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [],
                "payload": {
                    "type": "str",
                    "value": "4",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000,
                    "format": ""
                },
                "topic": "ClockValvePos",
                "importance": 0,
                "resetOverwrite": false,
                "time": {
                    "type": "entered",
                    "value": "11:30",
                    "operator": 1,
                    "operatorText": "‚Üß from",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000,
                    "days": "*",
                    "months": "*"
                },
                "description": "<div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ‚Üß from <var>11:30</var></div><div><div class=\"indent-payload-text\"><i class=\"fa fa-step-backward\" aria-hidden=\"true\"></i> <span>Payload: </span> <var>\"4\"</var></div><div class=\"indent-topic-text\"> <i class=\"fa fa-tasks\" aria-hidden=\"true\"></i><span>Topic: </span> <var>ClockValvePos</var></div></div>"
            },
            {
                "index": 3,
                "name": "Nachmittag Absenkung",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [],
                "payload": {
                    "type": "str",
                    "value": "3",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000,
                    "format": ""
                },
                "topic": "ClockValvePos",
                "importance": 0,
                "resetOverwrite": false,
                "time": {
                    "type": "entered",
                    "value": "12:30",
                    "operator": 1,
                    "operatorText": "‚Üß von",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000,
                    "days": "*",
                    "months": "*"
                },
                "description": "<div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ‚Üß von <var>12:30</var></div><div><div class=\"indent-payload-text\"><i class=\"fa fa-step-backward\" aria-hidden=\"true\"></i> <span>Payload:</span> <var>\"3\"</var></div><div class=\"indent-topic-text\"> <i class=\"fa fa-tasks\" aria-hidden=\"true\"></i><span>Topic: </span> <var>ClockValvePos</var></div></div>"
            },
            {
                "index": 4,
                "name": "Abend",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [],
                "payload": {
                    "type": "str",
                    "value": "4",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000,
                    "format": ""
                },
                "topic": "ClockValvePos",
                "importance": 0,
                "resetOverwrite": false,
                "time": {
                    "type": "entered",
                    "value": "15:45",
                    "operator": 1,
                    "operatorText": "‚Üß von",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000,
                    "days": "*",
                    "months": "*"
                },
                "description": "<div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ‚Üß von <var>15:45</var></div><div><div class=\"indent-payload-text\"><i class=\"fa fa-step-backward\" aria-hidden=\"true\"></i> <span>Payload:</span> <var>\"4\"</var></div><div class=\"indent-topic-text\"> <i class=\"fa fa-tasks\" aria-hidden=\"true\"></i><span>Topic: </span> <var>ClockValvePos</var></div></div>"
            },
            {
                "index": 5,
                "name": "Sp√§tabend Intervall",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [],
                "payload": {
                    "type": "str",
                    "value": "3",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000,
                    "format": ""
                },
                "topic": "ClockValvePos",
                "importance": 0,
                "resetOverwrite": false,
                "time": {
                    "type": "entered",
                    "value": "22:00",
                    "operator": 1,
                    "operatorText": "‚Üß von",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000,
                    "days": "*",
                    "months": "*"
                },
                "description": "<div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ‚Üß von <var>22:00</var></div><div><div class=\"indent-payload-text\"><i class=\"fa fa-step-backward\" aria-hidden=\"true\"></i> <span>Payload:</span> <var>\"3\"</var></div><div class=\"indent-topic-text\"> <i class=\"fa fa-tasks\" aria-hidden=\"true\"></i><span>Topic: </span> <var>ClockValvePos</var></div></div>"
            },
            {
                "index": 6,
                "name": "Nachtabschaltung",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [
                    {
                        "valueType": "global",
                        "value": "#:(file)::TempOut",
                        "operator": "gt",
                        "operatorText": ">",
                        "thresholdType": "str",
                        "threshold": "1"
                    }
                ],
                "payload": {
                    "type": "str",
                    "value": "0",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000,
                    "format": ""
                },
                "topic": "ClockValvePos",
                "importance": 0,
                "resetOverwrite": false,
                "time": {
                    "type": "entered",
                    "value": "23:30",
                    "operator": 1,
                    "operatorText": "‚Üß from",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000,
                    "days": "*",
                    "months": "*"
                },
                "description": "<div><i class=\"fa fa-code-fork\" aria-hidden=\"true\"></i> <var>global.TempOut</var> > \"1\"</div><div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ‚Üß from <var>23:30</var></div><div><div class=\"indent-payload-text\"><i class=\"fa fa-step-backward\" aria-hidden=\"true\"></i> <span>Payload: </span> <var>\"0\"</var></div><div class=\"indent-topic-text\"> <i class=\"fa fa-tasks\" aria-hidden=\"true\"></i><span>Topic: </span> <var>ClockValvePos</var></div></div>"
            }
        ],
        "payloadDefault": "",
        "payloadDefaultType": "none",
        "payloadDefaultTimeFormat": 0,
        "payloadDefaultOffset": 0,
        "payloadDefaultOffsetType": "none",
        "payloadDefaultOffsetMultiplier": 60000,
        "x": 140,
        "y": 1400,
        "wires": [
            [
                "89b41e2e.59495"
            ],
            []
        ]
    },
    {
        "id": "77108fccf7818c74",
        "type": "mqtt in",
        "z": "6f61cfd3.3d721",
        "g": "584f76f1.996908",
        "name": "",
        "topic": "Sensor6/+",
        "qos": "2",
        "datatype": "auto",
        "broker": "19cf2a10.f9d4a6",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 120,
        "y": 520,
        "wires": [
            [
                "20f8d4c343ab09fe",
                "38b8eb46bdbac086"
            ]
        ]
    },
    {
        "id": "20f8d4c343ab09fe",
        "type": "function",
        "z": "6f61cfd3.3d721",
        "g": "584f76f1.996908",
        "name": "Sensor6 switch/convert",
        "func": "var topic=msg.topic;\nvar iLux;\nvar iRed;\n//do not  save wrong numbers\nif((Number(msg.payload) > 65000)) \nreturn;\nswitch(topic){\n    case \"Sensor6/fTempB\":\n        msg.payload={\n            fTempB: Number(msg.payload),\n        }\n        return msg;\n\n    case \"Sensor6/fHumi\":\n        msg.payload={\n            fHumi: Number(msg.payload) + 1,\n        }\n        return msg;\n    case \"Sensor6/nLux\":\n        iLux = Number(msg.payload);\n        global.set(\"LuxOut\",iLux, \"file\");\n        msg.payload={\n            iLux: Number(msg.payload),\n        }\n             \n        return msg;\n    case \"Sensor6/nRed\":\n        iRed = Number(msg.payload);\n        global.set(\"iRed\",iRed,\"file\");\n        msg.payload={\n            iRed: Number(msg.payload),\n        }\n             \n        return msg;\n    case \"Sensor6/nGreen\":\n        msg.payload={\n            iGreen: Number(msg.payload),\n        }\n       \n        return msg;\n    case \"Sensor6/nBlue\":\n        msg.payload={\n            iBlue: Number(msg.payload),\n        }\n       \n        return msg;\n    case \"Sensor6/nClear\":\n        if((Number(msg.payload) > 30000)) \n        break;\n        msg.payload={\n            iClear: Number(msg.payload),\n        }\n      \n        return msg;\n   \n    case \"Sensor6/nColor\":\n    //do not  save wrong numbers\n    if((Number(msg.payload) == 0)) \n    break;\n\n        msg.payload={\n            iColor: Number(msg.payload),\n        }\n     \n        return msg;\n    case \"Sensor6/Err\":\n        msg.payload={\n            Err: Number(msg.payload),\n        }\n        return msg;\n}\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 520,
        "wires": [
            [
                "3ea1c26a12bbb26e"
            ]
        ]
    },
    {
        "id": "3ea1c26a12bbb26e",
        "type": "influxdb out",
        "z": "6f61cfd3.3d721",
        "g": "584f76f1.996908",
        "influxdb": "e3f4c3e8.b52ee",
        "name": "sSens6 HomeAut",
        "measurement": "sSens6",
        "precision": "",
        "retentionPolicy": "two_month",
        "database": "",
        "retentionPolicyV18Flux": "",
        "org": "",
        "bucket": "",
        "x": 690,
        "y": 520,
        "wires": []
    },
    {
        "id": "38b8eb46bdbac086",
        "type": "function",
        "z": "6f61cfd3.3d721",
        "g": "584f76f1.996908",
        "name": "calculate dew point",
        "func": "var topic=msg.topic;\nif(topic == \"Sensor6/fHumi\")\n{\n    context.set(\"fOutHum\", msg.payload);\n}\nif(topic == \"Sensor6/fTempB\")\n{\n   \n    /*\n    Temperatur √ºber 0 ¬∞ C: k2=17.62, k3=243.12\n    Temperatur 0 ¬∞ C oder darunter: k2=22.46, k3=272.62\n    Temperatur t, Luftfeuchtigkeit l\n    Taupunkt = k3*((k2*t)/(k3+t)+ln(l/100))/((k2*k3)/(k3+t)-ln(l/100))\n    */\n    var r = parseFloat(context.get(\"fOutHum\"));\n    var t=parseFloat(msg.payload);\n\n    var k2, k3;\n    var TD;\n    if(t > 0)\n    {\n        k2=17.62;\n        k3=243.12;\n    }\n    else\n    {\n        k2=22.46;\n        k3=272.62;\n    }\n    \n    TD = k3*((k2*t)/(k3+t)+ Math.log(r/100))/((k2*k3)/(k3+t)-Math.log(r/100));\n    TD = TD.toFixed(2);\n    msg.payload={\n            fDewP: Number(TD),\n        }\n\n\n        return msg;\n}\n        \n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 460,
        "wires": [
            [
                "f76db29b82c7afec",
                "3ea1c26a12bbb26e"
            ]
        ]
    },
    {
        "id": "f76db29b82c7afec",
        "type": "debug",
        "z": "6f61cfd3.3d721",
        "g": "584f76f1.996908",
        "name": "debug 52",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 640,
        "y": 440,
        "wires": []
    },
    {
        "id": "046b6a144903991f",
        "type": "debug",
        "z": "6f61cfd3.3d721",
        "g": "584f76f1.996908",
        "name": "debug 77",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 860,
        "y": 120,
        "wires": []
    },
    {
        "id": "404dde09.449bf",
        "type": "mqtt out",
        "z": "265d3756.5a1d68",
        "name": "Homematic Command Out",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "19cf2a10.f9d4a6",
        "x": 1100,
        "y": 820,
        "wires": []
    },
    {
        "id": "5c3137f1.b5ec18",
        "type": "mqtt in",
        "z": "265d3756.5a1d68",
        "g": "40936a6d.e4bc64",
        "name": "",
        "topic": "Hom/stat/Olga/+",
        "qos": "0",
        "datatype": "auto",
        "broker": "19cf2a10.f9d4a6",
        "inputs": 0,
        "x": 120,
        "y": 640,
        "wires": [
            [
                "acdf657a.72a3b8",
                "130b2e36.ca9eb2"
            ]
        ]
    },
    {
        "id": "acdf657a.72a3b8",
        "type": "function",
        "z": "265d3756.5a1d68",
        "g": "40936a6d.e4bc64",
        "name": "",
        "func": "var topic=msg.topic;\nvar iVentValue = 0;\nswitch(topic){\n    case \"Hom/stat/Olga/iVent\":\n        iVentValue = Number(msg.payload) \n        flow.set(\"iVentOlga\", iVentValue , \"file\")\n        msg.payload={\n            iVent: iVentValue\n            }\n        return msg;\n   case \"Hom/stat/Olga/iSetTemp\":\n        msg.payload={\n            iSetTemp: Number(msg.payload)            \n        }\n        return msg;\n   case \"Hom/stat/Olga/iActHumi\":\n        msg.payload={\n            iActHumi: Number(msg.payload)             \n        }\n        return msg;\n   case \"Hom/stat/Olga/iActTemp\":\n        msg.payload={\n            iActTemp: Number(msg.payload)             \n        }\n        return msg;\n\n   \n}\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\n//flow.set(\"iVentOlga\", 0, \"file\")",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 640,
        "wires": [
            [
                "e1622e38.47b46"
            ]
        ]
    },
    {
        "id": "130b2e36.ca9eb2",
        "type": "switch",
        "z": "265d3756.5a1d68",
        "g": "40936a6d.e4bc64",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Hom/stat/Olga/iSetTemp",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 370,
        "y": 700,
        "wires": [
            [
                "f05b3b99.e44618"
            ]
        ]
    },
    {
        "id": "b2eaa5c4.14f408",
        "type": "mqtt in",
        "z": "265d3756.5a1d68",
        "g": "b9a71c35.b8ccf",
        "name": "",
        "topic": "Hom/stat/Tom/+",
        "qos": "0",
        "datatype": "auto",
        "broker": "19cf2a10.f9d4a6",
        "inputs": 0,
        "x": 120,
        "y": 800,
        "wires": [
            [
                "e016da34.64e308",
                "aa219fc1.1a6e2"
            ]
        ]
    },
    {
        "id": "e016da34.64e308",
        "type": "function",
        "z": "265d3756.5a1d68",
        "g": "b9a71c35.b8ccf",
        "name": "",
        "func": "var topic=msg.topic;\nvar i = 0;\nswitch(topic){\n    case \"Hom/stat/Tom/iVent\":\n        i = Number(msg.payload);\n        msg.payload={\n            iVent: Number(msg.payload) }\n            flow.set(\"iVentTom\",i, \"file\")\n        return msg;\n   case \"Hom/stat/Tom/iSetTemp\":\n        msg.payload={\n            iSetTemp: Number(msg.payload) \n         }\n        return msg;\n\n   \n}\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\n//flow.set(\"iVentTom\", 0, \"file\")",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 800,
        "wires": [
            [
                "65e988da.f6b958"
            ]
        ]
    },
    {
        "id": "aa219fc1.1a6e2",
        "type": "switch",
        "z": "265d3756.5a1d68",
        "g": "b9a71c35.b8ccf",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Hom/stat/Tom/iSetTemp",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 370,
        "y": 880,
        "wires": [
            [
                "3954e69e.21d60a"
            ]
        ]
    },
    {
        "id": "ae0f7157.7d2e7",
        "type": "debug",
        "z": "265d3756.5a1d68",
        "g": "b9a71c35.b8ccf",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 770,
        "y": 880,
        "wires": []
    },
    {
        "id": "9ed6a24d.c8feb",
        "type": "mqtt in",
        "z": "265d3756.5a1d68",
        "g": "3644af6d.d42f6",
        "name": "",
        "topic": "Hom/stat/Wohnz/+",
        "qos": "0",
        "datatype": "auto",
        "broker": "19cf2a10.f9d4a6",
        "inputs": 0,
        "x": 130,
        "y": 60,
        "wires": [
            [
                "c12c999c.1ace08",
                "8de8f997.bf7e18",
                "3d0abac7.6df4e6"
            ]
        ]
    },
    {
        "id": "8de8f997.bf7e18",
        "type": "switch",
        "z": "265d3756.5a1d68",
        "g": "3644af6d.d42f6",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Hom/stat/Wohnz/bBalkont√ºreAuf",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 250,
        "y": 120,
        "wires": [
            [
                "38d7b5c0.b2603a"
            ]
        ]
    },
    {
        "id": "c12c999c.1ace08",
        "type": "function",
        "z": "265d3756.5a1d68",
        "g": "3644af6d.d42f6",
        "name": "",
        "func": "var topic=msg.topic;\nvar iVentValue;\nswitch(topic){\n    case \"Hom/stat/Wohnz/iActHumi\":\n        msg.payload={\n            iActHumi: Number(msg.payload)             \n        }\n        return msg;\n    case \"Hom/stat/Wohnz/iVentEck\":\n        iVentValue = Number(msg.payload)\n        flow.set(\"iVentEck\", iVentValue, \"file\")\n         msg.payload={\n            iVentEck:  iVentValue\n         }\n        return msg;\n   case \"Hom/stat/Wohnz/iVentEss\":\n        iVentValue = Number(msg.payload)\n        flow.set(\"iVentEss\", iVentValue,\"file\")\n         msg.payload={\n            iVentEss:  iVentValue\n         }\n        return msg;\n    case \"Hom/stat/Wohnz/iSetTemp\":\n        msg.payload={\n            iSetTemp: Number(msg.payload) \n            \n        }\n        return msg;\n    case \"Hom/stat/Wohnz/iActTemp\":\n        msg.payload={\n            iActTemp: Number(msg.payload) \n            \n        }\n\n        return msg;\n         \n}\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\n//flow.set(\"iVentEck\",0, \"file\")\n//flow.set(\"iVentEss\", 0, \"file\")",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 60,
        "wires": [
            [
                "17d18fc0.b21c7",
                "7365b52e.c6858c",
                "1bd2faf182fb3f8a"
            ]
        ]
    },
    {
        "id": "c70dc234.9d2b2",
        "type": "mqtt in",
        "z": "265d3756.5a1d68",
        "g": "3644af6d.d42f6",
        "name": "",
        "topic": "Hom/stat/Wohnz/bBalkont√ºreAuf",
        "qos": "0",
        "datatype": "auto",
        "broker": "19cf2a10.f9d4a6",
        "inputs": 0,
        "x": 190,
        "y": 340,
        "wires": [
            [
                "e6e8fe31.e3e38",
                "e38e18ad.3476f8"
            ]
        ]
    },
    {
        "id": "e6e8fe31.e3e38",
        "type": "debug",
        "z": "265d3756.5a1d68",
        "g": "3644af6d.d42f6",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 590,
        "y": 340,
        "wires": []
    },
    {
        "id": "38d7b5c0.b2603a",
        "type": "change",
        "z": "265d3756.5a1d68",
        "g": "3644af6d.d42f6",
        "name": "Balkont√ºre",
        "rules": [
            {
                "t": "set",
                "p": "#:(file)::BalkonOffen",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "e38e18ad.3476f8",
        "type": "link out",
        "z": "265d3756.5a1d68",
        "g": "3644af6d.d42f6",
        "name": "Balkont√ºre Offen",
        "links": [
            "18eca755.0bbeb9"
        ],
        "x": 435,
        "y": 300,
        "wires": []
    },
    {
        "id": "3d0abac7.6df4e6",
        "type": "switch",
        "z": "265d3756.5a1d68",
        "g": "3644af6d.d42f6",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Hom/stat/Wohnz/iSetTemp",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 250,
        "y": 220,
        "wires": [
            [
                "1df28e68.76cf02",
                "529c3dd9.9b5374"
            ]
        ]
    },
    {
        "id": "529c3dd9.9b5374",
        "type": "debug",
        "z": "265d3756.5a1d68",
        "g": "3644af6d.d42f6",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 370,
        "y": 180,
        "wires": []
    },
    {
        "id": "7365b52e.c6858c",
        "type": "debug",
        "z": "265d3756.5a1d68",
        "g": "3644af6d.d42f6",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 550,
        "y": 160,
        "wires": []
    },
    {
        "id": "ddb9da78.77be18",
        "type": "function",
        "z": "265d3756.5a1d68",
        "g": "5e94d88a.fb01e8",
        "name": "Heater Needed",
        "func": "var topic=msg.topic;\nvar i = 0;\nswitch(topic){\n    case \"Hom/stat/Wohnz/iVentEck\":\n    case \"Hom/stat/Wohnz/iVentEss\":\n    case \"Hom/stat/Olga/iVent\":\n    case \"Hom/stat/Bad/iVent\":\n    case \"Hom/stat/Schlafz/iVent\":\n    case \"Hom/stat/Tom/iVent\":\n       i = flow.get(\"iVentEss\", \"file\") + flow.get(\"iVentEck\", \"file\")\n       + flow.get(\"iVentTom\", \"file\")  + flow.get(\"iVentOlga\", \"file\")\n       + flow.get(\"iVentBad\", \"file\")  + flow.get(\"iVentSchlafz\", \"file\")\n       if (i > 0) msg.payload= true\n       else msg.payload = false\n       msg.value = i;\n    return msg;\n   \n}\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is deployed.\n flow.set(\"iVentEss\", 0)\n flow.set(\"iVentEck\", 0)\n flow.set(\"iVentOlga\", 0)\n flow.set(\"iVentTom\", 0)",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 1560,
        "wires": [
            [
                "f0b72f63.75383"
            ]
        ]
    },
    {
        "id": "2a95bc9b.1c66a4",
        "type": "mqtt in",
        "z": "265d3756.5a1d68",
        "g": "5e94d88a.fb01e8",
        "name": "",
        "topic": "Hom/stat/#",
        "qos": "0",
        "datatype": "auto",
        "broker": "19cf2a10.f9d4a6",
        "inputs": 0,
        "x": 100,
        "y": 1580,
        "wires": [
            [
                "77634598.aeeb5c",
                "120d4f01cac39998"
            ]
        ]
    },
    {
        "id": "89c04ca8.7c10c",
        "type": "debug",
        "z": "265d3756.5a1d68",
        "g": "5e94d88a.fb01e8",
        "name": "Heater needed",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 960,
        "y": 1620,
        "wires": []
    },
    {
        "id": "7fce1939.2cfb98",
        "type": "link out",
        "z": "265d3756.5a1d68",
        "g": "5e94d88a.fb01e8",
        "name": "",
        "mode": "link",
        "links": [
            "6c8377f8.cdd248"
        ],
        "x": 895,
        "y": 1580,
        "wires": []
    },
    {
        "id": "f0b72f63.75383",
        "type": "change",
        "z": "265d3756.5a1d68",
        "g": "5e94d88a.fb01e8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "HeaterNeeded",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 1580,
        "wires": [
            [
                "7fce1939.2cfb98",
                "89c04ca8.7c10c"
            ]
        ]
    },
    {
        "id": "77634598.aeeb5c",
        "type": "delay",
        "z": "265d3756.5a1d68",
        "g": "5e94d88a.fb01e8",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 280,
        "y": 1560,
        "wires": [
            [
                "ddb9da78.77be18",
                "5b9db628891c8ab5"
            ]
        ]
    },
    {
        "id": "52626602.a80e18",
        "type": "inject",
        "z": "265d3756.5a1d68",
        "g": "5e94d88a.fb01e8",
        "name": "Trigger calculation at start",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "2",
        "topic": "Hom/stat/Wohnz/iVentEck",
        "payload": "5",
        "payloadType": "str",
        "x": 170,
        "y": 1640,
        "wires": [
            [
                "ddb9da78.77be18"
            ]
        ]
    },
    {
        "id": "64c0d9cf.dd5978",
        "type": "mqtt out",
        "z": "265d3756.5a1d68",
        "g": "3644af6d.d42f6",
        "name": "",
        "topic": "Hom/cmd/Wohnz/iSetProg",
        "qos": "0",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "19cf2a10.f9d4a6",
        "x": 640,
        "y": 420,
        "wires": []
    },
    {
        "id": "fa90773d.feded8",
        "type": "function",
        "z": "265d3756.5a1d68",
        "g": "3644af6d.d42f6",
        "name": "Program on Holiday",
        "func": "var holiday = global.get(\"day.today.isHoliday\");\nvar outTemp = global.get(\"TempOut\", \"file\");\nif(holiday){\n    msg.payload = 2; //Ferien Programm\n     node.status({fill:\"red\",shape:\"ring\",text:\"2: holiday\"});\n}\nelse {\n    if(outTemp > 14)  {\n    msg.payload =  3; //Sommer Programm\n    node.status({fill:\"yellow\",shape:\"ring\",text: \"3: summer\"});\n    }\n    else  {\n    msg.payload = 1; //WinterProgramm\n    node.status({fill:\"green\",shape:\"ring\",text: \"1: winter\"});\n}}\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 420,
        "wires": [
            [
                "64c0d9cf.dd5978",
                "562300c7.4b952"
            ]
        ]
    },
    {
        "id": "33e7c443.634e4c",
        "type": "inject",
        "z": "265d3756.5a1d68",
        "g": "3644af6d.d42f6",
        "name": "Temp Check",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "*/30 7-22 * * *",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 420,
        "wires": [
            [
                "fa90773d.feded8",
                "a75bf925.381958"
            ]
        ]
    },
    {
        "id": "562300c7.4b952",
        "type": "debug",
        "z": "265d3756.5a1d68",
        "g": "3644af6d.d42f6",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 620,
        "y": 500,
        "wires": []
    },
    {
        "id": "a75bf925.381958",
        "type": "debug",
        "z": "265d3756.5a1d68",
        "g": "3644af6d.d42f6",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 320,
        "y": 500,
        "wires": []
    },
    {
        "id": "4f575270.86d46c",
        "type": "inject",
        "z": "265d3756.5a1d68",
        "g": "3644af6d.d42f6",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "2",
        "payloadType": "num",
        "x": 410,
        "y": 460,
        "wires": [
            [
                "64c0d9cf.dd5978"
            ]
        ]
    },
    {
        "id": "2c449541cbdef5dc",
        "type": "mqtt in",
        "z": "265d3756.5a1d68",
        "g": "9632f8fb2bd4fa59",
        "name": "",
        "topic": "Hom/stat/Bad/+",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "19cf2a10.f9d4a6",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 120,
        "y": 980,
        "wires": [
            [
                "1d345c7ff6c674c8",
                "a3387d93bf10d65a"
            ]
        ]
    },
    {
        "id": "1d345c7ff6c674c8",
        "type": "function",
        "z": "265d3756.5a1d68",
        "g": "9632f8fb2bd4fa59",
        "name": "function 1",
        "func": "var topic=msg.topic;\nvar i = 0;\nswitch(topic){\n    case \"Hom/stat/Bad/iVent\":\n        i = Number(msg.payload);\n        msg.payload={\n            iVent: Number(msg.payload) }\n            flow.set(\"iVentBad\",i, \"file\")\n   \n       \n        return msg;\n   case \"Hom/stat/Bad/iSetTemp\":\n        msg.payload={\n            iSetTemp: Number(msg.payload) \n            \n        }\n        return msg;\n    case \"Hom/stat/Bad/iActTemp\":\n        msg.payload={\n            iActTemp: Number(msg.payload) \n            \n        }\n        return msg;\n    case \"Hom/stat/Bad/iActHumi\":\n        msg.payload={\n            iActHumi: Number(msg.payload) \n            \n        }\n        return msg;\n\n   \n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\n//flow.set(\"iVentBad\", 4, \"file\")",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 980,
        "wires": [
            [
                "8f07a6fbf012ba0a"
            ]
        ]
    },
    {
        "id": "54e47a03f8e6baba",
        "type": "debug",
        "z": "265d3756.5a1d68",
        "g": "9632f8fb2bd4fa59",
        "name": "BadSetTemp",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 790,
        "y": 1040,
        "wires": []
    },
    {
        "id": "a3387d93bf10d65a",
        "type": "switch",
        "z": "265d3756.5a1d68",
        "g": "9632f8fb2bd4fa59",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Hom/stat/Bad/iSetTemp",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 370,
        "y": 1040,
        "wires": [
            [
                "f0f0653855c693db"
            ]
        ]
    },
    {
        "id": "c7376c1f34d5851e",
        "type": "function",
        "z": "265d3756.5a1d68",
        "g": "492449f2a284d6d7",
        "name": "function 2",
        "func": "var topic = msg.topic;\nvar i = 0;\nswitch (topic) {\n    case \"Hom/stat/Schlafz/iVent\":\n        i = Number(msg.payload);\n        msg.payload = {\n            iVent: Number(msg.payload)\n        }\n        flow.set(\"iVentSchlafz\", i, \"file\")\n\n\n        return msg;\n    case \"Hom/stat/Schlafz/iSetTemp\":\n        msg.payload = {\n            iSetTemp: Number(msg.payload)\n\n        }\n        return msg;\n    case \"Hom/stat/Schlafz/iActTemp\":\n        msg.payload = {\n            iActTemp: Number(msg.payload)\n\n        }\n        return msg;\n    case \"Hom/stat/Schlafz/iActHumi\":\n        msg.payload = {\n            iActHumi: Number(msg.payload)\n\n        }\n        return msg;\n\n\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\n//flow.set(\"iVentSchlafz\", 0, \"file\")",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 1140,
        "wires": [
            [
                "9987df64e7156316",
                "5c01553b5435fa0a"
            ]
        ]
    },
    {
        "id": "b31b88a99f16cc44",
        "type": "switch",
        "z": "265d3756.5a1d68",
        "g": "492449f2a284d6d7",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Hom/stat/Schlafz/iSetTemp",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 370,
        "y": 1220,
        "wires": [
            [
                "5ca3e8fef88b5b22"
            ]
        ]
    },
    {
        "id": "ce590a0d1069ae2d",
        "type": "mqtt in",
        "z": "265d3756.5a1d68",
        "g": "492449f2a284d6d7",
        "name": "",
        "topic": "Hom/stat/Schlafz/+",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "19cf2a10.f9d4a6",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 130,
        "y": 1140,
        "wires": [
            [
                "c7376c1f34d5851e",
                "b31b88a99f16cc44",
                "bec11c3a8731a1ef"
            ]
        ]
    },
    {
        "id": "a448e0f6c950f185",
        "type": "debug",
        "z": "265d3756.5a1d68",
        "g": "492449f2a284d6d7",
        "name": "Schlafz Fenster offen",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 640,
        "y": 1320,
        "wires": []
    },
    {
        "id": "e0160b9e060c6bab",
        "type": "link out",
        "z": "265d3756.5a1d68",
        "g": "492449f2a284d6d7",
        "name": "Schlafzimmer Fenster Offen",
        "mode": "link",
        "links": [
            "08d6a70148e843af"
        ],
        "x": 545,
        "y": 1280,
        "wires": []
    },
    {
        "id": "120d4f01cac39998",
        "type": "debug",
        "z": "265d3756.5a1d68",
        "g": "5e94d88a.fb01e8",
        "name": "debug 30",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 460,
        "y": 1640,
        "wires": []
    },
    {
        "id": "e1622e38.47b46",
        "type": "influxdb out",
        "z": "265d3756.5a1d68",
        "g": "40936a6d.e4bc64",
        "influxdb": "e3f4c3e8.b52ee",
        "name": "HomeMatic Olga",
        "measurement": "Olga",
        "precision": "",
        "retentionPolicy": "two_month",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 610,
        "y": 640,
        "wires": []
    },
    {
        "id": "65e988da.f6b958",
        "type": "influxdb out",
        "z": "265d3756.5a1d68",
        "g": "b9a71c35.b8ccf",
        "influxdb": "e3f4c3e8.b52ee",
        "name": "HomeMatic Tom",
        "measurement": "Tom",
        "precision": "",
        "retentionPolicy": "two_month",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 590,
        "y": 800,
        "wires": []
    },
    {
        "id": "17d18fc0.b21c7",
        "type": "influxdb out",
        "z": "265d3756.5a1d68",
        "g": "3644af6d.d42f6",
        "influxdb": "e3f4c3e8.b52ee",
        "name": "Homematic Wohnzimmer",
        "measurement": "Wohnz",
        "precision": "",
        "retentionPolicy": "two_month",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 610,
        "y": 60,
        "wires": []
    },
    {
        "id": "8f07a6fbf012ba0a",
        "type": "influxdb out",
        "z": "265d3756.5a1d68",
        "g": "9632f8fb2bd4fa59",
        "influxdb": "e3f4c3e8.b52ee",
        "name": "HomeMatic Bad",
        "measurement": "Bad",
        "precision": "",
        "retentionPolicy": "two_month",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 600,
        "y": 980,
        "wires": []
    },
    {
        "id": "9987df64e7156316",
        "type": "influxdb out",
        "z": "265d3756.5a1d68",
        "g": "492449f2a284d6d7",
        "influxdb": "e3f4c3e8.b52ee",
        "name": "HomeMatic Schlafz",
        "measurement": "Schlafz",
        "precision": "",
        "retentionPolicy": "two_month",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 610,
        "y": 1140,
        "wires": []
    },
    {
        "id": "f05b3b99.e44618",
        "type": "ui_slider",
        "z": "265d3756.5a1d68",
        "g": "40936a6d.e4bc64",
        "name": "OlgaSetTemp",
        "label": "Olga",
        "tooltip": "",
        "group": "5b512b5d.99aec4",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "outs": "end",
        "topic": "Hom/cmd/Olga/iSetTemp",
        "topicType": "str",
        "min": "15",
        "max": "30",
        "step": "0.5",
        "className": "",
        "x": 600,
        "y": 700,
        "wires": [
            [
                "404dde09.449bf"
            ]
        ]
    },
    {
        "id": "3954e69e.21d60a",
        "type": "ui_slider",
        "z": "265d3756.5a1d68",
        "g": "b9a71c35.b8ccf",
        "name": "TomSetTemp",
        "label": "Tom",
        "tooltip": "",
        "group": "5b512b5d.99aec4",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "outs": "end",
        "topic": "Hom/cmd/Tom/iSetTemp",
        "topicType": "str",
        "min": "15",
        "max": "30",
        "step": "0.5",
        "className": "",
        "x": 580,
        "y": 880,
        "wires": [
            [
                "404dde09.449bf",
                "ae0f7157.7d2e7"
            ]
        ]
    },
    {
        "id": "1df28e68.76cf02",
        "type": "ui_slider",
        "z": "265d3756.5a1d68",
        "g": "3644af6d.d42f6",
        "name": "WohnzimmerTemp",
        "label": "Wohn",
        "tooltip": "",
        "group": "5b512b5d.99aec4",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "outs": "end",
        "topic": "Hom/cmd/Wohnz/iSetTemp",
        "topicType": "str",
        "min": "15",
        "max": "30",
        "step": "0.5",
        "className": "",
        "x": 590,
        "y": 220,
        "wires": [
            [
                "404dde09.449bf"
            ]
        ]
    },
    {
        "id": "f0f0653855c693db",
        "type": "ui_slider",
        "z": "265d3756.5a1d68",
        "g": "9632f8fb2bd4fa59",
        "name": "BadSetTemp",
        "label": "Bad",
        "tooltip": "",
        "group": "5b512b5d.99aec4",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "outs": "end",
        "topic": "Hom/cmd/Bad/iSetTemp",
        "topicType": "str",
        "min": "15",
        "max": "30",
        "step": "0.5",
        "className": "",
        "x": 590,
        "y": 1040,
        "wires": [
            [
                "54e47a03f8e6baba",
                "404dde09.449bf"
            ]
        ]
    },
    {
        "id": "5ca3e8fef88b5b22",
        "type": "ui_slider",
        "z": "265d3756.5a1d68",
        "g": "492449f2a284d6d7",
        "name": "SchlafzSetTemp",
        "label": "Schlafzi",
        "tooltip": "",
        "group": "5b512b5d.99aec4",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "outs": "end",
        "topic": "Hom/cmd/Schlafz/iSetTemp",
        "topicType": "str",
        "min": "15",
        "max": "30",
        "step": "0.5",
        "className": "",
        "x": 600,
        "y": 1220,
        "wires": [
            [
                "404dde09.449bf"
            ]
        ]
    },
    {
        "id": "5b9db628891c8ab5",
        "type": "debug",
        "z": "265d3756.5a1d68",
        "g": "5e94d88a.fb01e8",
        "name": "debug 35",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 1640,
        "wires": []
    },
    {
        "id": "f79803a413570de7",
        "type": "mqtt out",
        "z": "265d3756.5a1d68",
        "g": "bc3df6523c98c42b",
        "name": "Wohnz Luftbefeuchter",
        "topic": "ShellyPlug1/rpc",
        "qos": "1",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "19cf2a10.f9d4a6",
        "x": 600,
        "y": 1820,
        "wires": []
    },
    {
        "id": "1b7db04087fe86cc",
        "type": "change",
        "z": "265d3756.5a1d68",
        "g": "bc3df6523c98c42b",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "ON",
                "fromt": "str",
                "to": "{\"id\":0,\"src\":\"mqtt\",\"method\":\"Switch.Set\",\"params\":{\"id\":0,\"on\":true}}",
                "tot": "json"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "OFF",
                "fromt": "str",
                "to": "{\"id\":0,\"src\":\"mqtt\",\"method\":\"Switch.Set\",\"params\":{\"id\":0,\"on\":false}}",
                "tot": "json"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "DAY",
                "fromt": "str",
                "to": "{\"id\":0,\"src\":\"mqtt\",\"method\":\"PLUGS_UI.SetConfig\",\"params\":{\"config\":{\"leds\":{\"mode\":\"switch\",\"colors\":{\"switch:0\":{\"on\":{\"rgb\":[0,100,0],\"brightness\":100},\"off\":{\"rgb\":[100,0,0],\"brightness\":100}}}}}}}",
                "tot": "json"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "NIGHT",
                "fromt": "str",
                "to": "{\"id\":0,\"src\":\"mqtt\",\"method\":\"PLUGS_UI.SetConfig\",\"params\":{\"config\":{\"leds\":{\"mode\":\"switch\",\"colors\":{\"switch:0\":{\"on\":{\"rgb\":[0,100,100],\"brightness\":30},\"off\":{\"rgb\":[0,0,100],\"brightness\":30}}}}}}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 360,
        "y": 1820,
        "wires": [
            [
                "f79803a413570de7"
            ]
        ]
    },
    {
        "id": "d5599294c6dead65",
        "type": "inject",
        "z": "265d3756.5a1d68",
        "g": "bc3df6523c98c42b",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "NIGHT",
        "payloadType": "str",
        "x": 110,
        "y": 1920,
        "wires": [
            [
                "1b7db04087fe86cc"
            ]
        ]
    },
    {
        "id": "888771d5bf10f2ab",
        "type": "inject",
        "z": "265d3756.5a1d68",
        "g": "bc3df6523c98c42b",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "DAY",
        "payloadType": "str",
        "x": 110,
        "y": 1880,
        "wires": [
            [
                "1b7db04087fe86cc"
            ]
        ]
    },
    {
        "id": "a8369be11ebe74cf",
        "type": "clock-timer",
        "z": "265d3756.5a1d68",
        "g": "bc3df6523c98c42b",
        "name": "",
        "topic": "",
        "addIdType": "none",
        "addId": "",
        "positionConfig": "9a5a8534.25d4d8",
        "autoTrigger": true,
        "autoTriggerTime": "60000",
        "startDelayTime": 10000,
        "contextStore": "",
        "results": [
            {
                "p": "",
                "pt": "msgTopic",
                "v": "",
                "vt": "topic"
            },
            {
                "p": "",
                "pt": "msgPayload",
                "v": "",
                "vt": "payload"
            },
            {
                "p": "timeCtrl",
                "pt": "msg",
                "v": "",
                "vt": "ctrlObj"
            }
        ],
        "overwriteExpire": "",
        "rules": [
            {
                "index": 0,
                "name": "Weihnachststern ein",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [],
                "payload": {
                    "type": "str",
                    "value": "ON",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000,
                    "format": ""
                },
                "topic": "",
                "importance": 0,
                "resetOverwrite": false,
                "time": {
                    "type": "pdsTime",
                    "value": "sunsetStart",
                    "operator": 1,
                    "operatorText": "‚Üß from",
                    "offsetType": "num",
                    "offset": "-10",
                    "multiplier": 60000,
                    "days": "*",
                    "months": "*"
                },
                "description": "<div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ‚Üß from <var>sunset start</var> - 00:10</div><div><div class=\"indent-payload-text\"><i class=\"fa fa-step-backward\" aria-hidden=\"true\"></i> <span>Payload: </span> <var>\"ON\"</var></div></div>"
            },
            {
                "index": 1,
                "name": "",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [],
                "payload": {
                    "type": "str",
                    "value": "OFF",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000,
                    "format": ""
                },
                "topic": "",
                "importance": 0,
                "resetOverwrite": false,
                "time": {
                    "type": "entered",
                    "value": "23:00",
                    "operator": 1,
                    "operatorText": "‚Üß from",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000,
                    "days": "*",
                    "months": "*"
                },
                "description": "<div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ‚Üß from <var>23:00</var></div><div><div class=\"indent-payload-text\"><i class=\"fa fa-step-backward\" aria-hidden=\"true\"></i> <span>Payload: </span> <var>\"OFF\"</var></div></div>"
            }
        ],
        "payloadDefault": "OFF",
        "payloadDefaultType": "str",
        "payloadDefaultTimeFormat": 0,
        "payloadDefaultOffset": 0,
        "payloadDefaultOffsetType": "none",
        "payloadDefaultOffsetMultiplier": 60000,
        "x": 110,
        "y": 1760,
        "wires": [
            [
                "1b7db04087fe86cc",
                "dc12148c24f84fe9"
            ],
            []
        ]
    },
    {
        "id": "96617e9bd5cb6c1a",
        "type": "clock-timer",
        "z": "265d3756.5a1d68",
        "g": "bc3df6523c98c42b",
        "name": "Night Mode",
        "topic": "",
        "addIdType": "none",
        "addId": "",
        "positionConfig": "9a5a8534.25d4d8",
        "autoTrigger": true,
        "autoTriggerTime": "60000",
        "startDelayTime": 10000,
        "contextStore": "",
        "results": [
            {
                "p": "",
                "pt": "msgTopic",
                "v": "",
                "vt": "topic"
            },
            {
                "p": "",
                "pt": "msgPayload",
                "v": "",
                "vt": "payload"
            },
            {
                "p": "timeCtrl",
                "pt": "msg",
                "v": "",
                "vt": "ctrlObj"
            }
        ],
        "overwriteExpire": "",
        "rules": [
            {
                "index": 0,
                "name": "Day",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [],
                "payload": {
                    "type": "str",
                    "value": "DAY",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000,
                    "format": ""
                },
                "topic": "",
                "importance": 0,
                "resetOverwrite": false,
                "time": {
                    "type": "entered",
                    "value": "9:05",
                    "operator": 1,
                    "operatorText": "‚Üß from",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000,
                    "days": "*",
                    "months": "*"
                },
                "description": "<div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ‚Üß from <var>9:05</var></div><div><div class=\"indent-payload-text\"><i class=\"fa fa-step-backward\" aria-hidden=\"true\"></i> <span>Payload: </span> <var>\"DAY\"</var></div></div>"
            },
            {
                "index": 1,
                "name": "NIGHT",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [],
                "payload": {
                    "type": "str",
                    "value": "NIGHT",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000,
                    "format": ""
                },
                "topic": "",
                "importance": 0,
                "resetOverwrite": false,
                "time": {
                    "type": "entered",
                    "value": "18:45",
                    "operator": 1,
                    "operatorText": "‚Üß from",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000,
                    "days": "*",
                    "months": "*"
                },
                "description": "<div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ‚Üß from <var>18:45</var></div><div><div class=\"indent-payload-text\"><i class=\"fa fa-step-backward\" aria-hidden=\"true\"></i> <span>Payload: </span> <var>\"NIGHT\"</var></div></div>",
                "timeData": 0
            }
        ],
        "payloadDefault": "NIGHT",
        "payloadDefaultType": "str",
        "payloadDefaultTimeFormat": 0,
        "payloadDefaultOffset": 0,
        "payloadDefaultOffsetType": "none",
        "payloadDefaultOffsetMultiplier": 60000,
        "x": 110,
        "y": 1820,
        "wires": [
            [
                "1b7db04087fe86cc"
            ],
            []
        ]
    },
    {
        "id": "811a782081f4dc3c",
        "type": "link in",
        "z": "265d3756.5a1d68",
        "g": "bc3df6523c98c42b",
        "name": "Wohnz Luftbefeuchter",
        "links": [
            "1bd2faf182fb3f8a"
        ],
        "x": 55,
        "y": 1960,
        "wires": [
            [
                "62ede9f4a383c58d"
            ]
        ]
    },
    {
        "id": "1bd2faf182fb3f8a",
        "type": "link out",
        "z": "265d3756.5a1d68",
        "g": "3644af6d.d42f6",
        "name": "Wohnz Values",
        "mode": "link",
        "links": [
            "811a782081f4dc3c"
        ],
        "x": 535,
        "y": 100,
        "wires": []
    },
    {
        "id": "ba0eeb88b7307863",
        "type": "ui_slider",
        "z": "265d3756.5a1d68",
        "g": "bc3df6523c98c42b",
        "name": "",
        "label": "Wohnz Humi",
        "tooltip": "Luftfeuchtigkeit Wohnzimmer",
        "group": "5b512b5d.99aec4",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "outs": "end",
        "topic": "Hom//Wohnz/iSetHumi",
        "topicType": "str",
        "min": "30",
        "max": "70",
        "step": "5",
        "className": "",
        "x": 190,
        "y": 1960,
        "wires": [
            [
                "62ede9f4a383c58d"
            ]
        ]
    },
    {
        "id": "62ede9f4a383c58d",
        "type": "function",
        "z": "265d3756.5a1d68",
        "g": "bc3df6523c98c42b",
        "name": "Luftbefeuchter needed",
        "func": "var topic=msg.topic;\nvar set = 0;\nvar act = 0;\nswitch(topic){\n    case \"Hom//Wohnz/iSetHumi\":\n        set = Number(msg.payload);\n        act = flow.get(\"iWohnzActHumi\", \"file\");\n        flow.set(\"iWohnzSetHumi\",set, \"file\");\n       break;\n        \n   case \"Hom/stat/Wohnz/iActHumi\":\n        act = Number(msg.payload.iActHumi);\n        set = flow.get(\"iWohnzSetHumi\", \"file\");\n        flow.set(\"iWohnzActHumi\",act, \"file\");\n       break;\n    }\n    msg.act = act;\n    msg.set = set;\n    if ((set <= act)|| ((global.get(\"BalkonOffen\", \"file\")) == \"true\")){ \n        flow.set(\"HumiStat\", \"OFF\", \"file\");\n        msg.payload= \"OFF\";    \n        node.status({fill:\"red\",shape:\"ring\",text: \"Off\"});      \n            }\n    else {\n        flow.set(\"HumiStat\", \"ON\", \"file\");\n        msg.payload = \"ON\";\n        node.status({fill:\"green\",shape:\"ring\",text: \"ON\"});  \n    }\n    return msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 1960,
        "wires": [
            [
                "1b7db04087fe86cc",
                "5546a3e921f1ef52"
            ]
        ]
    },
    {
        "id": "3efd33a2052e6525",
        "type": "inject",
        "z": "265d3756.5a1d68",
        "g": "bc3df6523c98c42b",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "600",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "WohnzHumiON",
        "payload": "1",
        "payloadType": "num",
        "x": 150,
        "y": 2040,
        "wires": [
            [
                "219c0a60e201da84"
            ]
        ]
    },
    {
        "id": "219c0a60e201da84",
        "type": "function",
        "z": "265d3756.5a1d68",
        "g": "bc3df6523c98c42b",
        "name": "Humi h counter",
        "func": "var status = flow.get(\"HumiStat\",\"file\");\nvar humicount = flow.get(\"HumiCount\", \"file\");\nvar topic=msg.topic;\n\nswitch(topic){\n    case \"WohnzHumiON\":\n      if (status == \"ON\"){\n        humicount = humicount +1;\n        flow.set(\"HumiCount\", humicount, \"file\");\n        msg.mystatus = status;\n        msg.payload = {\n          iHumiStat: Number(humicount)\n          }\n        node.status({fill:\"green\",shape:\"ring\",text: status});\n        return msg;\n      }\n      else node.status({fill:\"red\",shape:\"ring\",text: status});\n      return;\n    case \"ResetCounter\":\n      \tflow.set(\"HumiCount\", 0, \"file\");\n         msg.payload = {\n          iHumiStat: Number(0)\n          }\n        node.status({fill:\"yellow\",shape:\"ring\",text: \"reset\"});\n        return msg;\n}\n      \n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 2020,
        "wires": [
            [
                "5bf0eb292dccd4db"
            ]
        ]
    },
    {
        "id": "1a94b389528b9aaf",
        "type": "influxdb out",
        "z": "265d3756.5a1d68",
        "g": "bc3df6523c98c42b",
        "influxdb": "e3f4c3e8.b52ee",
        "name": "Homematic Wohnzimmer",
        "measurement": "Wohnz",
        "precision": "",
        "retentionPolicy": "two_month",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 930,
        "y": 1960,
        "wires": []
    },
    {
        "id": "ec6ca311df51353b",
        "type": "inject",
        "z": "265d3756.5a1d68",
        "g": "bc3df6523c98c42b",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "ResetCounter",
        "payload": "1",
        "payloadType": "num",
        "x": 140,
        "y": 2080,
        "wires": [
            [
                "219c0a60e201da84"
            ]
        ]
    },
    {
        "id": "5bf0eb292dccd4db",
        "type": "delay",
        "z": "265d3756.5a1d68",
        "g": "bc3df6523c98c42b",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "hour",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 640,
        "y": 2020,
        "wires": [
            [
                "1a94b389528b9aaf"
            ]
        ]
    },
    {
        "id": "5546a3e921f1ef52",
        "type": "function",
        "z": "265d3756.5a1d68",
        "g": "bc3df6523c98c42b",
        "name": "Luftbefeuchter Status in DB",
        "func": "var payload = msg.payload;\nif (payload == \"ON\")\n         msg.payload = {\n          bHumiON: 1\n          }\nelse\n msg.payload = {\n          bHumiON: 0\n          }\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 1960,
        "wires": [
            [
                "1a94b389528b9aaf"
            ]
        ]
    },
    {
        "id": "bec11c3a8731a1ef",
        "type": "function",
        "z": "265d3756.5a1d68",
        "g": "492449f2a284d6d7",
        "name": "function 8",
        "func": "var topic = msg.topic;\n\nswitch (topic) {\n    case \"Hom/stat/Schlafz/bFensterAuf\":\n       \n        return msg;\n    case \"Hom/stat/Schlafz/bGrFensterAuf\":\n       return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 1320,
        "wires": [
            [
                "a448e0f6c950f185",
                "e0160b9e060c6bab"
            ]
        ]
    },
    {
        "id": "efff5a8653c62e4b",
        "type": "mqtt in",
        "z": "265d3756.5a1d68",
        "name": "",
        "topic": "Hom/stat/Flur/bT√ºre",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "19cf2a10.f9d4a6",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 150,
        "y": 1380,
        "wires": [
            [
                "06b78fe126345a99",
                "a5207ff52b2a24e8"
            ]
        ]
    },
    {
        "id": "a5207ff52b2a24e8",
        "type": "debug",
        "z": "265d3756.5a1d68",
        "name": "Flur T√ºre offen",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 620,
        "y": 1380,
        "wires": []
    },
    {
        "id": "593a9ed0df83f084",
        "type": "mqtt in",
        "z": "265d3756.5a1d68",
        "name": "",
        "topic": "Hom/stat/K√ºche/bFenster",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "19cf2a10.f9d4a6",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 170,
        "y": 1460,
        "wires": [
            [
                "4a1eb101ead5f5c2"
            ]
        ]
    },
    {
        "id": "4a1eb101ead5f5c2",
        "type": "debug",
        "z": "265d3756.5a1d68",
        "name": "K√ºche Fenster offen",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 640,
        "y": 1460,
        "wires": []
    },
    {
        "id": "ac08e4c3f92ee036",
        "type": "influxdb out",
        "z": "265d3756.5a1d68",
        "influxdb": "e3f4c3e8.b52ee",
        "name": "HomeMatic Flur",
        "measurement": "Flur",
        "precision": "",
        "retentionPolicy": "two_month",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 620,
        "y": 1420,
        "wires": []
    },
    {
        "id": "06b78fe126345a99",
        "type": "function",
        "z": "265d3756.5a1d68",
        "name": "Flur T√ºre Status",
        "func": "var payload = msg.payload;\nif (payload == true)\n         msg.payload = {\n          bTuereAuf: 1\n          }\nif (payload == false)\n    msg.payload = {\n        bTuereAuf: 0\n    }\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 1420,
        "wires": [
            [
                "ac08e4c3f92ee036",
                "e54497ce99ee0185"
            ]
        ]
    },
    {
        "id": "e54497ce99ee0185",
        "type": "debug",
        "z": "265d3756.5a1d68",
        "name": "debug 68",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 920,
        "y": 1420,
        "wires": []
    },
    {
        "id": "d3ee02f7719cd2ed",
        "type": "inject",
        "z": "265d3756.5a1d68",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 170,
        "y": 1420,
        "wires": [
            [
                "06b78fe126345a99"
            ]
        ]
    },
    {
        "id": "72e4b3cce1ffea0e",
        "type": "inject",
        "z": "265d3756.5a1d68",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "false",
        "payloadType": "bool",
        "x": 370,
        "y": 1500,
        "wires": [
            [
                "06b78fe126345a99"
            ]
        ]
    },
    {
        "id": "dc12148c24f84fe9",
        "type": "debug",
        "z": "265d3756.5a1d68",
        "g": "bc3df6523c98c42b",
        "name": "debug 69",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 340,
        "y": 1760,
        "wires": []
    },
    {
        "id": "d24c2a889a0623b1",
        "type": "mqtt out",
        "z": "265d3756.5a1d68",
        "g": "de3e2e3aac07c809",
        "name": "Schlafz Luftbefeuchter",
        "topic": "ShellyPlug4/rpc",
        "qos": "1",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "19cf2a10.f9d4a6",
        "x": 600,
        "y": 2200,
        "wires": []
    },
    {
        "id": "3a8b059a72f7cdce",
        "type": "change",
        "z": "265d3756.5a1d68",
        "g": "de3e2e3aac07c809",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "ON",
                "fromt": "str",
                "to": "{\"id\":0,\"src\":\"mqtt\",\"method\":\"Switch.Set\",\"params\":{\"id\":0,\"on\":true}}",
                "tot": "json"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "OFF",
                "fromt": "str",
                "to": "{\"id\":0,\"src\":\"mqtt\",\"method\":\"Switch.Set\",\"params\":{\"id\":0,\"on\":false}}",
                "tot": "json"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "DAY",
                "fromt": "str",
                "to": "{\"id\":0,\"src\":\"mqtt\",\"method\":\"PLUGS_UI.SetConfig\",\"params\":{\"config\":{\"leds\":{\"mode\":\"switch\",\"colors\":{\"switch:0\":{\"on\":{\"rgb\":[100,100,0],\"brightness\":100},\"off\":{\"rgb\":[100,0,0],\"brightness\":100}}}}}}}",
                "tot": "json"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "NIGHT",
                "fromt": "str",
                "to": "{\"id\":0,\"src\":\"mqtt\",\"method\":\"PLUGS_UI.SetConfig\",\"params\":{\"config\":{\"leds\":{\"mode\":\"switch\",\"colors\":{\"switch:0\":{\"on\":{\"rgb\":[100,9,0],\"brightness\":18},\"off\":{\"rgb\":[100,9,0],\"brightness\":18}}}}}}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 2200,
        "wires": [
            [
                "d24c2a889a0623b1"
            ]
        ]
    },
    {
        "id": "47d6882d43086e7b",
        "type": "inject",
        "z": "265d3756.5a1d68",
        "g": "de3e2e3aac07c809",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "ON",
        "payloadType": "str",
        "x": 110,
        "y": 2180,
        "wires": [
            [
                "3a8b059a72f7cdce"
            ]
        ]
    },
    {
        "id": "b52d2f3e354ce7e4",
        "type": "inject",
        "z": "265d3756.5a1d68",
        "g": "de3e2e3aac07c809",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "OFF",
        "payloadType": "str",
        "x": 110,
        "y": 2220,
        "wires": [
            [
                "3a8b059a72f7cdce"
            ]
        ]
    },
    {
        "id": "3ee4b32e43d0f544",
        "type": "inject",
        "z": "265d3756.5a1d68",
        "g": "de3e2e3aac07c809",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "DAY",
        "payloadType": "str",
        "x": 110,
        "y": 2260,
        "wires": [
            [
                "3a8b059a72f7cdce"
            ]
        ]
    },
    {
        "id": "3f88b754145efcb3",
        "type": "inject",
        "z": "265d3756.5a1d68",
        "g": "de3e2e3aac07c809",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "NIGHT",
        "payloadType": "str",
        "x": 110,
        "y": 2300,
        "wires": [
            [
                "3a8b059a72f7cdce"
            ]
        ]
    },
    {
        "id": "6b772c7790f8c758",
        "type": "clock-timer",
        "z": "265d3756.5a1d68",
        "g": "de3e2e3aac07c809",
        "name": "Light Mode",
        "topic": "",
        "addIdType": "none",
        "addId": "",
        "positionConfig": "9a5a8534.25d4d8",
        "autoTrigger": true,
        "autoTriggerTime": "60000",
        "startDelayTime": 10000,
        "contextStore": "",
        "results": [
            {
                "p": "",
                "pt": "msgTopic",
                "v": "NightMode",
                "vt": "str"
            },
            {
                "p": "",
                "pt": "msgPayload",
                "v": "",
                "vt": "payload"
            },
            {
                "p": "timeCtrl",
                "pt": "msg",
                "v": "",
                "vt": "ctrlObj"
            }
        ],
        "overwriteExpire": "",
        "rules": [
            {
                "index": 0,
                "name": "Day",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [],
                "payload": {
                    "type": "str",
                    "value": "DAY",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000,
                    "format": ""
                },
                "topic": "",
                "importance": 0,
                "resetOverwrite": false,
                "time": {
                    "type": "entered",
                    "value": "8:00",
                    "operator": 1,
                    "operatorText": "‚Üß von",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000,
                    "days": "*",
                    "months": "*"
                },
                "description": "<div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ‚Üß von <var>8:00</var></div><div><div class=\"indent-payload-text\"><i class=\"fa fa-step-backward\" aria-hidden=\"true\"></i> <span>Payload:</span> <var>\"DAY\"</var></div></div>"
            },
            {
                "index": 1,
                "name": "NIGHT",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [],
                "payload": {
                    "type": "str",
                    "value": "NIGHT",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000,
                    "format": ""
                },
                "topic": "",
                "importance": 0,
                "resetOverwrite": false,
                "time": {
                    "type": "entered",
                    "value": "21:30",
                    "operator": 1,
                    "operatorText": "‚Üß von",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000,
                    "days": "*",
                    "months": "*"
                },
                "description": "<div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ‚Üß von <var>21:30</var></div><div><div class=\"indent-payload-text\"><i class=\"fa fa-step-backward\" aria-hidden=\"true\"></i> <span>Payload:</span> <var>\"NIGHT\"</var></div></div>"
            }
        ],
        "payloadDefault": "NIGHT",
        "payloadDefaultType": "str",
        "payloadDefaultTimeFormat": 0,
        "payloadDefaultOffset": 0,
        "payloadDefaultOffsetType": "none",
        "payloadDefaultOffsetMultiplier": 60000,
        "x": 110,
        "y": 2340,
        "wires": [
            [
                "3a8b059a72f7cdce",
                "cdb8955f52c79898"
            ],
            []
        ]
    },
    {
        "id": "5c01553b5435fa0a",
        "type": "link out",
        "z": "265d3756.5a1d68",
        "g": "492449f2a284d6d7",
        "name": "Schlafz Values",
        "mode": "link",
        "links": [
            "63822450abd8c825"
        ],
        "x": 545,
        "y": 1180,
        "wires": []
    },
    {
        "id": "63822450abd8c825",
        "type": "link in",
        "z": "265d3756.5a1d68",
        "g": "de3e2e3aac07c809",
        "name": "Schlafz Values",
        "links": [
            "5c01553b5435fa0a"
        ],
        "x": 345,
        "y": 2340,
        "wires": [
            [
                "cdb8955f52c79898"
            ]
        ]
    },
    {
        "id": "78a32c783a9b1402",
        "type": "clock-timer",
        "z": "265d3756.5a1d68",
        "g": "de3e2e3aac07c809",
        "name": "Humi Mode",
        "topic": "",
        "addIdType": "none",
        "addId": "",
        "positionConfig": "9a5a8534.25d4d8",
        "autoTrigger": true,
        "autoTriggerTime": "60000",
        "startDelayTime": 10000,
        "contextStore": "",
        "results": [
            {
                "p": "",
                "pt": "msgTopic",
                "v": "NightMode",
                "vt": "str"
            },
            {
                "p": "",
                "pt": "msgPayload",
                "v": "",
                "vt": "payload"
            },
            {
                "p": "timeCtrl",
                "pt": "msg",
                "v": "",
                "vt": "ctrlObj"
            }
        ],
        "overwriteExpire": "",
        "rules": [
            {
                "index": 0,
                "name": "Day",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [
                    {
                        "valueType": "global",
                        "value": "#:(file)::SchlafzFensterOffen",
                        "operator": "false",
                        "operatorText": "ist false",
                        "thresholdType": "num",
                        "threshold": 0
                    }
                ],
                "payload": {
                    "type": "str",
                    "value": "55",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000,
                    "format": ""
                },
                "topic": "",
                "importance": 0,
                "resetOverwrite": false,
                "time": {
                    "type": "entered",
                    "value": "9:00",
                    "operator": 1,
                    "operatorText": "‚Üß von",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000,
                    "days": "*",
                    "months": "*"
                },
                "description": "<div><i class=\"fa fa-code-fork\" aria-hidden=\"true\"></i> <var>global.SchlafzFensterOffen</var> ist false</div><div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ‚Üß von <var>9:00</var></div><div><div class=\"indent-payload-text\"><i class=\"fa fa-step-backward\" aria-hidden=\"true\"></i> <span>Payload:</span> <var>\"55\"</var></div></div>"
            },
            {
                "index": 1,
                "name": "evening spread essential oil",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [],
                "payload": {
                    "type": "str",
                    "value": "70",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000,
                    "format": ""
                },
                "topic": "",
                "importance": 0,
                "resetOverwrite": false,
                "time": {
                    "type": "entered",
                    "value": "22:00",
                    "operator": 1,
                    "operatorText": "‚Üß von",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000,
                    "days": "*",
                    "months": "*"
                },
                "description": "<div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ‚Üß von <var>22:00</var></div><div><div class=\"indent-payload-text\"><i class=\"fa fa-step-backward\" aria-hidden=\"true\"></i> <span>Payload:</span> <var>\"70\"</var></div></div>"
            },
            {
                "index": 2,
                "name": "NIGHT",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [],
                "payload": {
                    "type": "str",
                    "value": "20",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000,
                    "format": ""
                },
                "topic": "",
                "importance": 0,
                "resetOverwrite": false,
                "time": {
                    "type": "entered",
                    "value": "22:30",
                    "operator": 1,
                    "operatorText": "‚Üß von",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000,
                    "days": "*",
                    "months": "*"
                },
                "description": "<div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ‚Üß von <var>22:30</var></div><div><div class=\"indent-payload-text\"><i class=\"fa fa-step-backward\" aria-hidden=\"true\"></i> <span>Payload:</span> <var>\"20\"</var></div></div>"
            }
        ],
        "payloadDefault": "NIGHT",
        "payloadDefaultType": "str",
        "payloadDefaultTimeFormat": 0,
        "payloadDefaultOffset": 0,
        "payloadDefaultOffsetType": "none",
        "payloadDefaultOffsetMultiplier": 60000,
        "x": 110,
        "y": 2400,
        "wires": [
            [
                "6945deb0ca8c6b12"
            ],
            []
        ]
    },
    {
        "id": "6945deb0ca8c6b12",
        "type": "ui_slider",
        "z": "265d3756.5a1d68",
        "g": "de3e2e3aac07c809",
        "name": "",
        "label": "Schlafz Humi",
        "tooltip": "Luftfeuchtigkeit Schlafzimmer",
        "group": "5b512b5d.99aec4",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "end",
        "topic": "Hom//Schlafz/iSetHumi",
        "topicType": "str",
        "min": "20",
        "max": "80",
        "step": "1",
        "className": "",
        "x": 330,
        "y": 2400,
        "wires": [
            [
                "cdb8955f52c79898"
            ]
        ]
    },
    {
        "id": "cdb8955f52c79898",
        "type": "function",
        "z": "265d3756.5a1d68",
        "g": "de3e2e3aac07c809",
        "name": "Luftbefeuchter needed",
        "func": "var topic=msg.topic;\nvar set = 0;\nvar act = 0;\nswitch(topic){\n    case \"Hom//Schlafz/iSetHumi\":\n        set = Number(msg.payload);\n        act = flow.get(\"iSchlafzActHumi\", \"file\");\n        flow.set(\"iSchlafzSetHumi\",set, \"file\");\n       break;\n        \n   case \"Hom/stat/Schlafz/iActHumi\":\n        act = Number(msg.payload.iActHumi);\n        set = flow.get(\"iSchlafzSetHumi\", \"file\");\n        flow.set(\"iSchlafzActHumi\",act, \"file\");\n       break;\n    \n    case \"NightMode\":\n        flow.set(\"iSchlafzHumiMode\", msg.payload, \"file\");\n        break;\n    }\n    msg.act = act;\n    msg.set = set;\n    if ((set <= act) || ((flow.get(\"iSchlafzHumiMode\") == \"NIGHT\"))){ \n        flow.set(\"SchlafzHumiStat\", \"OFF\", \"file\");\n        msg.payload= \"OFF\";    \n        node.status({fill:\"red\",shape:\"ring\",text: \"Off\"});      \n            }\n    else {\n        flow.set(\"SchlafzHumiStat\", \"ON\", \"file\");\n        msg.payload = \"ON\";\n        node.status({fill:\"green\",shape:\"ring\",text: \"ON\"});  \n    }\n    return msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 2400,
        "wires": [
            [
                "b9f9373889ed3769",
                "3a8b059a72f7cdce"
            ]
        ]
    },
    {
        "id": "b9f9373889ed3769",
        "type": "function",
        "z": "265d3756.5a1d68",
        "g": "de3e2e3aac07c809",
        "name": "Luftbefeuchter Status in DB",
        "func": "var payload = msg.payload;\nif (payload == \"ON\"){\n         msg.payload = {\n          bHumiON: 1\n          };\n         node.status({fill:\"green\",shape:\"ring\",text: \"ON\"});\n}\nelse\n{\n msg.payload = {\n          bHumiON: 0\n          };\n         node.status({fill:\"red\",shape:\"ring\",text: \"OFF\"});\n\n}\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 2400,
        "wires": [
            [
                "4d7d2fc975c0bffa"
            ]
        ]
    },
    {
        "id": "4d7d2fc975c0bffa",
        "type": "influxdb out",
        "z": "265d3756.5a1d68",
        "g": "de3e2e3aac07c809",
        "influxdb": "e3f4c3e8.b52ee",
        "name": "HomeMatic Schlafz",
        "measurement": "Schlafz",
        "precision": "",
        "retentionPolicy": "two_month",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 1050,
        "y": 2400,
        "wires": []
    },
    {
        "id": "347e58777872f0ac",
        "type": "inject",
        "z": "265d3756.5a1d68",
        "g": "de3e2e3aac07c809",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "600",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "SchlafzHumiON",
        "payload": "1",
        "payloadType": "num",
        "x": 150,
        "y": 2460,
        "wires": [
            [
                "359074cb91f0b627"
            ]
        ]
    },
    {
        "id": "359074cb91f0b627",
        "type": "function",
        "z": "265d3756.5a1d68",
        "g": "de3e2e3aac07c809",
        "name": "Schlafz Humi h counter",
        "func": "var status = flow.get(\"SchlafzHumiStat\",\"file\");\nvar humicount = flow.get(\"SchlafzHumiCount\", \"file\");\nvar topic=msg.topic;\n\nswitch(topic){\n    case \"SchlafzHumiON\":\n      if (status == \"ON\"){\n        humicount = humicount +1;\n        flow.set(\"SchlafzHumiCount\", humicount, \"file\");\n        msg.mystatus = status;\n        msg.payload = {\n          iHumiStat: Number(humicount)\n          }\n        node.status({fill:\"green\",shape:\"ring\",text: status});\n        return msg;\n      }\n      else node.status({fill:\"red\",shape:\"ring\",text: status});\n      return;\n    case \"ResetCounter\":\n      \tflow.set(\"SchlafzHumiCount\", 0, \"file\");\n         msg.payload = {\n          iHumiStat: Number(0)\n          }\n        node.status({fill:\"yellow\",shape:\"ring\",text: \"reset\"});\n        return msg;\n}\n      \n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 2460,
        "wires": [
            [
                "c003ab02fc04b33e"
            ]
        ]
    },
    {
        "id": "ef2887267666e30e",
        "type": "inject",
        "z": "265d3756.5a1d68",
        "g": "de3e2e3aac07c809",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "ResetCounter",
        "payload": "1",
        "payloadType": "num",
        "x": 140,
        "y": 2500,
        "wires": [
            [
                "359074cb91f0b627"
            ]
        ]
    },
    {
        "id": "c003ab02fc04b33e",
        "type": "delay",
        "z": "265d3756.5a1d68",
        "g": "de3e2e3aac07c809",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "4",
        "nbRateUnits": "1",
        "rateUnits": "hour",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 780,
        "y": 2460,
        "wires": [
            [
                "4d7d2fc975c0bffa"
            ]
        ]
    },
    {
        "id": "818d3c6f.201f2",
        "type": "mqtt in",
        "z": "511989b1.670cc8",
        "g": "5c041b39.d836b4",
        "name": "",
        "topic": "octoprint/event/PrinterStateChanged",
        "qos": "2",
        "datatype": "json",
        "broker": "19cf2a10.f9d4a6",
        "inputs": 0,
        "x": 220,
        "y": 240,
        "wires": [
            [
                "4b0bda4e.1a1664",
                "76804725.6ac1f8"
            ]
        ]
    },
    {
        "id": "4b0bda4e.1a1664",
        "type": "debug",
        "z": "511989b1.670cc8",
        "g": "5c041b39.d836b4",
        "name": "progress printing",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 590,
        "y": 100,
        "wires": []
    },
    {
        "id": "d702897a.1cfcf8",
        "type": "mqtt in",
        "z": "511989b1.670cc8",
        "g": "5c041b39.d836b4",
        "name": "",
        "topic": "octoprint/progress/printing",
        "qos": "2",
        "datatype": "json",
        "broker": "19cf2a10.f9d4a6",
        "inputs": 0,
        "x": 190,
        "y": 100,
        "wires": [
            [
                "4b0bda4e.1a1664"
            ]
        ]
    },
    {
        "id": "966ae8fb.a98fd8",
        "type": "mqtt in",
        "z": "511989b1.670cc8",
        "g": "5c041b39.d836b4",
        "name": "",
        "topic": "octoprint/event/Shutdown",
        "qos": "0",
        "datatype": "auto",
        "broker": "19cf2a10.f9d4a6",
        "inputs": 0,
        "x": 190,
        "y": 160,
        "wires": [
            [
                "c6ec2928.710c18",
                "76804725.6ac1f8"
            ]
        ]
    },
    {
        "id": "c6ec2928.710c18",
        "type": "debug",
        "z": "511989b1.670cc8",
        "g": "5c041b39.d836b4",
        "name": "octoprint shutdown",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 590,
        "y": 160,
        "wires": []
    },
    {
        "id": "1824c144.dfb4ef",
        "type": "mqtt in",
        "z": "511989b1.670cc8",
        "g": "5c041b39.d836b4",
        "name": "",
        "topic": "octoprint/temperature/+",
        "qos": "2",
        "datatype": "auto",
        "broker": "19cf2a10.f9d4a6",
        "inputs": 0,
        "x": 180,
        "y": 300,
        "wires": [
            [
                "5da76156.34c3f"
            ]
        ]
    },
    {
        "id": "d754d650.2a8f18",
        "type": "debug",
        "z": "511989b1.670cc8",
        "g": "5c041b39.d836b4",
        "name": "PrintControlOutput",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 380,
        "wires": []
    },
    {
        "id": "76804725.6ac1f8",
        "type": "function",
        "z": "511989b1.670cc8",
        "g": "5c041b39.d836b4",
        "name": "Printer Control",
        "func": "//get message topic\n//V1.0\nvar myTopic = msg.topic;\nvar o=msg.payload;\nmsg.topic = \"PrintControl.Command\";\nvar sendmsg = false; \n\n//return topic as payload\n//store status in a variable \nvar myStatus = flow.get(\"status\");\n//((msg._event == \"PrinterStageChanged\")&& myTopic == \"octoprint/PrinterStateChanged\") && \n\nif(myStatus == \"Init\"){\n    node.status({fill:\"green\",shape:\"ring\",text: myStatus});\n}\n\n// on Cancelling go to idle to wait some time because printer will heat up anyway\nif(\n    ((o._event == \"PrinterStateChanged\") \n        && (o.state_id == \"OPERATIONAL\") \n        && ((myStatus == \"Init\") || myStatus == \"ON\")|| (myStatus == \"ERROR\")) ||\n    (msg.payload == \"test plugin startup\") \n    )\n{\n    flow.set(\"status\", \"PrinterIdle\"); //Set wait for new print job timer\n    node.status({fill:\"green\",shape:\"ring\",text: \"Idle\"});\n    sendmsg = true; \n}\n//printer printing or start print, do not react on Printing message when in status cancelling\n/* in some situations when cancel from octoprint and printer goes to Cooldown (printer hot) and then restart with new print it switches off\nif(\n    ((o._event == \"PrinterStateChanged\") &&  ((o.state_id == \"STARTING\") \n        || ((o.state_id == \"PRINTING\") && (myStatus != \"PrinterHot\")))\n    && (myStatus != \"CANCELLING\"))\n    )*/\nif(\n    ((o._event == \"PrinterStateChanged\") &&  ((o.state_id == \"STARTING\") \n        || (o.state_id == \"PRINTING\"))\n    ))\n{\n    flow.set(\"status\", \"Printing\"); //wait for print end or cancel\n        node.status({fill:\"green\",shape:\"ring\",text: \"Printing\"});\n     sendmsg = true; \n}\n\n//printer Error assume it is hot set a longer timer and then shutdown everything\nif((o._event == \"PrinterStateChanged\") \n    &&  (o.state_id == \"ERROR\"))\n{\n    flow.set(\"status\", \"ERROR\"); //set ERROR timer, try reconnect (if possible with mqtt)\n    node.status({fill:\"red\",shape:\"ring\",text: \"Error\"});\n    sendmsg = true; \n}\n\n//printer Cancelling assume it is hot set a longer timer and then shutdown everything\nif ((o._event == \"PrinterStateChanged\") && (o.state_id == \"CANCELLING\") )\n{\n    flow.set(\"status\", \"CANCELLING\"); //set ERROR timer, try reconnect (if possible with mqtt)\n    node.status({fill:\"red\",shape:\"ring\",text: \"Cancelling\"});\n     sendmsg = true; \n}\n\n//print finished  or ERROR and temperatur messages received\n\n\nif( \n    (   ((o._event == \"PrinterStateChanged\") && (o.state_id == \"FINISHING\"))\n    ||  ((myStatus == \"ERROR\") && (myTopic == \"octoprint/temperature/tool0\")) \n    ||  ((myTopic == \"PrintControl.Timer\") && (msg.payload == \"IdleTimeout\") && ((myStatus == \"PrinterIdle\") || (myStatus == \"ON\")))\n    ||  ((myTopic == \"PrintControl.Timer\") && (msg.payload == \"CancelTimer\") && ((myStatus == \"CANCELLING\")))\n    )\n    )\n{\n    flow.set(\"status\", \"PrinterHot\"); //wait for cooldown \n     node.status({fill:\"yellow\",shape:\"ring\",text: \"Wait for cooldown\"});\n    sendmsg = true; \n}\n\n\n//printer idle and hotend over temperature or after ERROR status and reconnect receive a temp value waiting for cooldown\nif (\n    (((myTopic == \"octoprint/temperature/tool0\") && (o.actual <= \"40\")) && ((myStatus == \"PrinterHot\") || (myStatus == \"ERROR\")))\n    ||((myTopic == \"PrintControl.Timer\") && (msg.payload == \"PrinterHotTimeout\"))\n){\n    flow.set(\"status\", \"PrinterCooledDown\"); //Reset ERROR timer, set wait for new print job timer\n    node.status({fill:\"yellow\",shape:\"ring\",text: \"ShutDown Octopi\"});\n    sendmsg = true; \n}\n//octoprint shut down finished\nif (\n    (msg._event == \"ClientClosed\") ||  (o._event == \"Disconnected\") ||  (o._event == \"ClientClosed\") || (msg.payload == \"eOctoprintDown\")\n    )  {\n    flow.set(\"status\", \"OctoprintDown\");\n    node.status({fill:\"red\",shape:\"ring\",text: \"Disconnected\"});\n     sendmsg = true; \n}\n\nif ((myTopic == \"stat/SONOFFI3/POWER\") && (msg.payload == \"OFF\"))\n{\n     flow.set(\"status\", \"OFF\");\n     node.status({fill:\"red\",shape:\"ring\",text: \"OFF\"});\n  \n}\n\nif ((myTopic == \"stat/SONOFFI3/POWER\") && (msg.payload == \"ON\")\n    && (myStatus != \"OctoprintDown\")\n)\n{\n     flow.set(\"status\", \"ON\");\n     node.status({fill:\"green\",shape:\"ring\",text: \"ON\"});\n     sendmsg = true;\n     \n}\n\n\nif (sendmsg == true) \n{\n        msg.payload = flow.get(\"status\");\n        sendmsg = false;\n        return msg;\n}\n\n\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is deployed.\nflow.set(\"status\", \"Init\");",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 380,
        "wires": [
            [
                "d754d650.2a8f18",
                "c963b96.8ceb748",
                "823d7203.adc6f",
                "c60a1a40.b2a698",
                "1dea714a.68511f",
                "a30d9009.4e13b"
            ]
        ]
    },
    {
        "id": "31b9404d.230c",
        "type": "change",
        "z": "511989b1.670cc8",
        "g": "18ca9346.bdbedd",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "ShutdownOctopi",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 940,
        "wires": [
            [
                "9bea78c2.290f98"
            ]
        ]
    },
    {
        "id": "5da76156.34c3f",
        "type": "json",
        "z": "511989b1.670cc8",
        "g": "5c041b39.d836b4",
        "name": "Convert JSON String to Obj",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 620,
        "y": 280,
        "wires": [
            [
                "76804725.6ac1f8",
                "8c67a965.134088",
                "7b1463f8.f8e4cc"
            ]
        ]
    },
    {
        "id": "8c67a965.134088",
        "type": "debug",
        "z": "511989b1.670cc8",
        "g": "5c041b39.d836b4",
        "name": "Temperature",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 850,
        "y": 300,
        "wires": []
    },
    {
        "id": "1a54d5c9.3e5b9a",
        "type": "mqtt in",
        "z": "511989b1.670cc8",
        "g": "5c041b39.d836b4",
        "name": "",
        "topic": "stat/SONOFFI3/POWER",
        "qos": "0",
        "datatype": "utf8",
        "broker": "19cf2a10.f9d4a6",
        "inputs": 0,
        "x": 190,
        "y": 40,
        "wires": [
            [
                "76804725.6ac1f8"
            ]
        ]
    },
    {
        "id": "54087a9f.9d1c24",
        "type": "mqtt out",
        "z": "511989b1.670cc8",
        "g": "18ca9346.bdbedd",
        "name": "",
        "topic": "cmnd/SONOFFI3/Power",
        "qos": "1",
        "retain": "false",
        "broker": "19cf2a10.f9d4a6",
        "x": 1430,
        "y": 1000,
        "wires": []
    },
    {
        "id": "550eb938.78f938",
        "type": "mqtt out",
        "z": "511989b1.670cc8",
        "g": "18ca9346.bdbedd",
        "name": "Octoprint Shutdown",
        "topic": "",
        "qos": "0",
        "retain": "false",
        "broker": "19cf2a10.f9d4a6",
        "x": 1590,
        "y": 940,
        "wires": []
    },
    {
        "id": "9bea78c2.290f98",
        "type": "switch",
        "z": "511989b1.670cc8",
        "g": "18ca9346.bdbedd",
        "name": "OnOctoprintShutDownRQ",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "ShutdownOctopi",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1130,
        "y": 940,
        "wires": [
            [
                "acfc89f6.5dc368",
                "997e000a.2be07"
            ]
        ]
    },
    {
        "id": "63b53cab.0746d4",
        "type": "inject",
        "z": "511989b1.670cc8",
        "g": "5c041b39.d836b4",
        "name": "Inject some msg",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "Printing",
        "payload": "Status",
        "payloadType": "str",
        "x": 180,
        "y": 380,
        "wires": [
            [
                "76804725.6ac1f8"
            ]
        ]
    },
    {
        "id": "ab040656.4d62c8",
        "type": "change",
        "z": "511989b1.670cc8",
        "g": "18ca9346.bdbedd",
        "name": "On Idle or ON",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"payload\":\"on\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 560,
        "y": 560,
        "wires": [
            [
                "f46b4697.85a528"
            ]
        ]
    },
    {
        "id": "c963b96.8ceb748",
        "type": "switch",
        "z": "511989b1.670cc8",
        "g": "18ca9346.bdbedd",
        "name": "Printer Idle ON Printing Hot",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "PrinterIdle",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "ON",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Printing",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "PrinterHot",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "CANCELLING",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 5,
        "x": 240,
        "y": 580,
        "wires": [
            [
                "ab040656.4d62c8"
            ],
            [
                "ab040656.4d62c8"
            ],
            [
                "29e1d371.ff155c"
            ],
            [
                "29e1d371.ff155c"
            ],
            [
                "29e1d371.ff155c"
            ]
        ]
    },
    {
        "id": "29e1d371.ff155c",
        "type": "change",
        "z": "511989b1.670cc8",
        "g": "18ca9346.bdbedd",
        "name": "On Printing or Hot",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"payload\":\"cancel\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 550,
        "y": 600,
        "wires": [
            [
                "f46b4697.85a528"
            ]
        ]
    },
    {
        "id": "15937479.cc992c",
        "type": "change",
        "z": "511989b1.670cc8",
        "g": "18ca9346.bdbedd",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "on",
                "fromt": "str",
                "to": "",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "off",
                "fromt": "str",
                "to": "IdleTimeout",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 940,
        "y": 600,
        "wires": [
            [
                "76804725.6ac1f8"
            ]
        ]
    },
    {
        "id": "823d7203.adc6f",
        "type": "switch",
        "z": "511989b1.670cc8",
        "g": "18ca9346.bdbedd",
        "name": "Printer Hot ON Printing Idle Cancelling",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "PrinterHot",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "ON",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Printing",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Idle",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "CANCELLING",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "PrinterCooledDown",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 6,
        "x": 250,
        "y": 700,
        "wires": [
            [
                "c85e3aa6.8a06d8",
                "1ffa44ec.2f584b"
            ],
            [
                "1ffa44ec.2f584b",
                "a781db69.92e528"
            ],
            [
                "1ffa44ec.2f584b",
                "a781db69.92e528"
            ],
            [
                "1ffa44ec.2f584b",
                "a781db69.92e528"
            ],
            [
                "8224f7c3.a845f8",
                "a781db69.92e528"
            ],
            [
                "a781db69.92e528"
            ]
        ]
    },
    {
        "id": "c85e3aa6.8a06d8",
        "type": "change",
        "z": "511989b1.670cc8",
        "g": "18ca9346.bdbedd",
        "name": "On Hot",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"payload\":\"on\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 640,
        "wires": [
            [
                "47ac10c5.af1f3"
            ]
        ]
    },
    {
        "id": "a781db69.92e528",
        "type": "change",
        "z": "511989b1.670cc8",
        "g": "18ca9346.bdbedd",
        "name": "On ON Printing Idle",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"payload\":\"cancel\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 700,
        "wires": [
            [
                "47ac10c5.af1f3"
            ]
        ]
    },
    {
        "id": "3b6104fe.71eecc",
        "type": "change",
        "z": "511989b1.670cc8",
        "g": "18ca9346.bdbedd",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "on",
                "fromt": "str",
                "to": "",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "off",
                "fromt": "str",
                "to": "PrinterHotTimeout",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 980,
        "y": 680,
        "wires": [
            [
                "76804725.6ac1f8"
            ]
        ]
    },
    {
        "id": "f065d912.8cec88",
        "type": "change",
        "z": "511989b1.670cc8",
        "g": "18ca9346.bdbedd",
        "name": "Send OFF",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "OFF",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 550,
        "y": 1000,
        "wires": [
            [
                "acfc89f6.5dc368",
                "54087a9f.9d1c24"
            ]
        ]
    },
    {
        "id": "c60a1a40.b2a698",
        "type": "switch",
        "z": "511989b1.670cc8",
        "g": "18ca9346.bdbedd",
        "name": "Printer CooledDown Octoprint Down",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "PrinterCooledDown",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "OctoprintDown",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 270,
        "y": 880,
        "wires": [
            [
                "31b9404d.230c",
                "87cac91c.8f1ba8"
            ],
            [
                "f065d912.8cec88"
            ]
        ]
    },
    {
        "id": "339b0b7.0a49bf4",
        "type": "change",
        "z": "511989b1.670cc8",
        "g": "18ca9346.bdbedd",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "on",
                "fromt": "str",
                "to": "",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "off",
                "fromt": "str",
                "to": "eOctoprintDown",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1140,
        "y": 880,
        "wires": [
            [
                "76804725.6ac1f8"
            ]
        ]
    },
    {
        "id": "1b6c236f.f67d4d",
        "type": "inject",
        "z": "511989b1.670cc8",
        "g": "5c041b39.d836b4",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "eOctoprintDown",
        "payloadType": "str",
        "x": 350,
        "y": 440,
        "wires": [
            [
                "76804725.6ac1f8"
            ]
        ]
    },
    {
        "id": "8224f7c3.a845f8",
        "type": "change",
        "z": "511989b1.670cc8",
        "g": "18ca9346.bdbedd",
        "name": "On Cancelling",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"payload\":\"on\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 780,
        "wires": [
            [
                "c0b2e11c.f580f"
            ]
        ]
    },
    {
        "id": "19c8b5c0.3dcaca",
        "type": "change",
        "z": "511989b1.670cc8",
        "g": "18ca9346.bdbedd",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "on",
                "fromt": "str",
                "to": "",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "off",
                "fromt": "str",
                "to": "CancelTimer",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1000,
        "y": 780,
        "wires": [
            [
                "76804725.6ac1f8"
            ]
        ]
    },
    {
        "id": "1ffa44ec.2f584b",
        "type": "change",
        "z": "511989b1.670cc8",
        "g": "18ca9346.bdbedd",
        "name": "On ON Printing Idle",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"payload\":\"cancel\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 550,
        "y": 820,
        "wires": [
            [
                "c0b2e11c.f580f"
            ]
        ]
    },
    {
        "id": "acfc89f6.5dc368",
        "type": "debug",
        "z": "511989b1.670cc8",
        "g": "18ca9346.bdbedd",
        "name": "Sonoff OFF / Shutdown",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1420,
        "y": 800,
        "wires": []
    },
    {
        "id": "7b1463f8.f8e4cc",
        "type": "function",
        "z": "511989b1.670cc8",
        "g": "5c041b39.d836b4",
        "name": "Octoprint switch/convert",
        "func": "var topic=msg.topic;\nswitch(topic){\n    case \"octoprint/temperature/tool0\":\n        msg.payload={\n            hotendTemp: Number(msg.payload.actual),\n        }\n         return msg;\n    case \"octoprint/temperature/bed\":\n        msg.payload={\n            bedTemp: Number(msg.payload.actual),\n        }\n        return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 870,
        "y": 240,
        "wires": [
            [
                "c4532342.dddc2",
                "ff6b7215.93de5"
            ]
        ]
    },
    {
        "id": "c4532342.dddc2",
        "type": "debug",
        "z": "511989b1.670cc8",
        "g": "5c041b39.d836b4",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1120,
        "y": 200,
        "wires": []
    },
    {
        "id": "1dea714a.68511f",
        "type": "link out",
        "z": "511989b1.670cc8",
        "g": "5c041b39.d836b4",
        "name": "Printer Control",
        "links": [
            "3073af6c.b8faf"
        ],
        "x": 875,
        "y": 420,
        "wires": []
    },
    {
        "id": "f665e232.83018",
        "type": "inject",
        "z": "511989b1.670cc8",
        "g": "18ca9346.bdbedd",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "OFF",
        "payloadType": "str",
        "x": 150,
        "y": 980,
        "wires": [
            [
                "54087a9f.9d1c24"
            ]
        ]
    },
    {
        "id": "6e793f78.19688",
        "type": "inject",
        "z": "511989b1.670cc8",
        "g": "18ca9346.bdbedd",
        "name": "Set Bedtemp",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "octoprint/bedtemp",
        "payload": "{\"temp\":30}",
        "payloadType": "json",
        "x": 980,
        "y": 1080,
        "wires": [
            [
                "550eb938.78f938"
            ]
        ]
    },
    {
        "id": "a30d9009.4e13b",
        "type": "file",
        "z": "511989b1.670cc8",
        "g": "5c041b39.d836b4",
        "name": "Printerlog",
        "filename": "PrinterLog",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 930,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "b8c299bc.8c4e18",
        "type": "inject",
        "z": "511989b1.670cc8",
        "g": "18ca9346.bdbedd",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "octoprint/system",
        "payload": "ShutdownOctopi",
        "payloadType": "str",
        "x": 1490,
        "y": 860,
        "wires": [
            [
                "550eb938.78f938",
                "acfc89f6.5dc368"
            ]
        ]
    },
    {
        "id": "bb147727.808968",
        "type": "inject",
        "z": "511989b1.670cc8",
        "g": "18ca9346.bdbedd",
        "name": "Shutdown",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "octoprint/system",
        "payload": "shutdown",
        "payloadType": "str",
        "x": 980,
        "y": 1040,
        "wires": [
            [
                "550eb938.78f938"
            ]
        ]
    },
    {
        "id": "997e000a.2be07",
        "type": "change",
        "z": "511989b1.670cc8",
        "g": "18ca9346.bdbedd",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "octoprint/system",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1360,
        "y": 920,
        "wires": [
            [
                "550eb938.78f938"
            ]
        ]
    },
    {
        "id": "61b9f71.7b9bb08",
        "type": "inject",
        "z": "511989b1.670cc8",
        "g": "18ca9346.bdbedd",
        "name": "ON",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "ON",
        "payloadType": "str",
        "x": 150,
        "y": 1020,
        "wires": [
            [
                "54087a9f.9d1c24"
            ]
        ]
    },
    {
        "id": "ff6b7215.93de5",
        "type": "influxdb out",
        "z": "511989b1.670cc8",
        "g": "5c041b39.d836b4",
        "influxdb": "e3f4c3e8.b52ee",
        "name": "AnyI3Temp",
        "measurement": "AnyI3Temp",
        "precision": "",
        "retentionPolicy": "",
        "database": "",
        "retentionPolicyV18Flux": "",
        "org": "",
        "bucket": "",
        "x": 1130,
        "y": 260,
        "wires": []
    },
    {
        "id": "f46b4697.85a528",
        "type": "mytimeout",
        "z": "511989b1.670cc8",
        "g": "18ca9346.bdbedd",
        "name": "Idle Delay ",
        "outtopic": "PrintControl.Timer",
        "outsafe": "on",
        "outwarning": "Warning",
        "outunsafe": "off",
        "warning": "5",
        "timer": "3000",
        "debug": false,
        "ndebug": false,
        "ignoreCase": false,
        "repeat": false,
        "again": false,
        "x": 740,
        "y": 600,
        "wires": [
            [
                "15937479.cc992c"
            ],
            []
        ]
    },
    {
        "id": "47ac10c5.af1f3",
        "type": "mytimeout",
        "z": "511989b1.670cc8",
        "g": "18ca9346.bdbedd",
        "name": "Cooldown Timeout",
        "outtopic": "PrintControl.Timer",
        "outsafe": "on",
        "outwarning": "Warning",
        "outunsafe": "off",
        "warning": "5",
        "timer": "3000",
        "debug": false,
        "ndebug": false,
        "ignoreCase": false,
        "repeat": false,
        "again": false,
        "x": 770,
        "y": 680,
        "wires": [
            [
                "3b6104fe.71eecc"
            ],
            []
        ]
    },
    {
        "id": "87cac91c.8f1ba8",
        "type": "mytimeout",
        "z": "511989b1.670cc8",
        "g": "18ca9346.bdbedd",
        "name": "Octoprint Shutdown Delay",
        "outtopic": "PrintControl.Timer",
        "outsafe": "on",
        "outwarning": "Warning",
        "outunsafe": "off",
        "warning": "0",
        "timer": "90",
        "debug": false,
        "ndebug": false,
        "ignoreCase": false,
        "repeat": false,
        "again": false,
        "x": 790,
        "y": 880,
        "wires": [
            [
                "339b0b7.0a49bf4"
            ],
            []
        ]
    },
    {
        "id": "c0b2e11c.f580f",
        "type": "mytimeout",
        "z": "511989b1.670cc8",
        "g": "18ca9346.bdbedd",
        "name": "Cancel Timeout",
        "outtopic": "PrintControl.Timer",
        "outsafe": "on",
        "outwarning": "Warning",
        "outunsafe": "off",
        "warning": "5",
        "timer": "360",
        "debug": false,
        "ndebug": false,
        "ignoreCase": false,
        "repeat": false,
        "again": false,
        "x": 760,
        "y": 780,
        "wires": [
            [
                "19c8b5c0.3dcaca"
            ],
            []
        ],
        "info": "Wait 90 sec in cancel the printer still may warm up.\nWe go to cooldown status when it is warmed up. "
    },
    {
        "id": "c1e7e0f.1a2202",
        "type": "mqtt in",
        "z": "9963931.9232c7",
        "g": "7d3411b0.20fc7",
        "name": "",
        "topic": "tele/SONOFFI3/SENSOR",
        "qos": "0",
        "datatype": "json",
        "broker": "19cf2a10.f9d4a6",
        "inputs": 0,
        "x": 150,
        "y": 80,
        "wires": [
            [
                "1a1c6586.ce182a",
                "b57696ce7b657e63"
            ]
        ]
    },
    {
        "id": "3a6c508.ebe3cb",
        "type": "debug",
        "z": "9963931.9232c7",
        "g": "7d3411b0.20fc7",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 810,
        "y": 180,
        "wires": []
    },
    {
        "id": "1a1c6586.ce182a",
        "type": "function",
        "z": "9963931.9232c7",
        "g": "7d3411b0.20fc7",
        "name": "Convert Tasmota Pow",
        "func": "var obj = msg.payload;\nvar Total = obj[\"ENERGY\"][\"Total\"];\n\nvar LastEnergy = flow.get(\"LastEnergy\", \"file\") || 0;\nvar CurrPrintEnergy=flow.get(\"CurrPrintEnergy\") || 0;\n\nvar status = flow.get(\"status\");\n\nif (status == \"run\"){\n    CurrPrintEnergy = Total - LastEnergy;\n    CurrPrintEnergy = Math.round(CurrPrintEnergy * 100) / 100;\n    flow.set(\"CurrPrintEnergy\", CurrPrintEnergy);\n    node.status({ fill: \"green\", shape: \"ring\", text: status });\n} \nelse {\n    flow.set(\"LastEnergy\", Total, \"file\"); \n    flow.set(\"LastEnergy\", Total, \"file\");\n    node.status({ fill: \"red\", shape: \"ring\", text: CurrPrintEnergy });\n}\n\n\nmsg.payload = {\n    AnycubicTotal: Number(obj[\"ENERGY\"][\"Total\"]), \n    AnycubicPower: Number(obj[\"ENERGY\"][\"Power\"]),\n    AnycubicAppPower: Number(obj[\"ENERGY\"][\"ApparentPower\"]),\n    AnycubicVolt: Number(obj[\"ENERGY\"][\"Voltage\"]),\n    AnycubicCurrent: Number(obj[\"ENERGY\"][\"Current\"]),\n    AnycubicPowFact: Number(obj[\"ENERGY\"][\"Factor\"]),\n    AnycubicCurrEnergy: Number(CurrPrintEnergy)\n}; \nreturn msg;\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 80,
        "wires": [
            [
                "2a103049.f6a29"
            ]
        ]
    },
    {
        "id": "2a103049.f6a29",
        "type": "switch",
        "z": "9963931.9232c7",
        "g": "7d3411b0.20fc7",
        "name": "",
        "property": "payload.AnycubicVolt",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "20",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 650,
        "y": 80,
        "wires": [
            [
                "3a6c508.ebe3cb",
                "f571eda1.7d3f5"
            ]
        ]
    },
    {
        "id": "3073af6c.b8faf",
        "type": "link in",
        "z": "9963931.9232c7",
        "g": "b83af794.4bec68",
        "name": "Printer Control IN",
        "links": [
            "1dea714a.68511f"
        ],
        "x": 175,
        "y": 260,
        "wires": [
            [
                "98f49115.c6a88",
                "8d91d7c450e7b770"
            ]
        ]
    },
    {
        "id": "eb3968c3.bb5428",
        "type": "inject",
        "z": "9963931.9232c7",
        "g": "b83af794.4bec68",
        "name": "Run",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Printing",
        "payloadType": "str",
        "x": 130,
        "y": 460,
        "wires": [
            [
                "98f49115.c6a88",
                "8d91d7c450e7b770"
            ]
        ]
    },
    {
        "id": "da1d5372.6280b",
        "type": "inject",
        "z": "9963931.9232c7",
        "g": "b83af794.4bec68",
        "name": "Stop",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "stop",
        "payloadType": "str",
        "x": 130,
        "y": 500,
        "wires": [
            [
                "98f49115.c6a88"
            ]
        ]
    },
    {
        "id": "c84605f2.fc07b8",
        "type": "inject",
        "z": "9963931.9232c7",
        "g": "b83af794.4bec68",
        "name": "ResetAll",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "resetAll",
        "payloadType": "str",
        "x": 140,
        "y": 300,
        "wires": [
            [
                "98f49115.c6a88"
            ]
        ]
    },
    {
        "id": "98f49115.c6a88",
        "type": "function",
        "z": "9963931.9232c7",
        "g": "b83af794.4bec68",
        "name": "Reset and Status",
        "func": "if (msg.payload == \"resetAll\") {\n    flow.set(\"nozzlecount\",49, \"file\");\n    flow.set(\"heatbreakcount\",10000, \"file\");\n    flow.set(\"PTFECount\",0, \"file\");\n    flow.set(\"MaintenanceCount\",50, \"file\");\n   \n}\n\nif (msg.payload == \"resetNozzle\") {\n      flow.set(\"nozzlecount\",0, \"file\");\n}\n\nif (msg.payload == \"resetHeatbreak\") {\n      flow.set(\"heatbreakcount\",10000, \"file\");\n}\n\nif (msg.payload == \"resetPTFE\") {\n      flow.set(\"PTFECount\",0, \"file\");\n}\n\nif (msg.payload == \"resetMaintenanceCount\") {\n      flow.set(\"MaintenanceCount\",0, \"file\");\n}\n\n\n\n\nif (msg.payload == \"Printing\")\n{\n    flow.set(\"status\",\"run\");\n}\nelse {\n    flow.set(\"status\",\"stop\")\n}\n",
        "outputs": 0,
        "timeout": "",
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is deployed.\n// Code added here will be run once\n// whenever the node is deployed.\n",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 400,
        "wires": []
    },
    {
        "id": "2464e0ea.8854",
        "type": "inject",
        "z": "9963931.9232c7",
        "g": "b83af794.4bec68",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 130,
        "y": 560,
        "wires": [
            [
                "aeeace25.46d86"
            ]
        ]
    },
    {
        "id": "aeeace25.46d86",
        "type": "function",
        "z": "9963931.9232c7",
        "g": "b83af794.4bec68",
        "name": "TOHCounter",
        "func": "var status = flow.get(\"status\");\nvar nozzlecount = flow.get(\"nozzlecount\", \"file\");\nvar heatbreakcount = flow.get(\"heatbreakcount\", \"file\") ;\nvar PTFECount = flow.get(\"PTFECount\", \"file\") || 0;\nvar MaintenanceCount = flow.get(\"MaintenanceCount\", \"file\") || 0;\n\nvar JsonObj;\n\nif (status == \"run\"){\n    nozzlecount = nozzlecount +1;\n    heatbreakcount = heatbreakcount +1;\n    PTFECount = PTFECount +1;\n    MaintenanceCount = MaintenanceCount +1;\n\n    flow.set(\"nozzlecount\", nozzlecount, \"file\");\n    flow.set(\"heatbreakcount\", heatbreakcount, \"file\");\n    flow.set(\"PTFECount\", PTFECount, \"file\");\n    flow.set(\"MaintenanceCount\", MaintenanceCount, \"file\");\n\nmsg.mystatus = status;\n\nmsg.payload = {\n    AnycubicHNozzle: Number(nozzlecount), \n    AnycubicHHeatbreak: Number(heatbreakcount),\n    AnycubicHPTFE: Number(PTFECount),\n    AnycubicMaintenance: Number(MaintenanceCount)\n}; \nnode.status({fill:\"green\",shape:\"ring\",text: status});\nreturn msg;\n}\nelse node.status({fill:\"green\",shape:\"ring\",text: status});\n\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\nvar status = flow.get(\"status\");",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 560,
        "wires": [
            [
                "6c3ad4d5.7c797c",
                "9bf89ef510fe6859"
            ]
        ]
    },
    {
        "id": "76c727f9.1bd188",
        "type": "inject",
        "z": "9963931.9232c7",
        "g": "b83af794.4bec68",
        "name": "Reset Nozzle",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "resetNozzle",
        "payloadType": "str",
        "x": 160,
        "y": 340,
        "wires": [
            [
                "98f49115.c6a88",
                "8d91d7c450e7b770"
            ]
        ]
    },
    {
        "id": "4e87f92e.0671f8",
        "type": "inject",
        "z": "9963931.9232c7",
        "g": "b83af794.4bec68",
        "name": "Reset Heatbreak",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "resetHeatbreak",
        "payloadType": "str",
        "x": 170,
        "y": 380,
        "wires": [
            [
                "98f49115.c6a88",
                "8d91d7c450e7b770"
            ]
        ]
    },
    {
        "id": "48c974e1.caa28c",
        "type": "inject",
        "z": "9963931.9232c7",
        "g": "b83af794.4bec68",
        "name": "Reset PTFE",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "resetPTFE",
        "payloadType": "str",
        "x": 150,
        "y": 420,
        "wires": [
            [
                "98f49115.c6a88",
                "8d91d7c450e7b770"
            ]
        ]
    },
    {
        "id": "6c3ad4d5.7c797c",
        "type": "debug",
        "z": "9963931.9232c7",
        "g": "b83af794.4bec68",
        "name": "CounterDatabaseOutput",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 530,
        "y": 560,
        "wires": []
    },
    {
        "id": "2d7342af.ce708e",
        "type": "comment",
        "z": "9963931.9232c7",
        "g": "b83af794.4bec68",
        "name": "Printer Total Operating Hours",
        "info": "",
        "x": 500,
        "y": 240,
        "wires": []
    },
    {
        "id": "4965a0c.3a0ac6",
        "type": "inject",
        "z": "9963931.9232c7",
        "g": "b83af794.4bec68",
        "name": "reset Maintenance",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "resetMaintenanceCount",
        "payloadType": "str",
        "x": 390,
        "y": 300,
        "wires": [
            [
                "98f49115.c6a88"
            ]
        ]
    },
    {
        "id": "75749182.28289",
        "type": "inject",
        "z": "9963931.9232c7",
        "g": "b83af794.4bec68",
        "name": "Read Values From DB",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 660,
        "wires": [
            [
                "3b155418.9a8f0c"
            ]
        ]
    },
    {
        "id": "6f4763e9.e5576c",
        "type": "function",
        "z": "9963931.9232c7",
        "g": "b83af794.4bec68",
        "name": "Set Flow Values",
        "func": "    flow.set(\"nozzlecount\",msg.payload[0].last_AnycubicHNozzle, \"file\");\n    flow.set(\"heatbreakcount\",msg.payload[0].last_AnycubicHHeatbreak, \"file\");\n    flow.set(\"PTFECount\",msg.payload[0].last_AnycubicHPTFE, \"file\");\n    flow.set(\"MaintenanceCount\",msg.payload[0].last_AnycubicMaintenance, \"file\");\n   \n",
        "outputs": 0,
        "timeout": "",
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is deployed.\n// Code added here will be run once\n// whenever the node is deployed.\n",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 660,
        "wires": []
    },
    {
        "id": "532bc566.df7b1c",
        "type": "debug",
        "z": "9963931.9232c7",
        "g": "b83af794.4bec68",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 620,
        "wires": []
    },
    {
        "id": "f571eda1.7d3f5",
        "type": "influxdb out",
        "z": "9963931.9232c7",
        "g": "7d3411b0.20fc7",
        "influxdb": "e3f4c3e8.b52ee",
        "name": "AnyI3Power",
        "measurement": "AnyI3Power",
        "precision": "",
        "retentionPolicy": "",
        "database": "",
        "retentionPolicyV18Flux": "",
        "org": "",
        "bucket": "",
        "x": 810,
        "y": 80,
        "wires": []
    },
    {
        "id": "b2c4112c.bc82e",
        "type": "influxdb out",
        "z": "9963931.9232c7",
        "g": "b83af794.4bec68",
        "influxdb": "e3f4c3e8.b52ee",
        "name": "AnyI3Hours",
        "measurement": "AnyI3Hours",
        "precision": "",
        "retentionPolicy": "two_month",
        "database": "",
        "retentionPolicyV18Flux": "",
        "org": "",
        "bucket": "",
        "x": 630,
        "y": 520,
        "wires": []
    },
    {
        "id": "3b155418.9a8f0c",
        "type": "influxdb in",
        "z": "9963931.9232c7",
        "g": "b83af794.4bec68",
        "influxdb": "e3f4c3e8.b52ee",
        "name": "Read From DB",
        "query": "select last(*) FROM autogen.AnyI3Hours WHERE time >= 1646401680107ms and time <= 1648990080107ms fill(null)",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "",
        "x": 420,
        "y": 660,
        "wires": [
            [
                "6f4763e9.e5576c",
                "532bc566.df7b1c"
            ]
        ]
    },
    {
        "id": "9bf89ef510fe6859",
        "type": "delay",
        "z": "9963931.9232c7",
        "g": "b83af794.4bec68",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "2",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 460,
        "y": 520,
        "wires": [
            [
                "b2c4112c.bc82e"
            ]
        ]
    },
    {
        "id": "297dbb510b10e781",
        "type": "inject",
        "z": "9963931.9232c7",
        "g": "b83af794.4bec68",
        "name": "Start Run",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 620,
        "wires": [
            [
                "3ffa9cac5f01648d"
            ]
        ]
    },
    {
        "id": "3ffa9cac5f01648d",
        "type": "function",
        "z": "9963931.9232c7",
        "g": "b83af794.4bec68",
        "name": "function 6",
        "func": "flow.set(\"status\", \"run\");\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "b57696ce7b657e63",
        "type": "debug",
        "z": "9963931.9232c7",
        "g": "7d3411b0.20fc7",
        "name": "debug 49",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 420,
        "y": 180,
        "wires": []
    },
    {
        "id": "98e07e5594b2e3d3",
        "type": "inject",
        "z": "9963931.9232c7",
        "g": "7d3411b0.20fc7",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 140,
        "wires": [
            [
                "1a1c6586.ce182a"
            ]
        ]
    },
    {
        "id": "8d91d7c450e7b770",
        "type": "debug",
        "z": "9963931.9232c7",
        "g": "b83af794.4bec68",
        "name": "debug 50",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 460,
        "y": 440,
        "wires": []
    },
    {
        "id": "5eac9c57.76c314",
        "type": "mqtt out",
        "z": "7e5a345d.05161c",
        "g": "6666fbc0.896914",
        "name": "ShutterPosition",
        "topic": "cmnd/RolloEsstisch/ShutterPosition",
        "qos": "",
        "retain": "",
        "broker": "19cf2a10.f9d4a6",
        "x": 880,
        "y": 680,
        "wires": []
    },
    {
        "id": "f2c7f904.d08ef8",
        "type": "inject",
        "z": "7e5a345d.05161c",
        "g": "bec8f6bc.d0d348",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "10 00 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 100,
        "wires": [
            [
                "73de636f.d668ec"
            ]
        ]
    },
    {
        "id": "6e5f1bdf.1f22e4",
        "type": "inject",
        "z": "7e5a345d.05161c",
        "g": "bec8f6bc.d0d348",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 140,
        "wires": [
            [
                "73de636f.d668ec",
                "dfcc41b0.b3ad2"
            ]
        ]
    },
    {
        "id": "eb31c6ef.67a2f8",
        "type": "change",
        "z": "7e5a345d.05161c",
        "g": "bec8f6bc.d0d348",
        "name": "Set Global Day",
        "rules": [
            {
                "t": "set",
                "p": "day",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 520,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "54ec2f51.f58c5",
        "type": "debug",
        "z": "7e5a345d.05161c",
        "g": "4cff6fb8.ecd81",
        "name": "Nur Clouds",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 300,
        "wires": []
    },
    {
        "id": "b907c2ad.b1417",
        "type": "change",
        "z": "7e5a345d.05161c",
        "g": "4cff6fb8.ecd81",
        "name": "Only Clouds",
        "rules": [
            {
                "t": "move",
                "p": "payload.clouds",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 300,
        "wires": [
            [
                "54ec2f51.f58c5"
            ]
        ]
    },
    {
        "id": "e5d7026a.0a239",
        "type": "change",
        "z": "7e5a345d.05161c",
        "g": "4cff6fb8.ecd81",
        "name": "WeatherID",
        "rules": [
            {
                "t": "move",
                "p": "payload.id",
                "pt": "msg",
                "to": "WeatherID",
                "tot": "msg"
            },
            {
                "t": "move",
                "p": "payload.clouds",
                "pt": "msg",
                "to": "clouds",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 340,
        "wires": [
            [
                "48947d58.eae5c4",
                "d26a7c85.ed299",
                "f69a51fd.3a899"
            ]
        ]
    },
    {
        "id": "48947d58.eae5c4",
        "type": "debug",
        "z": "7e5a345d.05161c",
        "g": "4cff6fb8.ecd81",
        "name": "WeatherID",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "WeatherID",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 340,
        "wires": []
    },
    {
        "id": "7bd02856.8f5288",
        "type": "mqtt in",
        "z": "7e5a345d.05161c",
        "g": "6666fbc0.896914",
        "name": "",
        "topic": "stat/RolloEsstisch/SHUTTER1",
        "qos": "2",
        "datatype": "auto",
        "broker": "19cf2a10.f9d4a6",
        "inputs": 0,
        "x": 180,
        "y": 740,
        "wires": [
            [
                "4fbc55c0.c9f85c"
            ]
        ]
    },
    {
        "id": "1f1a9b31.1e6da5",
        "type": "inject",
        "z": "7e5a345d.05161c",
        "g": "6666fbc0.896914",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "setSunDataMinAltitude",
        "payload": "50",
        "payloadType": "num",
        "x": 190,
        "y": 680,
        "wires": [
            [
                "6ac2e536.abb7ec"
            ]
        ]
    },
    {
        "id": "b71e2911.a2d248",
        "type": "inject",
        "z": "7e5a345d.05161c",
        "g": "6666fbc0.896914",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "setSunDataMinAltitude",
        "payload": "5",
        "payloadType": "num",
        "x": 190,
        "y": 600,
        "wires": [
            [
                "6ac2e536.abb7ec"
            ]
        ]
    },
    {
        "id": "967f00fa.1ae43",
        "type": "inject",
        "z": "7e5a345d.05161c",
        "g": "6666fbc0.896914",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "setSunDataMinAltitude",
        "payload": "30",
        "payloadType": "num",
        "x": 190,
        "y": 640,
        "wires": [
            [
                "6ac2e536.abb7ec"
            ]
        ]
    },
    {
        "id": "719dd77e.126428",
        "type": "mqtt out",
        "z": "7e5a345d.05161c",
        "g": "3f11d194.8d04ee",
        "name": "ShutterPosition",
        "topic": "cmnd/RolloWohnzimmer/ShutterPosition",
        "qos": "2",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "19cf2a10.f9d4a6",
        "x": 880,
        "y": 940,
        "wires": []
    },
    {
        "id": "18b04498.89bb7b",
        "type": "inject",
        "z": "7e5a345d.05161c",
        "g": "3f11d194.8d04ee",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "setSunDataMinAltitude",
        "payload": "40",
        "payloadType": "num",
        "x": 190,
        "y": 960,
        "wires": [
            [
                "7c0e361f.f82ce8"
            ]
        ]
    },
    {
        "id": "55fe76a1.962bf8",
        "type": "inject",
        "z": "7e5a345d.05161c",
        "g": "3f11d194.8d04ee",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "setSunDataMinAltitude",
        "payload": "5",
        "payloadType": "num",
        "x": 190,
        "y": 880,
        "wires": [
            [
                "7c0e361f.f82ce8"
            ]
        ]
    },
    {
        "id": "ac11dbc3.138ca8",
        "type": "inject",
        "z": "7e5a345d.05161c",
        "g": "3f11d194.8d04ee",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "setSunDataMinAltitude",
        "payload": "20",
        "payloadType": "num",
        "x": 190,
        "y": 920,
        "wires": [
            [
                "7c0e361f.f82ce8"
            ]
        ]
    },
    {
        "id": "ced3fe1b.5db5b",
        "type": "mqtt in",
        "z": "7e5a345d.05161c",
        "g": "3f11d194.8d04ee",
        "name": "",
        "topic": "stat/RolloWohnzimmer/SHUTTER1",
        "qos": "2",
        "datatype": "auto",
        "broker": "19cf2a10.f9d4a6",
        "inputs": 0,
        "x": 200,
        "y": 1020,
        "wires": [
            [
                "97695071.468dc"
            ]
        ]
    },
    {
        "id": "1a538972.87cf07",
        "type": "mqtt out",
        "z": "7e5a345d.05161c",
        "g": "c87697c7.9b9e58",
        "name": "ShutterPosition",
        "topic": "cmnd/RolloTuere/ShutterPosition",
        "qos": "1",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "19cf2a10.f9d4a6",
        "x": 880,
        "y": 1180,
        "wires": []
    },
    {
        "id": "a74fc78c.af3c88",
        "type": "mqtt in",
        "z": "7e5a345d.05161c",
        "g": "c87697c7.9b9e58",
        "name": "",
        "topic": "stat/RolloTuere/SHUTTER1",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "19cf2a10.f9d4a6",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 180,
        "y": 1260,
        "wires": [
            [
                "fb2be545.fa3808",
                "020815130193de39"
            ]
        ]
    },
    {
        "id": "fd62f2d7.c32f7",
        "type": "link in",
        "z": "7e5a345d.05161c",
        "g": "c87697c7.9b9e58",
        "name": "Rollo Esstisch",
        "links": [
            "89de660e.32b288"
        ],
        "x": 615,
        "y": 1180,
        "wires": [
            [
                "1a538972.87cf07"
            ]
        ]
    },
    {
        "id": "18eca755.0bbeb9",
        "type": "link in",
        "z": "7e5a345d.05161c",
        "g": "c87697c7.9b9e58",
        "name": "T√ºre offen",
        "links": [
            "e38e18ad.3476f8"
        ],
        "x": 85,
        "y": 1140,
        "wires": [
            [
                "2d76da21.b8b846"
            ]
        ]
    },
    {
        "id": "2d76da21.b8b846",
        "type": "change",
        "z": "7e5a345d.05161c",
        "g": "c87697c7.9b9e58",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "trigger",
                "pt": "msg",
                "to": "true",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 210,
        "y": 1140,
        "wires": [
            [
                "b0373bec.1ade48",
                "45946f85.a2da8"
            ]
        ]
    },
    {
        "id": "b9f43bc.ca86bc8",
        "type": "mqtt out",
        "z": "7e5a345d.05161c",
        "g": "7ce4548d.b8ed0c",
        "name": "",
        "topic": "cmnd/RolloTom/ShutterPosition",
        "qos": "",
        "retain": "",
        "broker": "19cf2a10.f9d4a6",
        "x": 730,
        "y": 1360,
        "wires": []
    },
    {
        "id": "fbb3d4c7.4328d8",
        "type": "link in",
        "z": "7e5a345d.05161c",
        "g": "3f11d194.8d04ee",
        "name": "WeatherID",
        "links": [
            "f69a51fd.3a899"
        ],
        "x": 275,
        "y": 840,
        "wires": [
            [
                "7c0e361f.f82ce8"
            ]
        ]
    },
    {
        "id": "f69a51fd.3a899",
        "type": "link out",
        "z": "7e5a345d.05161c",
        "g": "4cff6fb8.ecd81",
        "name": "WeatherID",
        "links": [
            "fbb3d4c7.4328d8",
            "f525cf20.f74e1",
            "a0085f1f.0f307",
            "75086919.4e5548",
            "b58ef69469567186"
        ],
        "x": 555,
        "y": 420,
        "wires": []
    },
    {
        "id": "e1e1185c.2c8d88",
        "type": "link in",
        "z": "7e5a345d.05161c",
        "g": "6666fbc0.896914",
        "name": "Wohnzimmer Zentralschalter",
        "links": [
            "89de660e.32b288"
        ],
        "x": 555,
        "y": 680,
        "wires": [
            [
                "5eac9c57.76c314"
            ]
        ]
    },
    {
        "id": "bc21088d.1042d8",
        "type": "mqtt in",
        "z": "7e5a345d.05161c",
        "g": "7ce4548d.b8ed0c",
        "name": "",
        "topic": "stat/RolloTom/SHUTTER1",
        "qos": "2",
        "datatype": "auto",
        "broker": "19cf2a10.f9d4a6",
        "inputs": 0,
        "x": 170,
        "y": 1360,
        "wires": [
            [
                "29e92fc.65284d"
            ]
        ]
    },
    {
        "id": "44ca9388.fa0d3c",
        "type": "inject",
        "z": "7e5a345d.05161c",
        "g": "4cff6fb8.ecd81",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "600",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "#:(file)::TempOut",
        "payloadType": "global",
        "x": 370,
        "y": 260,
        "wires": [
            [
                "243db6c7.15d31a"
            ]
        ]
    },
    {
        "id": "f525cf20.f74e1",
        "type": "link in",
        "z": "7e5a345d.05161c",
        "g": "6666fbc0.896914",
        "name": "",
        "links": [
            "f69a51fd.3a899"
        ],
        "x": 275,
        "y": 560,
        "wires": [
            [
                "6ac2e536.abb7ec"
            ]
        ]
    },
    {
        "id": "1f2409.3d5e7bf8",
        "type": "link in",
        "z": "7e5a345d.05161c",
        "g": "3f11d194.8d04ee",
        "name": "",
        "links": [
            "89de660e.32b288"
        ],
        "x": 555,
        "y": 960,
        "wires": [
            [
                "719dd77e.126428"
            ]
        ]
    },
    {
        "id": "dfcc41b0.b3ad2",
        "type": "change",
        "z": "7e5a345d.05161c",
        "g": "bec8f6bc.d0d348",
        "name": "Set Global On Holiday",
        "rules": [
            {
                "t": "set",
                "p": "OnHoliday",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 550,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "45946f85.a2da8",
        "type": "debug",
        "z": "7e5a345d.05161c",
        "g": "c87697c7.9b9e58",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 440,
        "y": 1220,
        "wires": []
    },
    {
        "id": "20e6409a.ffe67",
        "type": "inject",
        "z": "7e5a345d.05161c",
        "g": "6666fbc0.896914",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "setWindowSettingsAzimuthEnd",
        "payload": "100",
        "payloadType": "num",
        "x": 210,
        "y": 720,
        "wires": [
            [
                "6ac2e536.abb7ec"
            ]
        ]
    },
    {
        "id": "485a5be0.812e94",
        "type": "mqtt out",
        "z": "7e5a345d.05161c",
        "g": "40f7136f.c806bc",
        "name": "Rollo Schlafzimmer",
        "topic": "RolloSchlafzimmer/command/cover:0",
        "qos": "1",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "19cf2a10.f9d4a6",
        "x": 1050,
        "y": 2100,
        "wires": []
    },
    {
        "id": "28683cb0.557de4",
        "type": "function",
        "z": "7e5a345d.05161c",
        "g": "40f7136f.c806bc",
        "name": "combine msg",
        "func": "//create string with command and value\n//V0.1\nvar command = \"pos,\"\nvar value = msg.payload\nvar output= \"empty\"\nmsg.topic = \"topic\"\noutput = command + value\nmsg.payload = output\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 870,
        "y": 2100,
        "wires": [
            [
                "485a5be0.812e94",
                "79e70291102b361f"
            ]
        ]
    },
    {
        "id": "24a92b79.3ccad4",
        "type": "mqtt in",
        "z": "7e5a345d.05161c",
        "g": "40f7136f.c806bc",
        "name": "",
        "topic": "RolloSchlafzimmer/status/cover:0",
        "qos": "2",
        "datatype": "auto",
        "broker": "19cf2a10.f9d4a6",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 190,
        "y": 1960,
        "wires": [
            [
                "47b1e704.2b8a68"
            ]
        ]
    },
    {
        "id": "47b1e704.2b8a68",
        "type": "json",
        "z": "7e5a345d.05161c",
        "g": "40f7136f.c806bc",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 390,
        "y": 1960,
        "wires": [
            [
                "166a9b8664b09914",
                "c6aec482f41cd664"
            ]
        ]
    },
    {
        "id": "c25c352a.ce5a48",
        "type": "change",
        "z": "7e5a345d.05161c",
        "g": "40f7136f.c806bc",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.current_pos",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 750,
        "y": 1960,
        "wires": [
            [
                "52f4f339.08914c"
            ]
        ]
    },
    {
        "id": "52f4f339.08914c",
        "type": "switch",
        "z": "7e5a345d.05161c",
        "g": "40f7136f.c806bc",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 190,
        "y": 2100,
        "wires": [
            [
                "b4458220578284d6"
            ]
        ]
    },
    {
        "id": "75086919.4e5548",
        "type": "link in",
        "z": "7e5a345d.05161c",
        "g": "40f7136f.c806bc",
        "name": "WeatherID",
        "links": [
            "f69a51fd.3a899"
        ],
        "x": 235,
        "y": 2180,
        "wires": [
            [
                "eec0f371.5a3f3"
            ]
        ]
    },
    {
        "id": "73de636f.d668ec",
        "type": "german-holidays",
        "z": "7e5a345d.05161c",
        "g": "bec8f6bc.d0d348",
        "name": "",
        "topic": "",
        "region": "",
        "holidays": [
            {
                "id": "NEUJAHRSTAG",
                "name": "Neujahrstag",
                "nameAlt": "",
                "character": 2,
                "month": 1,
                "day": 1,
                "nth": 0,
                "dow": 1,
                "plType": "none",
                "plValue": ""
            },
            {
                "id": "HEILIGEDREIKOENIGE",
                "name": "Heilige Drei K√∂nige",
                "nameAlt": "Epiphanias",
                "character": 2,
                "month": 1,
                "day": 6,
                "nth": 0,
                "dow": 6,
                "plType": "none",
                "plValue": ""
            },
            {
                "id": "KARFREITAG",
                "name": "Karfreitag",
                "nameAlt": "",
                "character": 2,
                "month": -1,
                "day": -2,
                "nth": 0,
                "dow": -2,
                "plType": "none",
                "plValue": ""
            },
            {
                "id": "OSTERMONTAG",
                "name": "Ostermontag",
                "nameAlt": "",
                "character": 2,
                "month": -1,
                "day": 1,
                "nth": 0,
                "dow": 1,
                "plType": "none",
                "plValue": ""
            },
            {
                "id": "TAG_DER_ARBEIT",
                "name": "Maifeiertag",
                "nameAlt": "Tag der Arbeit",
                "character": 256,
                "month": 5,
                "day": 1,
                "nth": 0,
                "dow": 1,
                "plType": "none",
                "plValue": ""
            },
            {
                "id": "CHRISTIHIMMELFAHRT",
                "name": "Christi Himmelfahrt",
                "nameAlt": "Vatertag",
                "character": 2,
                "month": -1,
                "day": 39,
                "nth": 5,
                "dow": 4,
                "plType": "none",
                "plValue": ""
            },
            {
                "id": "PFINGSTMONTAG",
                "name": "Pfingstmontag",
                "nameAlt": "",
                "character": 2,
                "month": -1,
                "day": 50,
                "nth": 7,
                "dow": 1,
                "plType": "none",
                "plValue": ""
            },
            {
                "id": "FRONLEICHNAM",
                "name": "Fronleichnam",
                "nameAlt": "",
                "character": 2,
                "month": -1,
                "day": 60,
                "nth": 8,
                "dow": 4,
                "plType": "none",
                "plValue": ""
            },
            {
                "id": "MARIAHIMMELFAHRT",
                "name": "Mari√§ Himmelfahrt",
                "nameAlt": "",
                "character": 1024,
                "month": 8,
                "day": 15,
                "nth": 2,
                "dow": 1,
                "plType": "none",
                "plValue": ""
            },
            {
                "id": "DEUTSCHEEINHEIT",
                "name": "Tag der Deutschen Einheit",
                "nameAlt": "",
                "character": 4,
                "month": 10,
                "day": 3,
                "nth": 0,
                "dow": 3,
                "plType": "none",
                "plValue": ""
            },
            {
                "id": "ALLERHEILIGEN",
                "name": "Allerheiligen",
                "nameAlt": "",
                "character": 2,
                "month": 11,
                "day": 1,
                "nth": 0,
                "dow": 1,
                "plType": "none",
                "plValue": ""
            },
            {
                "id": "ERSTERWEIHNACHTSFEIERTAG",
                "name": "1. Weihnachtstag",
                "nameAlt": "Christtag",
                "character": 2,
                "month": 12,
                "day": 25,
                "nth": 3,
                "dow": 4,
                "plType": "none",
                "plValue": ""
            },
            {
                "id": "ZWEITERWEIHNACHTSFEIERTAG",
                "name": "2. Weihnachtstag",
                "nameAlt": "Stefanitag",
                "character": 2,
                "month": 12,
                "day": 26,
                "nth": 3,
                "dow": 5,
                "plType": "none",
                "plValue": ""
            }
        ],
        "specialdays": [
            {
                "id": "",
                "name": "Geburtstag",
                "nameAlt": "",
                "character": 8,
                "month": 1,
                "day": 13,
                "nth": 1,
                "dow": 5,
                "plType": "none",
                "plValue": ""
            }
        ],
        "x": 340,
        "y": 100,
        "wires": [
            [
                "eb31c6ef.67a2f8"
            ]
        ]
    },
    {
        "id": "6ac2e536.abb7ec",
        "type": "blind-control",
        "z": "7e5a345d.05161c",
        "g": "6666fbc0.896914",
        "name": "RolloEsstisch",
        "topic": "",
        "addIdType": "none",
        "addId": "",
        "positionConfig": "9a5a8534.25d4d8",
        "autoTrigger": true,
        "autoTriggerTime": "600000",
        "startDelayTime": 10000,
        "contextStore": "",
        "results": [
            {
                "p": "",
                "pt": "msgTopic",
                "v": "",
                "vt": "topic"
            },
            {
                "p": "",
                "pt": "msgPayload",
                "v": "",
                "vt": "level"
            },
            {
                "p": "slat",
                "pt": "msg",
                "v": "",
                "vt": "slat"
            },
            {
                "p": "blindCtrl",
                "pt": "msg",
                "v": "",
                "vt": "ctrlObj"
            }
        ],
        "blindIncrement": "1",
        "blindOpenPos": "100",
        "blindClosedPos": "0",
        "blindPosReverse": false,
        "blindPosDefault": "open (max)",
        "blindPosDefaultType": "levelFixed",
        "slatPosDefault": "",
        "slatPosDefaultType": "none",
        "overwriteExpire": "1800000",
        "rules": [
            {
                "index": 0,
                "name": "HolidayWeekend",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [
                    {
                        "valueType": "global",
                        "value": "day.today.isWeekendOrHoliday",
                        "operator": "true",
                        "operatorText": "ist true",
                        "thresholdType": "num",
                        "threshold": "0"
                    }
                ],
                "level": {
                    "type": "levelFixed",
                    "value": "closed (min)",
                    "operator": 0,
                    "operatorText": "‚Üï  Absolut"
                },
                "slat": {
                    "type": "none",
                    "value": ""
                },
                "topic": "",
                "resetOverwrite": false,
                "importance": 0,
                "time": {
                    "type": "entered",
                    "value": "7:45",
                    "operator": 0,
                    "operatorText": "‚Ü• bis",
                    "offsetType": "num",
                    "offset": "1",
                    "multiplier": 60000,
                    "days": "*",
                    "months": "*"
                },
                "description": "<div><i class=\"fa fa-code-fork\" aria-hidden=\"true\"></i> <var>global.day.today.isWeekendOrHoliday</var> ist true</div><div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ‚Ü• bis <var>7:45</var> + 00:01</div><div><div class=\"indent-level-text\"> <i class=\"fa fa-angle-down\" aria-hidden=\"true\"></i><span>Rollladenposition: </span> ‚Üï  Absolut <var>geschlossen (min)</var></div></div>"
            },
            {
                "index": 1,
                "name": "SonAufgAuf ",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [],
                "level": {
                    "type": "levelFixed",
                    "value": "closed (min)",
                    "operator": 0,
                    "operatorText": "‚Üï  Absolut"
                },
                "slat": {
                    "type": "none",
                    "value": ""
                },
                "topic": "",
                "resetOverwrite": false,
                "importance": 0,
                "time": {
                    "type": "pdsTime",
                    "value": "sunriseStart",
                    "operator": 0,
                    "operatorText": "‚Ü• bis",
                    "offsetType": "num",
                    "offset": "10",
                    "multiplier": 60000,
                    "days": "*",
                    "months": "*"
                },
                "timeMin": {
                    "type": "entered",
                    "value": "7:00",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000
                },
                "timeMax": {
                    "type": "entered",
                    "value": "9:00",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000
                },
                "description": "<div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ‚Ü• bis <var>Sonnenaufgang Beginn</var> + 00:10<div class=\"indent-time-text\"><i class=\"fa fa-step-backward\" aria-hidden=\"true\"></i> <span>fr√ºhestens (min)</span> <var>7:00</var></div><div class=\"indent-time-text\"><i class=\"fa fa-step-forward\" aria-hidden=\"true\"></i> <span>sp√§testens (max)</span> <var>9:00</var></div></div><div><div class=\"indent-level-text\"> <i class=\"fa fa-angle-down\" aria-hidden=\"true\"></i><span>Rollladenposition: </span> ‚Üï  Absolut <var>geschlossen (min)</var></div></div>"
            },
            {
                "index": 2,
                "name": "Hitze",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [
                    {
                        "valueType": "global",
                        "value": "#:(file)::TempOut",
                        "operator": "gte",
                        "operatorText": ">=",
                        "thresholdType": "num",
                        "threshold": "24"
                    }
                ],
                "level": {
                    "type": "levelFixed",
                    "value": "33%",
                    "operator": 0,
                    "operatorText": "‚Üï  Absolut"
                },
                "slat": {
                    "type": "none",
                    "value": ""
                },
                "topic": "",
                "resetOverwrite": false,
                "importance": 0,
                "description": "<div><i class=\"fa fa-code-fork\" aria-hidden=\"true\"></i> <var>global.TempOut</var> >= 24</div><div><div class=\"indent-level-text\"> <i class=\"fa fa-angle-down\" aria-hidden=\"true\"></i><span>Rollladenposition: </span> ‚Üï  Absolut <var>33%</var></div></div>"
            },
            {
                "index": 3,
                "name": "starke Hitze",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [
                    {
                        "valueType": "global",
                        "value": "#:(file)::TempOut",
                        "operator": "gte",
                        "operatorText": "‚â•",
                        "thresholdType": "num",
                        "threshold": "30"
                    }
                ],
                "level": {
                    "type": "levelFixed",
                    "value": "closed (min)",
                    "operator": 0,
                    "operatorText": "‚Üï absolute"
                },
                "slat": {
                    "type": "none",
                    "value": ""
                },
                "topic": "",
                "resetOverwrite": false,
                "importance": 0,
                "description": "<div><i class=\"fa fa-code-fork\" aria-hidden=\"true\"></i> <var>global.TempOut</var> ‚â• 30</div><div><div class=\"indent-level-text\"> <i class=\"fa fa-angle-down\" aria-hidden=\"true\"></i><span>blind position: </span> ‚Üï absolute <var>closed (min)</var></div></div>"
            },
            {
                "index": 4,
                "name": "Wetter Regen",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [
                    {
                        "valueType": "msg",
                        "value": "WeatherID",
                        "operator": "gte",
                        "operatorText": ">=",
                        "thresholdType": "num",
                        "threshold": "502"
                    },
                    {
                        "condition": 2,
                        "conditionText": "und",
                        "valueType": "msg",
                        "value": "WeatherID",
                        "operator": "lt",
                        "operatorText": "<",
                        "thresholdType": "num",
                        "threshold": "504"
                    },
                    {
                        "condition": 1,
                        "conditionText": "oder",
                        "valueType": "msg",
                        "value": "WeatherID",
                        "operator": "gte",
                        "operatorText": ">=",
                        "thresholdType": "num",
                        "threshold": "522"
                    },
                    {
                        "condition": 2,
                        "conditionText": "und",
                        "valueType": "msg",
                        "value": "WeatherID",
                        "operator": "lt",
                        "operatorText": "<",
                        "thresholdType": "num",
                        "threshold": "600"
                    }
                ],
                "level": {
                    "type": "levelFixed",
                    "value": "33%",
                    "operator": 0,
                    "operatorText": "‚Üï  Absolut"
                },
                "slat": {
                    "type": "none",
                    "value": ""
                },
                "topic": "Weather Rain Condition",
                "resetOverwrite": false,
                "importance": 0,
                "description": "<div><i class=\"fa fa-code-fork\" aria-hidden=\"true\"></i> <var>msg.WeatherID</var> >= 502&nbsp;<strong>und</strong><br/><span class=\"indent-enh-text\" >&nbsp;</span>(&nbsp;<var>msg.WeatherID</var> < 504&nbsp;<strong>oder</strong><br/><span class=\"indent-enh-text\" >&nbsp;</span>(&nbsp;<var>msg.WeatherID</var> >= 522&nbsp;<strong>und</strong><br/><span class=\"indent-enh-text\" >&nbsp;</span><var>msg.WeatherID</var> < 600&nbsp;))</div><div><div class=\"indent-level-text\"> <i class=\"fa fa-angle-down\" aria-hidden=\"true\"></i><span>Rollladenposition: </span> ‚Üï  Absolut <var>33%</var></div><div class=\"indent-topic-text\"> <i class=\"fa fa-tasks\" aria-hidden=\"true\"></i><span>Topic: </span> <var>Weather Rain Condition</var></div></div>"
            },
            {
                "index": 5,
                "name": "Wetter Gewitter",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [
                    {
                        "valueType": "msg",
                        "value": "WeatherID",
                        "operator": "equal",
                        "operatorText": "=",
                        "thresholdType": "num",
                        "threshold": "202"
                    },
                    {
                        "condition": 1,
                        "conditionText": "oder",
                        "valueType": "msg",
                        "value": "WeatherID",
                        "operator": "gte",
                        "operatorText": ">=",
                        "thresholdType": "num",
                        "threshold": "212"
                    },
                    {
                        "condition": 2,
                        "conditionText": "und",
                        "valueType": "msg",
                        "value": "WeatherID",
                        "operator": "lt",
                        "operatorText": "<",
                        "thresholdType": "num",
                        "threshold": "230"
                    }
                ],
                "level": {
                    "type": "levelFixed",
                    "value": "25%",
                    "operator": 0,
                    "operatorText": "‚Üï  Absolut"
                },
                "slat": {
                    "type": "none",
                    "value": ""
                },
                "topic": "Weather Thunderstorm Condition",
                "resetOverwrite": false,
                "importance": 0,
                "description": "<div><i class=\"fa fa-code-fork\" aria-hidden=\"true\"></i> <var>msg.WeatherID</var> = 202&nbsp;<strong>oder</strong><br/><span class=\"indent-enh-text\" >&nbsp;</span>(&nbsp;<var>msg.WeatherID</var> >= 212&nbsp;<strong>und</strong><br/><span class=\"indent-enh-text\" >&nbsp;</span><var>msg.WeatherID</var> < 230&nbsp;)</div><div><div class=\"indent-level-text\"> <i class=\"fa fa-angle-down\" aria-hidden=\"true\"></i><span>Rollladenposition: </span> ‚Üï  Absolut <var>25%</var></div><div class=\"indent-topic-text\"> <i class=\"fa fa-tasks\" aria-hidden=\"true\"></i><span>Topic: </span> <var>Weather Thunderstorm Condition</var></div></div>"
            },
            {
                "index": 6,
                "name": "Wetter Schnee",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [
                    {
                        "valueType": "msg",
                        "value": "WeatherID",
                        "operator": "equal",
                        "operatorText": "=",
                        "thresholdType": "num",
                        "threshold": "602"
                    },
                    {
                        "condition": 1,
                        "conditionText": "oder",
                        "valueType": "msg",
                        "value": "WeatherID",
                        "operator": "equal",
                        "operatorText": "=",
                        "thresholdType": "num",
                        "threshold": "622"
                    }
                ],
                "level": {
                    "type": "levelFixed",
                    "value": "50%",
                    "operator": 0,
                    "operatorText": "‚Üï  Absolut"
                },
                "slat": {
                    "type": "none",
                    "value": ""
                },
                "topic": "Weather Snow Condition",
                "resetOverwrite": false,
                "importance": 0,
                "description": "<div><i class=\"fa fa-code-fork\" aria-hidden=\"true\"></i> <var>msg.WeatherID</var> = 602&nbsp;<strong>oder</strong><br/><span class=\"indent-enh-text\" >&nbsp;</span><var>msg.WeatherID</var> = 622</div><div><div class=\"indent-level-text\"> <i class=\"fa fa-angle-down\" aria-hidden=\"true\"></i><span>Rollladenposition: </span> ‚Üï  Absolut <var>50%</var></div><div class=\"indent-topic-text\"> <i class=\"fa fa-tasks\" aria-hidden=\"true\"></i><span>Topic: </span> <var>Weather Snow Condition</var></div></div>"
            },
            {
                "index": 7,
                "name": "AbendsFastZu",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [],
                "level": {
                    "type": "levelFixed",
                    "value": "33%",
                    "operator": 0,
                    "operatorText": "‚Üï  Absolut"
                },
                "slat": {
                    "type": "none",
                    "value": ""
                },
                "topic": "",
                "resetOverwrite": false,
                "importance": 0,
                "time": {
                    "type": "pdsTime",
                    "value": "sunsetStart",
                    "operator": 1,
                    "operatorText": "‚Üß von",
                    "offsetType": "num",
                    "offset": "20",
                    "multiplier": 60000,
                    "days": "*",
                    "months": "*"
                },
                "timeMin": {
                    "type": "entered",
                    "value": "15:30",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000
                },
                "description": "<div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ‚Üß von <var>Sonnenuntergang Beginn</var> + 00:20<div class=\"indent-time-text\"><i class=\"fa fa-step-backward\" aria-hidden=\"true\"></i> <span>fr√ºhestens (min)</span> <var>15:30</var></div></div><div><div class=\"indent-level-text\"> <i class=\"fa fa-angle-down\" aria-hidden=\"true\"></i><span>Rollladenposition: </span> ‚Üï  Absolut <var>33%</var></div></div>"
            },
            {
                "index": 8,
                "name": "SonnenuntergangZu",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [],
                "level": {
                    "type": "levelFixed",
                    "value": "closed (min)",
                    "operator": 0,
                    "operatorText": "‚Üï  Absolut"
                },
                "slat": {
                    "type": "none",
                    "value": ""
                },
                "topic": "",
                "resetOverwrite": false,
                "importance": 0,
                "time": {
                    "type": "pdsTime",
                    "value": "sunsetEnd",
                    "operator": 1,
                    "operatorText": "‚Üß von",
                    "offsetType": "num",
                    "offset": "30",
                    "multiplier": 60000,
                    "days": "*",
                    "months": "*"
                },
                "timeMin": {
                    "type": "entered",
                    "value": "16:30",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000
                },
                "timeMax": {
                    "type": "entered",
                    "value": "22:00",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000
                },
                "description": "<div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ‚Üß von <var>Sonnenuntergang Ende</var> + 00:30<div class=\"indent-time-text\"><i class=\"fa fa-step-backward\" aria-hidden=\"true\"></i> <span>fr√ºhestens (min)</span> <var>16:30</var></div><div class=\"indent-time-text\"><i class=\"fa fa-step-forward\" aria-hidden=\"true\"></i> <span>sp√§testens (max)</span> <var>22:00</var></div></div><div><div class=\"indent-level-text\"> <i class=\"fa fa-angle-down\" aria-hidden=\"true\"></i><span>Rollladenposition: </span> ‚Üï  Absolut <var>geschlossen (min)</var></div></div>"
            }
        ],
        "sunControlMode": 16,
        "sunFloorLengthType": "num",
        "sunFloorLength": "150",
        "sunMinDelta": "5",
        "blindPosMin": "20",
        "blindPosMinType": "num",
        "blindPosMax": "open (max)",
        "blindPosMaxType": "levelFixed",
        "blindOpenPosOffset": "",
        "blindClosedPosOffset": "",
        "sunSlat": "",
        "sunSlatType": "none",
        "smoothTime": "",
        "sunTopic": "SunShading",
        "windowTopType": "num",
        "windowTop": "205",
        "windowBottomType": "num",
        "windowBottom": "100",
        "windowAzimuthStartType": "numAzimuth",
        "windowAzimuthStart": "212",
        "windowAzimuthEndType": "numAzimuth",
        "windowAzimuthEnd": "255",
        "oversteers": [
            {
                "mode": 0,
                "valueType": "global",
                "value": "#:(file)::TempOut",
                "operator": "lt",
                "operatorText": "<",
                "thresholdType": "num",
                "threshold": "10",
                "onlySunInWindow": true,
                "blindPos": {
                    "type": "levelFixed",
                    "value": "open (max)"
                },
                "slatPos": {
                    "type": "none",
                    "value": ""
                }
            },
            {
                "mode": 0,
                "valueType": "pdsCalcElevation",
                "value": "",
                "operator": "lt",
                "operatorText": "<",
                "thresholdType": "numAltitude",
                "threshold": "12",
                "onlySunInWindow": true,
                "blindPos": {
                    "type": "levelFixed",
                    "value": "open (max)"
                },
                "slatPos": {
                    "type": "none",
                    "value": ""
                }
            },
            {
                "mode": 0,
                "valueType": "msg",
                "value": "clouds",
                "operator": "gte",
                "operatorText": ">=",
                "thresholdType": "num",
                "threshold": "80",
                "onlySunInWindow": true,
                "blindPos": {
                    "type": "levelFixed",
                    "value": "open (max)"
                },
                "slatPos": {
                    "type": "none",
                    "value": ""
                }
            },
            {
                "mode": 0,
                "valueType": "global",
                "value": "#:(file)::iRed",
                "operator": "lt",
                "operatorText": "<",
                "thresholdType": "num",
                "threshold": "4000",
                "onlySunInWindow": true,
                "blindPos": {
                    "type": "levelFixed",
                    "value": "open (max)"
                },
                "slatPos": {
                    "type": "none",
                    "value": ""
                }
            }
        ],
        "oversteerTopic": "CloudsOverwrite",
        "x": 480,
        "y": 620,
        "wires": [
            [
                "5eac9c57.76c314",
                "3c0c4256.7b9c2e"
            ],
            []
        ]
    },
    {
        "id": "7c0e361f.f82ce8",
        "type": "blind-control",
        "z": "7e5a345d.05161c",
        "g": "3f11d194.8d04ee",
        "name": "RolloWohnzimmer",
        "topic": "",
        "addIdType": "none",
        "addId": "",
        "positionConfig": "9a5a8534.25d4d8",
        "autoTrigger": true,
        "autoTriggerTime": "600000",
        "startDelayTime": 10000,
        "contextStore": "file",
        "results": [
            {
                "p": "",
                "pt": "msgTopic",
                "v": "",
                "vt": "topic"
            },
            {
                "p": "",
                "pt": "msgPayload",
                "v": "",
                "vt": "level"
            },
            {
                "p": "slat",
                "pt": "msg",
                "v": "",
                "vt": "slat"
            },
            {
                "p": "blindCtrl",
                "pt": "msg",
                "v": "",
                "vt": "ctrlObj"
            }
        ],
        "blindIncrement": "1",
        "blindOpenPos": "100",
        "blindClosedPos": "0",
        "blindPosReverse": false,
        "blindPosDefault": "open (max)",
        "blindPosDefaultType": "levelFixed",
        "slatPosDefault": "",
        "slatPosDefaultType": "none",
        "overwriteExpire": "",
        "rules": [
            {
                "index": 0,
                "name": "HolidayWeekend",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [
                    {
                        "valueType": "global",
                        "value": "day.today.isWeekendOrHoliday",
                        "operator": "true",
                        "operatorText": "ist true",
                        "thresholdType": "num",
                        "threshold": "0"
                    }
                ],
                "level": {
                    "type": "levelFixed",
                    "value": "closed (min)",
                    "operator": 0,
                    "operatorText": "‚Üï  Absolut"
                },
                "slat": {
                    "type": "none",
                    "value": ""
                },
                "topic": "",
                "resetOverwrite": false,
                "importance": 0,
                "time": {
                    "type": "entered",
                    "value": "7:45",
                    "operator": 0,
                    "operatorText": "‚Ü• bis",
                    "offsetType": "num",
                    "offset": "1",
                    "multiplier": 60000,
                    "days": "*",
                    "months": "*"
                },
                "description": "<div><i class=\"fa fa-code-fork\" aria-hidden=\"true\"></i> <var>global.day.today.isWeekendOrHoliday</var> ist true</div><div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ‚Ü• bis <var>7:45</var> + 00:01</div><div><div class=\"indent-level-text\"> <i class=\"fa fa-angle-down\" aria-hidden=\"true\"></i><span>Rollladenposition: </span> ‚Üï  Absolut <var>geschlossen (min)</var></div></div>"
            },
            {
                "index": 1,
                "name": "SonAufgAuf ",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [],
                "level": {
                    "type": "levelFixed",
                    "value": "closed (min)",
                    "operator": 0,
                    "operatorText": "‚Üï  Absolut"
                },
                "slat": {
                    "type": "none",
                    "value": ""
                },
                "topic": "",
                "resetOverwrite": false,
                "importance": 0,
                "time": {
                    "type": "pdsTime",
                    "value": "sunriseStart",
                    "operator": 0,
                    "operatorText": "‚Ü• bis",
                    "offsetType": "num",
                    "offset": "10",
                    "multiplier": 60000,
                    "days": "*",
                    "months": "*"
                },
                "timeMin": {
                    "type": "entered",
                    "value": "7:00",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000
                },
                "timeMax": {
                    "type": "entered",
                    "value": "9:00",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000
                },
                "description": "<div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ‚Ü• bis <var>Sonnenaufgang Beginn</var> + 00:10<div class=\"indent-time-text\"><i class=\"fa fa-step-backward\" aria-hidden=\"true\"></i> <span>fr√ºhestens (min)</span> <var>7:00</var></div><div class=\"indent-time-text\"><i class=\"fa fa-step-forward\" aria-hidden=\"true\"></i> <span>sp√§testens (max)</span> <var>9:00</var></div></div><div><div class=\"indent-level-text\"> <i class=\"fa fa-angle-down\" aria-hidden=\"true\"></i><span>Rollladenposition: </span> ‚Üï  Absolut <var>geschlossen (min)</var></div></div>"
            },
            {
                "index": 2,
                "name": "Hitze",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [
                    {
                        "valueType": "global",
                        "value": "#:(file)::TempOut",
                        "operator": "gte",
                        "operatorText": ">=",
                        "thresholdType": "num",
                        "threshold": "24"
                    }
                ],
                "level": {
                    "type": "levelFixed",
                    "value": "25%",
                    "operator": 0,
                    "operatorText": "‚Üï  Absolut"
                },
                "slat": {
                    "type": "none",
                    "value": ""
                },
                "topic": "",
                "resetOverwrite": false,
                "importance": 0,
                "description": "<div><i class=\"fa fa-code-fork\" aria-hidden=\"true\"></i> <var>global.TempOut</var> >= 24</div><div><div class=\"indent-level-text\"> <i class=\"fa fa-angle-down\" aria-hidden=\"true\"></i><span>Rollladenposition: </span> ‚Üï  Absolut <var>25%</var></div></div>"
            },
            {
                "index": 3,
                "name": "starke Hitze",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [
                    {
                        "valueType": "global",
                        "value": "#:(file)::TempOut",
                        "operator": "gte",
                        "operatorText": "‚â•",
                        "thresholdType": "num",
                        "threshold": "29"
                    }
                ],
                "level": {
                    "type": "levelFixed",
                    "value": "closed (min)",
                    "operator": 0,
                    "operatorText": "‚Üï absolute"
                },
                "slat": {
                    "type": "none",
                    "value": ""
                },
                "topic": "",
                "resetOverwrite": false,
                "importance": 0,
                "description": "<div><i class=\"fa fa-code-fork\" aria-hidden=\"true\"></i> <var>global.TempOut</var> ‚â• 29</div><div><div class=\"indent-level-text\"> <i class=\"fa fa-angle-down\" aria-hidden=\"true\"></i><span>blind position: </span> ‚Üï absolute <var>closed (min)</var></div></div>"
            },
            {
                "index": 4,
                "name": "Wetter Regen",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [
                    {
                        "valueType": "msg",
                        "value": "WeatherID",
                        "operator": "gte",
                        "operatorText": ">=",
                        "thresholdType": "num",
                        "threshold": "502"
                    },
                    {
                        "condition": 2,
                        "conditionText": "und",
                        "valueType": "msg",
                        "value": "WeatherID",
                        "operator": "lt",
                        "operatorText": "<",
                        "thresholdType": "num",
                        "threshold": "504"
                    },
                    {
                        "condition": 1,
                        "conditionText": "oder",
                        "valueType": "msg",
                        "value": "WeatherID",
                        "operator": "gte",
                        "operatorText": ">=",
                        "thresholdType": "num",
                        "threshold": "522"
                    },
                    {
                        "condition": 2,
                        "conditionText": "und",
                        "valueType": "msg",
                        "value": "WeatherID",
                        "operator": "lt",
                        "operatorText": "<",
                        "thresholdType": "num",
                        "threshold": "600"
                    }
                ],
                "level": {
                    "type": "levelFixed",
                    "value": "33%",
                    "operator": 0,
                    "operatorText": "‚Üï  Absolut"
                },
                "slat": {
                    "type": "none",
                    "value": ""
                },
                "topic": "Weather Rain Condition",
                "resetOverwrite": false,
                "importance": 0,
                "description": "<div><i class=\"fa fa-code-fork\" aria-hidden=\"true\"></i> <var>msg.WeatherID</var> >= 502&nbsp;<strong>und</strong><br/><span class=\"indent-enh-text\" >&nbsp;</span>(&nbsp;<var>msg.WeatherID</var> < 504&nbsp;<strong>oder</strong><br/><span class=\"indent-enh-text\" >&nbsp;</span>(&nbsp;<var>msg.WeatherID</var> >= 522&nbsp;<strong>und</strong><br/><span class=\"indent-enh-text\" >&nbsp;</span><var>msg.WeatherID</var> < 600&nbsp;))</div><div><div class=\"indent-level-text\"> <i class=\"fa fa-angle-down\" aria-hidden=\"true\"></i><span>Rollladenposition: </span> ‚Üï  Absolut <var>33%</var></div><div class=\"indent-topic-text\"> <i class=\"fa fa-tasks\" aria-hidden=\"true\"></i><span>Topic: </span> <var>Weather Rain Condition</var></div></div>"
            },
            {
                "index": 5,
                "name": "Wetter Gewitter",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [
                    {
                        "valueType": "msg",
                        "value": "WeatherID",
                        "operator": "equal",
                        "operatorText": "=",
                        "thresholdType": "num",
                        "threshold": "202"
                    },
                    {
                        "condition": 1,
                        "conditionText": "oder",
                        "valueType": "msg",
                        "value": "WeatherID",
                        "operator": "gte",
                        "operatorText": ">=",
                        "thresholdType": "num",
                        "threshold": "212"
                    },
                    {
                        "condition": 2,
                        "conditionText": "und",
                        "valueType": "msg",
                        "value": "WeatherID",
                        "operator": "lt",
                        "operatorText": "<",
                        "thresholdType": "num",
                        "threshold": "230"
                    }
                ],
                "level": {
                    "type": "levelFixed",
                    "value": "25%",
                    "operator": 0,
                    "operatorText": "‚Üï  Absolut"
                },
                "slat": {
                    "type": "none",
                    "value": ""
                },
                "topic": "Weather Thunderstorm Condition",
                "resetOverwrite": false,
                "importance": 0,
                "description": "<div><i class=\"fa fa-code-fork\" aria-hidden=\"true\"></i> <var>msg.WeatherID</var> = 202&nbsp;<strong>oder</strong><br/><span class=\"indent-enh-text\" >&nbsp;</span>(&nbsp;<var>msg.WeatherID</var> >= 212&nbsp;<strong>und</strong><br/><span class=\"indent-enh-text\" >&nbsp;</span><var>msg.WeatherID</var> < 230&nbsp;)</div><div><div class=\"indent-level-text\"> <i class=\"fa fa-angle-down\" aria-hidden=\"true\"></i><span>Rollladenposition: </span> ‚Üï  Absolut <var>25%</var></div><div class=\"indent-topic-text\"> <i class=\"fa fa-tasks\" aria-hidden=\"true\"></i><span>Topic: </span> <var>Weather Thunderstorm Condition</var></div></div>"
            },
            {
                "index": 6,
                "name": "Wetter Schnee",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [
                    {
                        "valueType": "msg",
                        "value": "WeatherID",
                        "operator": "equal",
                        "operatorText": "=",
                        "thresholdType": "num",
                        "threshold": "602"
                    },
                    {
                        "condition": 1,
                        "conditionText": "oder",
                        "valueType": "msg",
                        "value": "WeatherID",
                        "operator": "equal",
                        "operatorText": "=",
                        "thresholdType": "num",
                        "threshold": "622"
                    }
                ],
                "level": {
                    "type": "levelFixed",
                    "value": "50%",
                    "operator": 0,
                    "operatorText": "‚Üï  Absolut"
                },
                "slat": {
                    "type": "none",
                    "value": ""
                },
                "topic": "Weather Snow Condition",
                "resetOverwrite": false,
                "importance": 0,
                "description": "<div><i class=\"fa fa-code-fork\" aria-hidden=\"true\"></i> <var>msg.WeatherID</var> = 602&nbsp;<strong>oder</strong><br/><span class=\"indent-enh-text\" >&nbsp;</span><var>msg.WeatherID</var> = 622</div><div><div class=\"indent-level-text\"> <i class=\"fa fa-angle-down\" aria-hidden=\"true\"></i><span>Rollladenposition: </span> ‚Üï  Absolut <var>50%</var></div><div class=\"indent-topic-text\"> <i class=\"fa fa-tasks\" aria-hidden=\"true\"></i><span>Topic: </span> <var>Weather Snow Condition</var></div></div>"
            },
            {
                "index": 7,
                "name": "AbendsFastZu",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [],
                "level": {
                    "type": "levelFixed",
                    "value": "25%",
                    "operator": 0,
                    "operatorText": "‚Üï  Absolut"
                },
                "slat": {
                    "type": "none",
                    "value": ""
                },
                "topic": "",
                "resetOverwrite": false,
                "importance": 0,
                "time": {
                    "type": "pdsTime",
                    "value": "sunsetEnd",
                    "operator": 1,
                    "operatorText": "‚Üß von",
                    "offsetType": "num",
                    "offset": "10",
                    "multiplier": 60000,
                    "days": "*",
                    "months": "*"
                },
                "timeMin": {
                    "type": "entered",
                    "value": "16:00",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000
                },
                "description": "<div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ‚Üß von <var>Sonnenuntergang Ende</var> + 00:10<div class=\"indent-time-text\"><i class=\"fa fa-step-backward\" aria-hidden=\"true\"></i> <span>fr√ºhestens (min)</span> <var>16:00</var></div></div><div><div class=\"indent-level-text\"> <i class=\"fa fa-angle-down\" aria-hidden=\"true\"></i><span>Rollladenposition: </span> ‚Üï  Absolut <var>25%</var></div></div>"
            },
            {
                "index": 8,
                "name": "SonnenuntergangZu",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [],
                "level": {
                    "type": "levelFixed",
                    "value": "closed (min)",
                    "operator": 0,
                    "operatorText": "‚Üï  Absolut"
                },
                "slat": {
                    "type": "none",
                    "value": ""
                },
                "topic": "",
                "resetOverwrite": false,
                "importance": 0,
                "time": {
                    "type": "pdsTime",
                    "value": "civilDusk",
                    "operator": 1,
                    "operatorText": "‚Üß von",
                    "offsetType": "num",
                    "offset": "",
                    "multiplier": 60000,
                    "days": "*",
                    "months": "*"
                },
                "timeMin": {
                    "type": "entered",
                    "value": "16:30",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000
                },
                "timeMax": {
                    "type": "entered",
                    "value": "21:30",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000
                },
                "description": "<div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ‚Üß von <var>b√ºrgerliche Abendd√§mmerung</var> - 00:00<div class=\"indent-time-text\"><i class=\"fa fa-step-backward\" aria-hidden=\"true\"></i> <span>fr√ºhestens (min)</span> <var>16:30</var></div><div class=\"indent-time-text\"><i class=\"fa fa-step-forward\" aria-hidden=\"true\"></i> <span>sp√§testens (max)</span> <var>21:30</var></div></div><div><div class=\"indent-level-text\"> <i class=\"fa fa-angle-down\" aria-hidden=\"true\"></i><span>Rollladenposition: </span> ‚Üï  Absolut <var>geschlossen (min)</var></div></div>"
            }
        ],
        "sunControlMode": 16,
        "sunFloorLengthType": "num",
        "sunFloorLength": "140",
        "sunMinDelta": "5",
        "blindPosMin": "10%",
        "blindPosMinType": "levelFixed",
        "blindPosMax": "open (max)",
        "blindPosMaxType": "levelFixed",
        "blindOpenPosOffset": "",
        "blindClosedPosOffset": "",
        "sunSlat": "",
        "sunSlatType": "none",
        "smoothTime": "",
        "sunTopic": "SunShading",
        "windowTopType": "num",
        "windowTop": "205",
        "windowBottomType": "num",
        "windowBottom": "100",
        "windowAzimuthStartType": "numAzimuth",
        "windowAzimuthStart": "153",
        "windowAzimuthEndType": "numAzimuth",
        "windowAzimuthEnd": "210",
        "oversteers": [
            {
                "mode": 0,
                "valueType": "global",
                "value": "#:(file)::TempOut",
                "operator": "lt",
                "operatorText": "<",
                "thresholdType": "num",
                "threshold": "12",
                "onlySunInWindow": true,
                "blindPos": {
                    "type": "levelFixed",
                    "value": "open (max)"
                },
                "slatPos": {
                    "type": "none",
                    "value": ""
                }
            },
            {
                "mode": 0,
                "valueType": "pdsCalcElevation",
                "value": "",
                "operator": "lt",
                "operatorText": "<",
                "thresholdType": "numAltitude",
                "threshold": "40",
                "onlySunInWindow": true,
                "blindPos": {
                    "type": "levelFixed",
                    "value": "open (max)"
                },
                "slatPos": {
                    "type": "none",
                    "value": ""
                }
            },
            {
                "mode": 0,
                "valueType": "msg",
                "value": "clouds",
                "operator": "gte",
                "operatorText": ">=",
                "thresholdType": "num",
                "threshold": "25",
                "onlySunInWindow": true,
                "blindPos": {
                    "type": "levelFixed",
                    "value": "open (max)"
                },
                "slatPos": {
                    "type": "none",
                    "value": ""
                }
            },
            {
                "mode": 0,
                "valueType": "global",
                "value": "#:(file)::iRed",
                "operator": "lt",
                "operatorText": "<",
                "thresholdType": "num",
                "threshold": "10000",
                "onlySunInWindow": true,
                "blindPos": {
                    "type": "levelFixed",
                    "value": "open (max)"
                },
                "slatPos": {
                    "type": "none",
                    "value": ""
                }
            }
        ],
        "oversteerTopic": "CloudsOverwrite",
        "x": 470,
        "y": 900,
        "wires": [
            [
                "4e597d09.2aedb4",
                "719dd77e.126428"
            ],
            []
        ]
    },
    {
        "id": "b0373bec.1ade48",
        "type": "blind-control",
        "z": "7e5a345d.05161c",
        "g": "c87697c7.9b9e58",
        "name": "RolloT√ºre",
        "topic": "",
        "addIdType": "none",
        "addId": "",
        "positionConfig": "9a5a8534.25d4d8",
        "autoTrigger": true,
        "autoTriggerTime": "300000",
        "startDelayTime": 10000,
        "contextStore": "file",
        "results": [
            {
                "p": "",
                "pt": "msgTopic",
                "v": "",
                "vt": "topic"
            },
            {
                "p": "",
                "pt": "msgPayload",
                "v": "",
                "vt": "level"
            },
            {
                "p": "slat",
                "pt": "msg",
                "v": "",
                "vt": "slat"
            },
            {
                "p": "blindCtrl",
                "pt": "msg",
                "v": "",
                "vt": "ctrlObj"
            }
        ],
        "blindIncrement": "1",
        "blindOpenPos": "100",
        "blindClosedPos": "0",
        "blindPosReverse": false,
        "blindPosDefault": "open (max)",
        "blindPosDefaultType": "levelFixed",
        "slatPosDefault": "",
        "slatPosDefaultType": "none",
        "overwriteExpire": "1200000",
        "rules": [
            {
                "index": 0,
                "name": "T√ºre Offen Auf",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [
                    {
                        "valueType": "global",
                        "value": "#:(file)::BalkonOffen",
                        "operator": "equal",
                        "operatorText": "=",
                        "thresholdType": "str",
                        "threshold": "true"
                    }
                ],
                "level": {
                    "type": "levelFixed",
                    "value": "open (max)",
                    "operator": 0,
                    "operatorText": "‚Üï absolute"
                },
                "slat": {
                    "type": "none",
                    "value": ""
                },
                "topic": "",
                "resetOverwrite": true,
                "importance": 0,
                "description": "<div><i class=\"fa fa-code-fork\" aria-hidden=\"true\"></i> <var>global.BalkonOffen</var> = \"true\"</div><div><div class=\"indent-level-text\"> <i class=\"fa fa-angle-down\" aria-hidden=\"true\"></i><span>blind position: </span> ‚Üï absolute <var>open (max)</var></div><div class=\"indent-resetOverwrite-text\"> <i class=\"fa fa-thumbs-o-down\" aria-hidden=\"true\"></i><span>overwrite should expire when rule gets active</span> </div></div>"
            },
            {
                "index": 1,
                "name": "HolidayWeekend",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [
                    {
                        "valueType": "global",
                        "value": "day.today.isWeekendOrHoliday",
                        "operator": "true",
                        "operatorText": "ist true",
                        "thresholdType": "num",
                        "threshold": "0"
                    }
                ],
                "level": {
                    "type": "levelFixed",
                    "value": "closed (min)",
                    "operator": 0,
                    "operatorText": "‚Üï  Absolut"
                },
                "slat": {
                    "type": "none",
                    "value": ""
                },
                "topic": "",
                "resetOverwrite": false,
                "importance": 0,
                "time": {
                    "type": "pdsTime",
                    "value": "sunriseEnd",
                    "operator": 0,
                    "operatorText": "‚Ü• bis",
                    "offsetType": "num",
                    "offset": "10",
                    "multiplier": 60000,
                    "days": "*",
                    "months": "*"
                },
                "timeMin": {
                    "type": "entered",
                    "value": "7:45",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000
                },
                "description": "<div><i class=\"fa fa-code-fork\" aria-hidden=\"true\"></i> <var>global.day.today.isWeekendOrHoliday</var> ist true</div><div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ‚Ü• bis <var>Sonnenaufgang Ende</var> + 00:10<div class=\"indent-time-text\"><i class=\"fa fa-step-backward\" aria-hidden=\"true\"></i> <span>fr√ºhestens (min)</span> <var>7:45</var></div></div><div><div class=\"indent-level-text\"> <i class=\"fa fa-angle-down\" aria-hidden=\"true\"></i><span>Rollladenposition: </span> ‚Üï  Absolut <var>geschlossen (min)</var></div></div>"
            },
            {
                "index": 2,
                "name": "SonAufgAuf ",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [],
                "level": {
                    "type": "levelFixed",
                    "value": "closed (min)",
                    "operator": 0,
                    "operatorText": "‚Üï  Absolut"
                },
                "slat": {
                    "type": "none",
                    "value": ""
                },
                "topic": "",
                "resetOverwrite": false,
                "importance": 0,
                "time": {
                    "type": "pdsTime",
                    "value": "sunriseStart",
                    "operator": 0,
                    "operatorText": "‚Ü• bis",
                    "offsetType": "num",
                    "offset": "10",
                    "multiplier": 60000,
                    "days": "*",
                    "months": "*"
                },
                "timeMin": {
                    "type": "entered",
                    "value": "7:00",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000
                },
                "timeMax": {
                    "type": "entered",
                    "value": "9:00",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000
                },
                "description": "<div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ‚Ü• bis <var>Sonnenaufgang Beginn</var> + 00:10<div class=\"indent-time-text\"><i class=\"fa fa-step-backward\" aria-hidden=\"true\"></i> <span>fr√ºhestens (min)</span> <var>7:00</var></div><div class=\"indent-time-text\"><i class=\"fa fa-step-forward\" aria-hidden=\"true\"></i> <span>sp√§testens (max)</span> <var>9:00</var></div></div><div><div class=\"indent-level-text\"> <i class=\"fa fa-angle-down\" aria-hidden=\"true\"></i><span>Rollladenposition: </span> ‚Üï  Absolut <var>geschlossen (min)</var></div></div>"
            },
            {
                "index": 3,
                "name": "Hitze",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [
                    {
                        "valueType": "global",
                        "value": "#:(file)::TempOut",
                        "operator": "gte",
                        "operatorText": "‚â•",
                        "thresholdType": "num",
                        "threshold": "27"
                    }
                ],
                "level": {
                    "type": "levelFixed",
                    "value": "33%",
                    "operator": 0,
                    "operatorText": "‚Üï absolute"
                },
                "slat": {
                    "type": "none",
                    "value": ""
                },
                "topic": "",
                "resetOverwrite": false,
                "importance": 0,
                "description": "<div><i class=\"fa fa-code-fork\" aria-hidden=\"true\"></i> <var>global.TempOut</var> ‚â• 27</div><div><div class=\"indent-level-text\"> <i class=\"fa fa-angle-down\" aria-hidden=\"true\"></i><span>blind position: </span> ‚Üï absolute <var>33%</var></div></div>"
            },
            {
                "index": 4,
                "name": "starke Hitze",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [
                    {
                        "valueType": "global",
                        "value": "#:(file)::TempOut",
                        "operator": "gte",
                        "operatorText": "‚â•",
                        "thresholdType": "num",
                        "threshold": "30"
                    }
                ],
                "level": {
                    "type": "levelFixed",
                    "value": "closed (min)",
                    "operator": 0,
                    "operatorText": "‚Üï absolute"
                },
                "slat": {
                    "type": "none",
                    "value": ""
                },
                "topic": "",
                "resetOverwrite": false,
                "importance": 0,
                "description": "<div><i class=\"fa fa-code-fork\" aria-hidden=\"true\"></i> <var>global.TempOut</var> ‚â• 30</div><div><div class=\"indent-level-text\"> <i class=\"fa fa-angle-down\" aria-hidden=\"true\"></i><span>blind position: </span> ‚Üï absolute <var>closed (min)</var></div></div>"
            },
            {
                "index": 5,
                "name": "Special Day Halloween",
                "version": 3,
                "enabled": false,
                "isValid": true,
                "conditions": [
                    {
                        "valueType": "global",
                        "value": "day.today.day",
                        "operator": "equal",
                        "operatorText": "=",
                        "thresholdType": "num",
                        "threshold": "31"
                    }
                ],
                "level": {
                    "type": "levelFixed",
                    "value": "33%",
                    "operator": 0,
                    "operatorText": "‚Üï absolute"
                },
                "slat": {
                    "type": "none",
                    "value": ""
                },
                "topic": "",
                "resetOverwrite": false,
                "importance": 0,
                "time": {
                    "type": "entered",
                    "value": "23:59",
                    "operator": 0,
                    "operatorText": "‚Ü• until",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000,
                    "days": "*",
                    "months": "*"
                },
                "description": "<div><i class=\"fa fa-code-fork\" aria-hidden=\"true\"></i> <var>global.day.today.day</var> = 31</div><div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ‚Ü• until <var>23:59</var></div><div><div class=\"indent-level-text\"> <i class=\"fa fa-angle-down\" aria-hidden=\"true\"></i><span>blind position: </span> ‚Üï absolute <var>33%</var></div></div>"
            },
            {
                "index": 6,
                "name": "SonnenuntergangZu",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [],
                "level": {
                    "type": "levelFixed",
                    "value": "25%",
                    "operator": 0,
                    "operatorText": "‚Üï absolute"
                },
                "slat": {
                    "type": "none",
                    "value": ""
                },
                "topic": "",
                "resetOverwrite": false,
                "importance": 0,
                "time": {
                    "type": "pdsTime",
                    "value": "goldenHourDuskEnd",
                    "operator": 1,
                    "operatorText": "‚Üß from",
                    "offsetType": "num",
                    "offset": "",
                    "multiplier": 60000,
                    "days": "*",
                    "months": "*"
                },
                "timeMin": {
                    "type": "entered",
                    "value": "16:30",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000
                },
                "timeMax": {
                    "type": "entered",
                    "value": "21:30",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000
                },
                "description": "<div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ‚Üß from <var>golden hour dusk end</var> - 00:00<div class=\"indent-time-text\"><i class=\"fa fa-step-backward\" aria-hidden=\"true\"></i> <span>at the earliest (min)</span> <var>16:30</var></div><div class=\"indent-time-text\"><i class=\"fa fa-step-forward\" aria-hidden=\"true\"></i> <span>no later than (max)</span> <var>21:30</var></div></div><div><div class=\"indent-level-text\"> <i class=\"fa fa-angle-down\" aria-hidden=\"true\"></i><span>blind position: </span> ‚Üï absolute <var>25%</var></div></div>"
            },
            {
                "index": 7,
                "name": "Adventsbeleuchtung",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [
                    {
                        "valueType": "global",
                        "value": "day.weekNumber",
                        "operator": "gte",
                        "operatorText": ">=",
                        "thresholdType": "num",
                        "threshold": "48"
                    },
                    {
                        "condition": 1,
                        "conditionText": "oder",
                        "valueType": "global",
                        "value": "day.weekNumber",
                        "operator": "lt",
                        "operatorText": "<",
                        "thresholdType": "num",
                        "threshold": "2"
                    }
                ],
                "level": {
                    "type": "num",
                    "value": "52",
                    "operator": 0,
                    "operatorText": "‚Üï  Absolut"
                },
                "slat": {
                    "type": "none",
                    "value": ""
                },
                "topic": "",
                "resetOverwrite": false,
                "importance": 0,
                "time": {
                    "type": "entered",
                    "value": "16:00",
                    "operator": 1,
                    "operatorText": "‚Üß von",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000,
                    "days": "*",
                    "months": "*"
                },
                "description": "<div><i class=\"fa fa-code-fork\" aria-hidden=\"true\"></i> <var>global.day.weekNumber</var> >= 48&nbsp;<strong>oder</strong><br/><span class=\"indent-enh-text\" >&nbsp;</span><var>global.day.weekNumber</var> < 2</div><div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ‚Üß von <var>16:00</var></div><div><div class=\"indent-level-text\"> <i class=\"fa fa-angle-down\" aria-hidden=\"true\"></i><span>Rollladenposition: </span> ‚Üï  Absolut <var>52</var></div></div>"
            },
            {
                "index": 8,
                "name": "WochenendeGeschlossen",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [
                    {
                        "valueType": "global",
                        "value": "day.today.isWeekendOrHoliday",
                        "operator": "true",
                        "operatorText": "ist true",
                        "thresholdType": "num",
                        "threshold": "0"
                    }
                ],
                "level": {
                    "type": "levelFixed",
                    "value": "closed (min)",
                    "operator": 0,
                    "operatorText": "‚Üï  Absolut"
                },
                "slat": {
                    "type": "none",
                    "value": ""
                },
                "topic": "",
                "resetOverwrite": false,
                "importance": 0,
                "time": {
                    "type": "entered",
                    "value": "21:45",
                    "operator": 1,
                    "operatorText": "‚Üß von",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000,
                    "days": "*",
                    "months": "*"
                },
                "description": "<div><i class=\"fa fa-code-fork\" aria-hidden=\"true\"></i> <var>global.day.today.isWeekendOrHoliday</var> ist true</div><div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ‚Üß von <var>21:45</var></div><div><div class=\"indent-level-text\"> <i class=\"fa fa-angle-down\" aria-hidden=\"true\"></i><span>Rollladenposition: </span> ‚Üï  Absolut <var>geschlossen (min)</var></div></div>"
            },
            {
                "index": 9,
                "name": "WochentagGeschlossen",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [],
                "level": {
                    "type": "levelFixed",
                    "value": "closed (min)",
                    "operator": 0,
                    "operatorText": "‚Üï absolute"
                },
                "slat": {
                    "type": "none",
                    "value": ""
                },
                "topic": "",
                "resetOverwrite": false,
                "importance": 0,
                "time": {
                    "type": "entered",
                    "value": "21:45",
                    "operator": 1,
                    "operatorText": "‚Üß from",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000,
                    "days": "*",
                    "months": "*"
                },
                "description": "<div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ‚Üß from <var>21:45</var></div><div><div class=\"indent-level-text\"> <i class=\"fa fa-angle-down\" aria-hidden=\"true\"></i><span>blind position: </span> ‚Üï absolute <var>closed (min)</var></div></div>"
            }
        ],
        "sunControlMode": "0",
        "sunFloorLengthType": "num",
        "sunFloorLength": "500",
        "sunMinDelta": "5",
        "blindPosMin": "25%",
        "blindPosMinType": "levelFixed",
        "blindPosMax": "open (max)",
        "blindPosMaxType": "levelFixed",
        "blindOpenPosOffset": "",
        "blindClosedPosOffset": "",
        "sunSlat": "",
        "sunSlatType": "none",
        "smoothTime": "",
        "sunTopic": "SunShading",
        "windowTopType": "num",
        "windowTop": "205",
        "windowBottomType": "num",
        "windowBottom": "100",
        "windowAzimuthStartType": "numAzimuth",
        "windowAzimuthStart": "118",
        "windowAzimuthEndType": "numAzimuth",
        "windowAzimuthEnd": "230",
        "oversteers": [
            {
                "mode": 1,
                "valueType": "pdsCalcElevation",
                "value": "",
                "operator": "lt",
                "operatorText": "<",
                "thresholdType": "numAltitude",
                "threshold": "15",
                "onlySunInWindow": true,
                "blindPos": {
                    "type": "levelFixed",
                    "value": "open (max)"
                },
                "slatPos": {
                    "type": "none",
                    "value": ""
                }
            },
            {
                "mode": 0,
                "valueType": "msg",
                "value": "clouds",
                "operator": "gte",
                "operatorText": ">=",
                "thresholdType": "num",
                "threshold": "40",
                "onlySunInWindow": true,
                "blindPos": {
                    "type": "levelFixed",
                    "value": "open (max)"
                },
                "slatPos": {
                    "type": "none",
                    "value": ""
                }
            }
        ],
        "oversteerTopic": "CloudsOverwrite",
        "x": 440,
        "y": 1140,
        "wires": [
            [
                "31ef75a9.d9e27a",
                "1a538972.87cf07"
            ],
            []
        ]
    },
    {
        "id": "66335075.9471e",
        "type": "blind-control",
        "z": "7e5a345d.05161c",
        "g": "7ce4548d.b8ed0c",
        "name": "RolloTom",
        "topic": "",
        "addIdType": "none",
        "addId": "",
        "positionConfig": "9a5a8534.25d4d8",
        "autoTrigger": true,
        "autoTriggerTime": "600000",
        "startDelayTime": 10000,
        "contextStore": "",
        "results": [
            {
                "p": "",
                "pt": "msgTopic",
                "v": "",
                "vt": "topic"
            },
            {
                "p": "",
                "pt": "msgPayload",
                "v": "",
                "vt": "level"
            },
            {
                "p": "slat",
                "pt": "msg",
                "v": "",
                "vt": "slat"
            },
            {
                "p": "blindCtrl",
                "pt": "msg",
                "v": "",
                "vt": "ctrlObj"
            }
        ],
        "blindIncrement": "1",
        "blindOpenPos": "100",
        "blindClosedPos": 0,
        "blindPosReverse": false,
        "blindPosDefault": "open (max)",
        "blindPosDefaultType": "levelFixed",
        "slatPosDefault": "",
        "slatPosDefaultType": "none",
        "overwriteExpire": "3600000",
        "rules": [
            {
                "index": 0,
                "name": "HolidayWeekend",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [
                    {
                        "valueType": "global",
                        "value": "day.today.isWeekendOrHoliday",
                        "operator": "true",
                        "operatorText": "ist true",
                        "thresholdType": "num",
                        "threshold": "0"
                    }
                ],
                "level": {
                    "type": "levelFixed",
                    "value": "closed (min)",
                    "operator": 0,
                    "operatorText": "‚Üï  Absolut"
                },
                "slat": {
                    "type": "none",
                    "value": ""
                },
                "topic": "",
                "resetOverwrite": false,
                "importance": 0,
                "time": {
                    "type": "pdsTime",
                    "value": "sunriseStart",
                    "operator": 0,
                    "operatorText": "‚Ü• bis",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000,
                    "days": "*",
                    "months": "*"
                },
                "timeMin": {
                    "type": "entered",
                    "value": "7:30",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000
                },
                "description": "<div><i class=\"fa fa-code-fork\" aria-hidden=\"true\"></i> <var>global.day.today.isWeekendOrHoliday</var> ist true</div><div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ‚Ü• bis <var>Sonnenaufgang Beginn</var><div class=\"indent-time-text\"><i class=\"fa fa-step-backward\" aria-hidden=\"true\"></i> <span>fr√ºhestens (min)</span> <var>7:30</var></div></div><div><div class=\"indent-level-text\"> <i class=\"fa fa-angle-down\" aria-hidden=\"true\"></i><span>Rollladenposition: </span> ‚Üï  Absolut <var>geschlossen (min)</var></div></div>"
            },
            {
                "index": 1,
                "name": "Sonnenaufgang",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [],
                "level": {
                    "type": "levelFixed",
                    "value": "closed (min)",
                    "operator": 0,
                    "operatorText": "‚Üï  Absolut"
                },
                "slat": {
                    "type": "none",
                    "value": ""
                },
                "topic": "",
                "resetOverwrite": false,
                "importance": 0,
                "time": {
                    "type": "pdsTime",
                    "value": "civilDawn",
                    "operator": 0,
                    "operatorText": "‚Ü• bis",
                    "offsetType": "num",
                    "offset": "1",
                    "multiplier": 60000,
                    "days": "*",
                    "months": "*"
                },
                "timeMin": {
                    "type": "entered",
                    "value": "6:00",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000
                },
                "timeMax": {
                    "type": "entered",
                    "value": "9:00",
                    "offsetType": "randmNumCachedDay",
                    "offset": "30",
                    "multiplier": 60000
                },
                "description": "<div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ‚Ü• bis <var>b√ºrgerliche Morgend√§mmerung</var> + 00:01<div class=\"indent-time-text\"><i class=\"fa fa-step-backward\" aria-hidden=\"true\"></i> <span>fr√ºhestens (min)</span> <var>6:00</var></div><div class=\"indent-time-text\"><i class=\"fa fa-step-forward\" aria-hidden=\"true\"></i> <span>sp√§testens (max)</span> <var>9:00</var> offset <var>zuf√§llig (t√§glich) bis 30</var></div></div><div><div class=\"indent-level-text\"> <i class=\"fa fa-angle-down\" aria-hidden=\"true\"></i><span>Rollladenposition: </span> ‚Üï  Absolut <var>geschlossen (min)</var></div></div>"
            },
            {
                "index": 2,
                "name": "Hitze",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [
                    {
                        "valueType": "global",
                        "value": "#:(file)::TempOut",
                        "operator": "gte",
                        "operatorText": "‚â•",
                        "thresholdType": "num",
                        "threshold": "25"
                    }
                ],
                "level": {
                    "type": "levelFixed",
                    "value": "25%",
                    "operator": 0,
                    "operatorText": "‚Üï absolute"
                },
                "slat": {
                    "type": "none",
                    "value": ""
                },
                "topic": "",
                "resetOverwrite": false,
                "importance": 0,
                "description": "<div><i class=\"fa fa-code-fork\" aria-hidden=\"true\"></i> <var>global.TempOut</var> ‚â• 25</div><div><div class=\"indent-level-text\"> <i class=\"fa fa-angle-down\" aria-hidden=\"true\"></i><span>blind position: </span> ‚Üï absolute <var>25%</var></div></div>"
            },
            {
                "index": 3,
                "name": "Sonnenuntergang",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [],
                "level": {
                    "type": "levelFixed",
                    "value": "33%",
                    "operator": 0,
                    "operatorText": "‚Üï  Absolut"
                },
                "slat": {
                    "type": "none",
                    "value": ""
                },
                "topic": "",
                "resetOverwrite": false,
                "importance": 0,
                "time": {
                    "type": "pdsTime",
                    "value": "sunsetEnd",
                    "operator": 1,
                    "operatorText": "‚Üß von",
                    "offsetType": "none",
                    "offset": "",
                    "multiplier": 60000,
                    "days": "*",
                    "months": "*"
                },
                "timeMax": {
                    "type": "entered",
                    "value": "21:00",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000
                },
                "description": "<div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ‚Üß von <var>Sonnenuntergang Ende</var><div class=\"indent-time-text\"><i class=\"fa fa-step-forward\" aria-hidden=\"true\"></i> <span>sp√§testens (max)</span> <var>21:00</var></div></div><div><div class=\"indent-level-text\"> <i class=\"fa fa-angle-down\" aria-hidden=\"true\"></i><span>Rollladenposition: </span> ‚Üï  Absolut <var>33%</var></div></div>"
            },
            {
                "index": 4,
                "name": "Adventsbeleuchtung",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [
                    {
                        "valueType": "global",
                        "value": "day.weekNumber",
                        "operator": "gte",
                        "operatorText": "‚â•",
                        "thresholdType": "num",
                        "threshold": "48"
                    }
                ],
                "level": {
                    "type": "num",
                    "value": "15",
                    "operator": 0,
                    "operatorText": "‚Üï absolute"
                },
                "slat": {
                    "type": "none",
                    "value": ""
                },
                "topic": "",
                "resetOverwrite": false,
                "importance": 0,
                "time": {
                    "type": "entered",
                    "value": "16:00",
                    "operator": 1,
                    "operatorText": "‚Üß from",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000,
                    "days": "*",
                    "months": "*"
                },
                "description": "<div><i class=\"fa fa-code-fork\" aria-hidden=\"true\"></i> <var>global.day.weekNumber</var> ‚â• 48</div><div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ‚Üß from <var>16:00</var></div><div><div class=\"indent-level-text\"> <i class=\"fa fa-angle-down\" aria-hidden=\"true\"></i><span>blind position: </span> ‚Üï absolute <var>15</var></div></div>"
            },
            {
                "index": 5,
                "name": "WochenendeGeschlossen",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [
                    {
                        "valueType": "global",
                        "value": "day.today.isWeekendOrHoliday",
                        "operator": "true",
                        "operatorText": "is true",
                        "thresholdType": "num",
                        "threshold": "0"
                    }
                ],
                "level": {
                    "type": "levelFixed",
                    "value": "closed (min)",
                    "operator": 0,
                    "operatorText": "‚Üï absolute"
                },
                "slat": {
                    "type": "none",
                    "value": ""
                },
                "topic": "",
                "resetOverwrite": false,
                "importance": 0,
                "time": {
                    "type": "pdsTime",
                    "value": "nauticalDusk",
                    "operator": 1,
                    "operatorText": "‚Üß from",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000,
                    "days": "*",
                    "months": "*"
                },
                "timeMax": {
                    "type": "entered",
                    "value": "22:00",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000
                },
                "description": "<div><i class=\"fa fa-code-fork\" aria-hidden=\"true\"></i> <var>global.day.today.isWeekendOrHoliday</var> is true</div><div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ‚Üß from <var>nautical dusk</var><div class=\"indent-time-text\"><i class=\"fa fa-step-forward\" aria-hidden=\"true\"></i> <span>no later than (max)</span> <var>22:00</var></div></div><div><div class=\"indent-level-text\"> <i class=\"fa fa-angle-down\" aria-hidden=\"true\"></i><span>blind position: </span> ‚Üï absolute <var>closed (min)</var></div></div>"
            },
            {
                "index": 6,
                "name": "WochentagGeschlossen",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [],
                "level": {
                    "type": "levelFixed",
                    "value": "closed (min)",
                    "operator": 0,
                    "operatorText": "‚Üï  Absolut"
                },
                "slat": {
                    "type": "none",
                    "value": ""
                },
                "topic": "",
                "resetOverwrite": false,
                "importance": 0,
                "time": {
                    "type": "pdsTime",
                    "value": "blueHourDuskEnd",
                    "operator": 1,
                    "operatorText": "‚Üß von",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000,
                    "days": "*",
                    "months": "*"
                },
                "timeMax": {
                    "type": "entered",
                    "value": "22:00",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000
                },
                "description": "<div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ‚Üß von <var>Blaue Abendstunde Ende</var><div class=\"indent-time-text\"><i class=\"fa fa-step-forward\" aria-hidden=\"true\"></i> <span>sp√§testens (max)</span> <var>22:00</var></div></div><div><div class=\"indent-level-text\"> <i class=\"fa fa-angle-down\" aria-hidden=\"true\"></i><span>Rollladenposition: </span> ‚Üï  Absolut <var>geschlossen (min)</var></div></div>"
            }
        ],
        "sunControlMode": "0",
        "sunFloorLengthType": "num",
        "sunFloorLength": "",
        "sunMinDelta": "",
        "blindPosMin": "closed (min)",
        "blindPosMinType": "levelFixed",
        "blindPosMax": "open (max)",
        "blindPosMaxType": "levelFixed",
        "blindOpenPosOffset": 0,
        "blindClosedPosOffset": 0,
        "sunSlat": "",
        "sunSlatType": "none",
        "smoothTime": "",
        "sunTopic": "",
        "windowTopType": "num",
        "windowTop": "",
        "windowBottomType": "num",
        "windowBottom": "",
        "windowAzimuthStartType": "numAzimuth",
        "windowAzimuthStart": "",
        "windowAzimuthEndType": "numAzimuth",
        "windowAzimuthEnd": "",
        "oversteers": [],
        "oversteerTopic": "",
        "x": 380,
        "y": 1420,
        "wires": [
            [
                "b9f43bc.ca86bc8",
                "77bd98f3.c0e8c8"
            ],
            []
        ]
    },
    {
        "id": "eec0f371.5a3f3",
        "type": "blind-control",
        "z": "7e5a345d.05161c",
        "g": "40f7136f.c806bc",
        "name": "RolloSchlafzimmer",
        "topic": "",
        "addIdType": "none",
        "addId": "",
        "positionConfig": "9a5a8534.25d4d8",
        "autoTrigger": true,
        "autoTriggerTime": 3600000,
        "startDelayTime": 10000,
        "contextStore": "",
        "results": [
            {
                "p": "",
                "pt": "msgTopic",
                "v": "",
                "vt": "topic"
            },
            {
                "p": "",
                "pt": "msgPayload",
                "v": "pos,${level}",
                "vt": "strPlaceholder"
            },
            {
                "p": "slat",
                "pt": "msg",
                "v": "",
                "vt": "slat"
            },
            {
                "p": "blindCtrl",
                "pt": "msg",
                "v": "",
                "vt": "ctrlObj"
            }
        ],
        "blindIncrement": "1",
        "blindOpenPos": "100",
        "blindClosedPos": 0,
        "blindPosReverse": false,
        "blindPosDefault": "open (max)",
        "blindPosDefaultType": "levelFixed",
        "slatPosDefault": "",
        "slatPosDefaultType": "none",
        "overwriteExpire": "30000",
        "rules": [
            {
                "index": 0,
                "name": "HolidayWeekend",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [
                    {
                        "valueType": "global",
                        "value": "day.today.isWeekendOrHoliday",
                        "operator": "true",
                        "operatorText": "ist true",
                        "thresholdType": "num",
                        "threshold": 0
                    }
                ],
                "level": {
                    "type": "levelFixed",
                    "value": "closed (min)",
                    "operator": 0,
                    "operatorText": "‚Üï  Absolut"
                },
                "slat": {
                    "type": "none",
                    "value": ""
                },
                "topic": "",
                "resetOverwrite": false,
                "importance": 0,
                "time": {
                    "type": "entered",
                    "value": "7:30",
                    "operator": 0,
                    "operatorText": "‚Ü• bis",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000,
                    "days": "*",
                    "months": "*"
                },
                "description": "<div><i class=\"fa fa-code-fork\" aria-hidden=\"true\"></i> <var>global.day.today.isWeekendOrHoliday</var> ist true</div><div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ‚Ü• bis <var>7:30</var></div><div><div class=\"indent-level-text\"> <i class=\"fa fa-angle-down\" aria-hidden=\"true\"></i><span>Rollladenposition: </span> ‚Üï  Absolut <var>geschlossen (min)</var></div></div>"
            },
            {
                "index": 1,
                "name": "SonAufgAuf",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [],
                "level": {
                    "type": "levelFixed",
                    "value": "closed (min)",
                    "operator": 0,
                    "operatorText": "‚Üï  Absolut"
                },
                "slat": {
                    "type": "none",
                    "value": ""
                },
                "topic": "",
                "resetOverwrite": false,
                "importance": 0,
                "time": {
                    "type": "pdsTime",
                    "value": "blueHourDawnStart",
                    "operator": 0,
                    "operatorText": "‚Ü• bis",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000,
                    "days": "*",
                    "months": "*"
                },
                "timeMin": {
                    "type": "entered",
                    "value": "6:30",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000
                },
                "timeMax": {
                    "type": "entered",
                    "value": "9:00",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000
                },
                "description": "<div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ‚Ü• bis <var>Blaue Morgenstunde Beginn</var><div class=\"indent-time-text\"><i class=\"fa fa-step-backward\" aria-hidden=\"true\"></i> <span>fr√ºhestens (min)</span> <var>6:30</var></div><div class=\"indent-time-text\"><i class=\"fa fa-step-forward\" aria-hidden=\"true\"></i> <span>sp√§testens (max)</span> <var>9:00</var></div></div><div><div class=\"indent-level-text\"> <i class=\"fa fa-angle-down\" aria-hidden=\"true\"></i><span>Rollladenposition: </span> ‚Üï  Absolut <var>geschlossen (min)</var></div></div>"
            },
            {
                "index": 2,
                "name": "Fr√ºhFastOffen",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [],
                "level": {
                    "type": "levelFixed",
                    "value": "66%",
                    "operator": 0,
                    "operatorText": "‚Üï absolute"
                },
                "slat": {
                    "type": "none",
                    "value": ""
                },
                "topic": "",
                "resetOverwrite": false,
                "importance": 0,
                "time": {
                    "type": "entered",
                    "value": "7:05",
                    "operator": 0,
                    "operatorText": "‚Ü• until",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000,
                    "days": "*",
                    "months": "*"
                },
                "description": "<div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ‚Ü• until <var>7:05</var></div><div><div class=\"indent-level-text\"> <i class=\"fa fa-angle-down\" aria-hidden=\"true\"></i><span>blind position: </span> ‚Üï absolute <var>66%</var></div></div>"
            },
            {
                "index": 3,
                "name": "Hitze",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [
                    {
                        "valueType": "global",
                        "value": "#:(file)::TempOut",
                        "operator": "gte",
                        "operatorText": "‚â•",
                        "thresholdType": "num",
                        "threshold": "24"
                    }
                ],
                "level": {
                    "type": "levelFixed",
                    "value": "33%",
                    "operator": 0,
                    "operatorText": "‚Üï absolute"
                },
                "slat": {
                    "type": "none",
                    "value": ""
                },
                "topic": "Hitze",
                "resetOverwrite": false,
                "importance": 0,
                "description": "<div><i class=\"fa fa-code-fork\" aria-hidden=\"true\"></i> <var>global.TempOut</var> ‚â• 24</div><div><div class=\"indent-level-text\"> <i class=\"fa fa-angle-down\" aria-hidden=\"true\"></i><span>blind position: </span> ‚Üï absolute <var>33%</var></div><div class=\"indent-topic-text\"> <i class=\"fa fa-tasks\" aria-hidden=\"true\"></i><span>Topic: </span> <var>Hitze</var></div></div>"
            },
            {
                "index": 4,
                "name": "Starke Hitze",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [
                    {
                        "valueType": "global",
                        "value": "#:(file)::TempOut",
                        "operator": "gte",
                        "operatorText": "‚â•",
                        "thresholdType": "num",
                        "threshold": "29"
                    }
                ],
                "level": {
                    "type": "levelFixed",
                    "value": "closed (min)",
                    "operator": 0,
                    "operatorText": "‚Üï absolute"
                },
                "slat": {
                    "type": "none",
                    "value": ""
                },
                "topic": "",
                "resetOverwrite": false,
                "importance": 0,
                "description": "<div><i class=\"fa fa-code-fork\" aria-hidden=\"true\"></i> <var>global.TempOut</var> ‚â• 29</div><div><div class=\"indent-level-text\"> <i class=\"fa fa-angle-down\" aria-hidden=\"true\"></i><span>blind position: </span> ‚Üï absolute <var>closed (min)</var></div></div>"
            },
            {
                "index": 5,
                "name": "Wetter Regen",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [
                    {
                        "valueType": "msg",
                        "value": "WeatherID",
                        "operator": "gte",
                        "operatorText": ">=",
                        "thresholdType": "num",
                        "threshold": "502"
                    },
                    {
                        "condition": 2,
                        "conditionText": "und",
                        "valueType": "msg",
                        "value": "WeatherID",
                        "operator": "lt",
                        "operatorText": "<",
                        "thresholdType": "num",
                        "threshold": "504"
                    },
                    {
                        "condition": 1,
                        "conditionText": "oder",
                        "valueType": "msg",
                        "value": "WeatherID",
                        "operator": "gte",
                        "operatorText": ">=",
                        "thresholdType": "num",
                        "threshold": "522"
                    },
                    {
                        "condition": 2,
                        "conditionText": "und",
                        "valueType": "msg",
                        "value": "WeatherID",
                        "operator": "lt",
                        "operatorText": "<",
                        "thresholdType": "num",
                        "threshold": "600"
                    }
                ],
                "level": {
                    "type": "levelFixed",
                    "value": "33%",
                    "operator": 0,
                    "operatorText": "‚Üï  Absolut"
                },
                "slat": {
                    "type": "none",
                    "value": ""
                },
                "topic": "Weather Rain Condition",
                "resetOverwrite": false,
                "importance": 0,
                "description": "<div><i class=\"fa fa-code-fork\" aria-hidden=\"true\"></i> <var>msg.WeatherID</var> >= 502&nbsp;<strong>und</strong><br/><span class=\"indent-enh-text\" >&nbsp;</span>(&nbsp;<var>msg.WeatherID</var> < 504&nbsp;<strong>oder</strong><br/><span class=\"indent-enh-text\" >&nbsp;</span>(&nbsp;<var>msg.WeatherID</var> >= 522&nbsp;<strong>und</strong><br/><span class=\"indent-enh-text\" >&nbsp;</span><var>msg.WeatherID</var> < 600&nbsp;))</div><div><div class=\"indent-level-text\"> <i class=\"fa fa-angle-down\" aria-hidden=\"true\"></i><span>Rollladenposition: </span> ‚Üï  Absolut <var>33%</var></div><div class=\"indent-topic-text\"> <i class=\"fa fa-tasks\" aria-hidden=\"true\"></i><span>Topic: </span> <var>Weather Rain Condition</var></div></div>"
            },
            {
                "index": 6,
                "name": "Wetter Gewitter",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [
                    {
                        "valueType": "msg",
                        "value": "WeatherID",
                        "operator": "equal",
                        "operatorText": "=",
                        "thresholdType": "num",
                        "threshold": "202"
                    },
                    {
                        "condition": 1,
                        "conditionText": "oder",
                        "valueType": "msg",
                        "value": "WeatherID",
                        "operator": "gte",
                        "operatorText": ">=",
                        "thresholdType": "num",
                        "threshold": "212"
                    },
                    {
                        "condition": 2,
                        "conditionText": "und",
                        "valueType": "msg",
                        "value": "WeatherID",
                        "operator": "lt",
                        "operatorText": "<",
                        "thresholdType": "num",
                        "threshold": "230"
                    }
                ],
                "level": {
                    "type": "levelFixed",
                    "value": "25%",
                    "operator": 0,
                    "operatorText": "‚Üï  Absolut"
                },
                "slat": {
                    "type": "none",
                    "value": ""
                },
                "topic": "Weather Thunderstorm Condition",
                "resetOverwrite": false,
                "importance": 0,
                "description": "<div><i class=\"fa fa-code-fork\" aria-hidden=\"true\"></i> <var>msg.WeatherID</var> = 202&nbsp;<strong>oder</strong><br/><span class=\"indent-enh-text\" >&nbsp;</span>(&nbsp;<var>msg.WeatherID</var> >= 212&nbsp;<strong>und</strong><br/><span class=\"indent-enh-text\" >&nbsp;</span><var>msg.WeatherID</var> < 230&nbsp;)</div><div><div class=\"indent-level-text\"> <i class=\"fa fa-angle-down\" aria-hidden=\"true\"></i><span>Rollladenposition: </span> ‚Üï  Absolut <var>25%</var></div><div class=\"indent-topic-text\"> <i class=\"fa fa-tasks\" aria-hidden=\"true\"></i><span>Topic: </span> <var>Weather Thunderstorm Condition</var></div></div>"
            },
            {
                "index": 7,
                "name": "Abends Fast zu",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [],
                "level": {
                    "type": "levelFixed",
                    "value": "66%",
                    "operator": 0,
                    "operatorText": "‚Üï  Absolut"
                },
                "slat": {
                    "type": "none",
                    "value": ""
                },
                "topic": "",
                "resetOverwrite": false,
                "importance": 0,
                "time": {
                    "type": "pdsTime",
                    "value": "sunsetEnd",
                    "operator": 1,
                    "operatorText": "‚Üß von",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000,
                    "days": "*",
                    "months": "*"
                },
                "description": "<div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ‚Üß von <var>Sonnenuntergang Ende</var></div><div><div class=\"indent-level-text\"> <i class=\"fa fa-angle-down\" aria-hidden=\"true\"></i><span>Rollladenposition: </span> ‚Üï  Absolut <var>66%</var></div></div>"
            },
            {
                "index": 8,
                "name": "Abends Minimal",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [],
                "level": {
                    "type": "num",
                    "value": "50",
                    "operator": 0,
                    "operatorText": "‚Üï  Absolut"
                },
                "slat": {
                    "type": "none",
                    "value": ""
                },
                "topic": "",
                "resetOverwrite": false,
                "importance": 0,
                "time": {
                    "type": "entered",
                    "value": "20:00",
                    "operator": 1,
                    "operatorText": "‚Üß von",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000,
                    "days": "*",
                    "months": "*"
                },
                "description": "<div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ‚Üß von <var>20:00</var></div><div><div class=\"indent-level-text\"> <i class=\"fa fa-angle-down\" aria-hidden=\"true\"></i><span>Rollladenposition: </span> ‚Üï  Absolut <var>50</var></div></div>"
            },
            {
                "index": 9,
                "name": "Schlafenszeit Zu",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [],
                "level": {
                    "type": "levelFixed",
                    "value": "closed (min)",
                    "operator": 0,
                    "operatorText": "‚Üï  Absolut"
                },
                "slat": {
                    "type": "none",
                    "value": ""
                },
                "topic": "",
                "resetOverwrite": false,
                "importance": 0,
                "time": {
                    "type": "entered",
                    "value": "22:30",
                    "operator": 1,
                    "operatorText": "‚Üß von",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000,
                    "days": "*",
                    "months": "*"
                },
                "description": "<div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ‚Üß von <var>22:30</var></div><div><div class=\"indent-level-text\"> <i class=\"fa fa-angle-down\" aria-hidden=\"true\"></i><span>Rollladenposition: </span> ‚Üï  Absolut <var>geschlossen (min)</var></div></div>"
            }
        ],
        "sunControlMode": "16",
        "sunFloorLengthType": "num",
        "sunFloorLength": "150",
        "sunMinDelta": "10",
        "blindPosMin": "15",
        "blindPosMinType": "num",
        "blindPosMax": "open (max)",
        "blindPosMaxType": "levelFixed",
        "blindOpenPosOffset": "30",
        "blindClosedPosOffset": "80",
        "sunSlat": "",
        "sunSlatType": "none",
        "smoothTime": "",
        "sunTopic": "SunShading",
        "windowTopType": "num",
        "windowTop": "205",
        "windowBottomType": "num",
        "windowBottom": "100",
        "windowAzimuthStartType": "numAzimuth",
        "windowAzimuthStart": "215",
        "windowAzimuthEndType": "numAzimuth",
        "windowAzimuthEnd": "255",
        "oversteers": [
            {
                "mode": 0,
                "valueType": "global",
                "value": "#:(file)::TempOut",
                "operator": "lt",
                "operatorText": "<",
                "thresholdType": "num",
                "threshold": "20",
                "onlySunInWindow": true,
                "blindPos": {
                    "type": "levelFixed",
                    "value": "open (max)"
                },
                "slatPos": {
                    "type": "none",
                    "value": ""
                }
            },
            {
                "mode": 0,
                "valueType": "pdsCalcElevation",
                "value": "",
                "operator": "lt",
                "operatorText": "<",
                "thresholdType": "numAltitude",
                "threshold": "10",
                "onlySunInWindow": true,
                "blindPos": {
                    "type": "levelFixed",
                    "value": "open (max)"
                },
                "slatPos": {
                    "type": "none",
                    "value": ""
                }
            },
            {
                "mode": 0,
                "valueType": "msg",
                "value": "clouds",
                "operator": "gte",
                "operatorText": ">=",
                "thresholdType": "num",
                "threshold": "50",
                "onlySunInWindow": true,
                "blindPos": {
                    "type": "levelFixed",
                    "value": "open (max)"
                },
                "slatPos": {
                    "type": "none",
                    "value": ""
                }
            }
        ],
        "oversteerTopic": "CloudsOverwrite",
        "x": 370,
        "y": 2180,
        "wires": [
            [
                "bdb4e967.1f53d8",
                "485a5be0.812e94"
            ],
            []
        ]
    },
    {
        "id": "4fbc55c0.c9f85c",
        "type": "ui_slider",
        "z": "7e5a345d.05161c",
        "g": "6666fbc0.896914",
        "name": "RolloEsstischPos",
        "label": "Esstisch",
        "tooltip": "",
        "group": "13a03688.c43e99",
        "order": 3,
        "width": "6",
        "height": "2",
        "passthru": true,
        "outs": "end",
        "topic": "cmnd/RolloEsstisch/ShutterPosition",
        "topicType": "str",
        "min": 0,
        "max": "100",
        "step": 1,
        "className": "",
        "x": 510,
        "y": 740,
        "wires": [
            [
                "5eac9c57.76c314"
            ]
        ]
    },
    {
        "id": "97695071.468dc",
        "type": "ui_slider",
        "z": "7e5a345d.05161c",
        "g": "3f11d194.8d04ee",
        "name": "RolloWohnzimmerPosition",
        "label": "Wohnz Fenster",
        "tooltip": "",
        "group": "13a03688.c43e99",
        "order": 5,
        "width": "6",
        "height": "2",
        "passthru": true,
        "outs": "end",
        "topic": "cmnd/RolloWohnzimmer/ShutterPosition",
        "topicType": "str",
        "min": 0,
        "max": "100",
        "step": 1,
        "className": "",
        "x": 500,
        "y": 1020,
        "wires": [
            [
                "719dd77e.126428"
            ]
        ]
    },
    {
        "id": "fb2be545.fa3808",
        "type": "ui_slider",
        "z": "7e5a345d.05161c",
        "g": "c87697c7.9b9e58",
        "name": "RolloT√ºrePosition",
        "label": "Wohnz T√ºre",
        "tooltip": "",
        "group": "13a03688.c43e99",
        "order": 1,
        "width": "6",
        "height": "2",
        "passthru": true,
        "outs": "end",
        "topic": "cmnd/RolloTuere/ShutterPosition",
        "topicType": "str",
        "min": 0,
        "max": "100",
        "step": 1,
        "className": "",
        "x": 470,
        "y": 1260,
        "wires": [
            [
                "1a538972.87cf07",
                "3adbcc4a84edfcd0"
            ]
        ]
    },
    {
        "id": "29e92fc.65284d",
        "type": "ui_slider",
        "z": "7e5a345d.05161c",
        "g": "7ce4548d.b8ed0c",
        "name": "Rollo Tom Position",
        "label": "Tom",
        "tooltip": "",
        "group": "13a03688.c43e99",
        "order": 7,
        "width": "6",
        "height": "1",
        "passthru": true,
        "outs": "end",
        "topic": "cmd/RolloTom/ShutterPosition",
        "topicType": "msg",
        "min": 0,
        "max": "100",
        "step": 1,
        "className": "",
        "x": 410,
        "y": 1360,
        "wires": [
            [
                "b9f43bc.ca86bc8"
            ]
        ]
    },
    {
        "id": "571c071d.5ff3c8",
        "type": "ui_slider",
        "z": "7e5a345d.05161c",
        "g": "40f7136f.c806bc",
        "name": "Rollo Schlafzimmer Position",
        "label": "Schlafzimmer",
        "tooltip": "",
        "group": "13a03688.c43e99",
        "order": 11,
        "width": "6",
        "height": "2",
        "passthru": false,
        "outs": "end",
        "topic": "command/pos",
        "topicType": "msg",
        "min": 0,
        "max": "100",
        "step": 1,
        "className": "",
        "x": 640,
        "y": 2100,
        "wires": [
            [
                "28683cb0.557de4",
                "7a6e01ce32748004"
            ]
        ]
    },
    {
        "id": "fd0a15dc.298558",
        "type": "ui_text",
        "z": "7e5a345d.05161c",
        "g": "4cff6fb8.ecd81",
        "group": "8e157408.1ce3a8",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Wetter",
        "format": "{{msg.payload.detail}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 370,
        "y": 380,
        "wires": []
    },
    {
        "id": "3c0c4256.7b9c2e",
        "type": "ui_text",
        "z": "7e5a345d.05161c",
        "g": "6666fbc0.896914",
        "group": "13a03688.c43e99",
        "order": 4,
        "width": "6",
        "height": "1",
        "name": "",
        "label": "Status Esstisch",
        "format": "{{msg.blindCtrl.reason.description}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 880,
        "y": 640,
        "wires": []
    },
    {
        "id": "4e597d09.2aedb4",
        "type": "ui_text",
        "z": "7e5a345d.05161c",
        "g": "3f11d194.8d04ee",
        "group": "13a03688.c43e99",
        "order": 6,
        "width": "6",
        "height": "1",
        "name": "",
        "label": "Status Fenster",
        "format": "{{msg.blindCtrl.reason.description}}",
        "layout": "row-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 880,
        "y": 900,
        "wires": []
    },
    {
        "id": "d26a7c85.ed299",
        "type": "ui_text",
        "z": "7e5a345d.05161c",
        "g": "4cff6fb8.ecd81",
        "group": "8e157408.1ce3a8",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Wolken",
        "format": "{{msg.clouds}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 600,
        "y": 380,
        "wires": []
    },
    {
        "id": "31ef75a9.d9e27a",
        "type": "ui_text",
        "z": "7e5a345d.05161c",
        "g": "c87697c7.9b9e58",
        "group": "13a03688.c43e99",
        "order": 2,
        "width": "6",
        "height": "1",
        "name": "",
        "label": "Status T√ºre",
        "format": "{{msg.blindCtrl.reason.description}}",
        "layout": "row-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 870,
        "y": 1140,
        "wires": []
    },
    {
        "id": "243db6c7.15d31a",
        "type": "ui_text",
        "z": "7e5a345d.05161c",
        "g": "4cff6fb8.ecd81",
        "group": "8e157408.1ce3a8",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Balkon Temp",
        "format": "{{msg.payload}} ¬∞C  ",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 630,
        "y": 260,
        "wires": []
    },
    {
        "id": "77bd98f3.c0e8c8",
        "type": "ui_text",
        "z": "7e5a345d.05161c",
        "g": "7ce4548d.b8ed0c",
        "group": "13a03688.c43e99",
        "order": 8,
        "width": "6",
        "height": "1",
        "name": "",
        "label": "Status Tom",
        "format": "{{msg.blindCtrl.reason.description}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 670,
        "y": 1420,
        "wires": []
    },
    {
        "id": "bdb4e967.1f53d8",
        "type": "ui_text",
        "z": "7e5a345d.05161c",
        "g": "40f7136f.c806bc",
        "group": "13a03688.c43e99",
        "order": 12,
        "width": "6",
        "height": "1",
        "name": "",
        "label": "Status Schlafzimmer",
        "format": "{{msg.blindCtrl.reason.description}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 1060,
        "y": 2180,
        "wires": []
    },
    {
        "id": "ceb59201.0651d",
        "type": "openweathermap in",
        "z": "7e5a345d.05161c",
        "g": "4cff6fb8.ecd81",
        "name": "Home Weather",
        "wtype": "current",
        "lon": "11.079218",
        "lat": "49.406652",
        "city": "",
        "country": "",
        "language": "de",
        "x": 140,
        "y": 300,
        "wires": [
            [
                "b907c2ad.b1417",
                "e5d7026a.0a239",
                "fd0a15dc.298558"
            ]
        ]
    },
    {
        "id": "166a9b8664b09914",
        "type": "debug",
        "z": "7e5a345d.05161c",
        "g": "40f7136f.c806bc",
        "name": "debug 54",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 400,
        "y": 1900,
        "wires": []
    },
    {
        "id": "c80d7eb787b0e712",
        "type": "debug",
        "z": "7e5a345d.05161c",
        "g": "40f7136f.c806bc",
        "name": "debug 55",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 580,
        "y": 2060,
        "wires": []
    },
    {
        "id": "c6aec482f41cd664",
        "type": "switch",
        "z": "7e5a345d.05161c",
        "g": "40f7136f.c806bc",
        "name": "",
        "property": "payload.apower",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 550,
        "y": 1960,
        "wires": [
            [
                "c25c352a.ce5a48",
                "15db2dbb374bc125"
            ]
        ]
    },
    {
        "id": "15db2dbb374bc125",
        "type": "debug",
        "z": "7e5a345d.05161c",
        "g": "40f7136f.c806bc",
        "name": "debug 56",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 720,
        "y": 1900,
        "wires": []
    },
    {
        "id": "b4458220578284d6",
        "type": "delay",
        "z": "7e5a345d.05161c",
        "g": "40f7136f.c806bc",
        "name": "",
        "pauseType": "delay",
        "timeout": "500",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 380,
        "y": 2100,
        "wires": [
            [
                "571c071d.5ff3c8",
                "c80d7eb787b0e712"
            ]
        ]
    },
    {
        "id": "79e70291102b361f",
        "type": "debug",
        "z": "7e5a345d.05161c",
        "g": "40f7136f.c806bc",
        "name": "debug 57",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1020,
        "y": 2060,
        "wires": []
    },
    {
        "id": "7a6e01ce32748004",
        "type": "debug",
        "z": "7e5a345d.05161c",
        "g": "40f7136f.c806bc",
        "name": "debug 58",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 860,
        "y": 2040,
        "wires": []
    },
    {
        "id": "d70a15d40c7e6f81",
        "type": "ui_text",
        "z": "7e5a345d.05161c",
        "g": "4cff6fb8.ecd81",
        "group": "8e157408.1ce3a8",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Sonne",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 590,
        "y": 460,
        "wires": []
    },
    {
        "id": "9e29c6c01d7c3d23",
        "type": "inject",
        "z": "7e5a345d.05161c",
        "g": "4cff6fb8.ecd81",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "#:(file)::LuxOut",
        "payloadType": "global",
        "x": 360,
        "y": 460,
        "wires": [
            [
                "d70a15d40c7e6f81"
            ]
        ]
    },
    {
        "id": "f4842aaa5a034809",
        "type": "inject",
        "z": "7e5a345d.05161c",
        "g": "4cff6fb8.ecd81",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "#:(file)::iRed",
        "payloadType": "global",
        "x": 350,
        "y": 500,
        "wires": [
            [
                "64fc421078cd82f6"
            ]
        ]
    },
    {
        "id": "64fc421078cd82f6",
        "type": "ui_text",
        "z": "7e5a345d.05161c",
        "g": "4cff6fb8.ecd81",
        "group": "8e157408.1ce3a8",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Rot",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 590,
        "y": 500,
        "wires": []
    },
    {
        "id": "a58a381aa2e38d88",
        "type": "mqtt out",
        "z": "7e5a345d.05161c",
        "g": "f65918f1b4342953",
        "name": "Rollo Olga",
        "topic": "RolloOlga/command/cover:0",
        "qos": "1",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "19cf2a10.f9d4a6",
        "x": 1030,
        "y": 1720,
        "wires": []
    },
    {
        "id": "05d48b7f7eb46216",
        "type": "function",
        "z": "7e5a345d.05161c",
        "g": "f65918f1b4342953",
        "name": "combine msg",
        "func": "//create string with command and value\n//V0.1\nvar command = \"pos,\"\nvar value = msg.payload\nvar output= \"empty\"\nmsg.topic = \"topic\"\noutput = command + value\nmsg.payload = output\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 1720,
        "wires": [
            [
                "a58a381aa2e38d88",
                "75f39a461474fde6"
            ]
        ]
    },
    {
        "id": "039afede1f067b9d",
        "type": "mqtt in",
        "z": "7e5a345d.05161c",
        "g": "f65918f1b4342953",
        "name": "",
        "topic": "RolloOlga/status/cover:0",
        "qos": "2",
        "datatype": "auto",
        "broker": "19cf2a10.f9d4a6",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 170,
        "y": 1580,
        "wires": [
            [
                "161e741db7a72e96"
            ]
        ]
    },
    {
        "id": "161e741db7a72e96",
        "type": "json",
        "z": "7e5a345d.05161c",
        "g": "f65918f1b4342953",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 390,
        "y": 1580,
        "wires": [
            [
                "1f9a2da59781e10b",
                "b72ff891bf3f618a"
            ]
        ]
    },
    {
        "id": "45afb650ee3ca231",
        "type": "change",
        "z": "7e5a345d.05161c",
        "g": "f65918f1b4342953",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.current_pos",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 750,
        "y": 1580,
        "wires": [
            [
                "82735bbdda171b0b"
            ]
        ]
    },
    {
        "id": "82735bbdda171b0b",
        "type": "switch",
        "z": "7e5a345d.05161c",
        "g": "f65918f1b4342953",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 190,
        "y": 1720,
        "wires": [
            [
                "d05a8dd424d87432"
            ]
        ]
    },
    {
        "id": "b58ef69469567186",
        "type": "link in",
        "z": "7e5a345d.05161c",
        "g": "f65918f1b4342953",
        "name": "WeatherID",
        "links": [
            "f69a51fd.3a899"
        ],
        "x": 235,
        "y": 1780,
        "wires": [
            [
                "a83aef368b05cde1"
            ]
        ]
    },
    {
        "id": "1f9a2da59781e10b",
        "type": "debug",
        "z": "7e5a345d.05161c",
        "g": "f65918f1b4342953",
        "name": "debug 70",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 400,
        "y": 1520,
        "wires": []
    },
    {
        "id": "5a6bab5d08bdae64",
        "type": "debug",
        "z": "7e5a345d.05161c",
        "g": "f65918f1b4342953",
        "name": "debug 71",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 580,
        "y": 1680,
        "wires": []
    },
    {
        "id": "b72ff891bf3f618a",
        "type": "switch",
        "z": "7e5a345d.05161c",
        "g": "f65918f1b4342953",
        "name": "",
        "property": "payload.state",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "stopped",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "open",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "closed",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 550,
        "y": 1580,
        "wires": [
            [
                "45afb650ee3ca231",
                "49e822a74475131c"
            ],
            [
                "45afb650ee3ca231"
            ],
            [
                "45afb650ee3ca231"
            ]
        ]
    },
    {
        "id": "49e822a74475131c",
        "type": "debug",
        "z": "7e5a345d.05161c",
        "g": "f65918f1b4342953",
        "name": "debug 72",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 720,
        "y": 1520,
        "wires": []
    },
    {
        "id": "d05a8dd424d87432",
        "type": "delay",
        "z": "7e5a345d.05161c",
        "g": "f65918f1b4342953",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 370,
        "y": 1720,
        "wires": [
            [
                "5a6bab5d08bdae64",
                "c3d2f84d0adc090d"
            ]
        ]
    },
    {
        "id": "75f39a461474fde6",
        "type": "debug",
        "z": "7e5a345d.05161c",
        "g": "f65918f1b4342953",
        "name": "debug 73",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1020,
        "y": 1680,
        "wires": []
    },
    {
        "id": "480aa351e7d8b852",
        "type": "debug",
        "z": "7e5a345d.05161c",
        "g": "f65918f1b4342953",
        "name": "debug 74",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 860,
        "y": 1660,
        "wires": []
    },
    {
        "id": "c3d2f84d0adc090d",
        "type": "ui_slider",
        "z": "7e5a345d.05161c",
        "g": "f65918f1b4342953",
        "name": "Rollo Olga Position",
        "label": "Olga",
        "tooltip": "",
        "group": "13a03688.c43e99",
        "order": 9,
        "width": "6",
        "height": "1",
        "passthru": true,
        "outs": "end",
        "topic": "command/pos",
        "topicType": "msg",
        "min": 0,
        "max": "100",
        "step": 1,
        "className": "",
        "x": 610,
        "y": 1720,
        "wires": [
            [
                "05d48b7f7eb46216",
                "480aa351e7d8b852"
            ]
        ]
    },
    {
        "id": "a9f2e8e37fab03d9",
        "type": "ui_text",
        "z": "7e5a345d.05161c",
        "g": "f65918f1b4342953",
        "group": "13a03688.c43e99",
        "order": 10,
        "width": "6",
        "height": "1",
        "name": "",
        "label": "Status Olga",
        "format": "{{msg.blindCtrl.reason.description}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 1030,
        "y": 1800,
        "wires": []
    },
    {
        "id": "a83aef368b05cde1",
        "type": "blind-control",
        "z": "7e5a345d.05161c",
        "g": "f65918f1b4342953",
        "name": "RolloOlga",
        "topic": "",
        "addIdType": "none",
        "addId": "",
        "positionConfig": "9a5a8534.25d4d8",
        "autoTrigger": true,
        "autoTriggerTime": "600000",
        "startDelayTime": 10000,
        "contextStore": "",
        "results": [
            {
                "p": "",
                "pt": "msgTopic",
                "v": "",
                "vt": "topic"
            },
            {
                "p": "",
                "pt": "msgPayload",
                "v": "pos,${level}",
                "vt": "strPlaceholder"
            },
            {
                "p": "slat",
                "pt": "msg",
                "v": "",
                "vt": "slat"
            },
            {
                "p": "blindCtrl",
                "pt": "msg",
                "v": "",
                "vt": "ctrlObj"
            }
        ],
        "blindIncrement": "1",
        "blindOpenPos": "100",
        "blindClosedPos": 0,
        "blindPosReverse": false,
        "blindPosDefault": "open (max)",
        "blindPosDefaultType": "levelFixed",
        "slatPosDefault": "",
        "slatPosDefaultType": "none",
        "overwriteExpire": "7200000",
        "rules": [
            {
                "index": 0,
                "name": "HolidayWeekend",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [
                    {
                        "valueType": "global",
                        "value": "day.today.isWeekendOrHoliday",
                        "operator": "true",
                        "operatorText": "ist true",
                        "thresholdType": "num",
                        "threshold": 0
                    }
                ],
                "level": {
                    "type": "levelFixed",
                    "value": "closed (min)",
                    "operator": 0,
                    "operatorText": "‚Üï  Absolut"
                },
                "slat": {
                    "type": "none",
                    "value": ""
                },
                "topic": "",
                "resetOverwrite": false,
                "importance": 0,
                "time": {
                    "type": "entered",
                    "value": "7:45",
                    "operator": 0,
                    "operatorText": "‚Ü• bis",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000,
                    "days": "*",
                    "months": "*"
                },
                "description": "<div><i class=\"fa fa-code-fork\" aria-hidden=\"true\"></i> <var>global.day.today.isWeekendOrHoliday</var> ist true</div><div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ‚Ü• bis <var>7:45</var></div><div><div class=\"indent-level-text\"> <i class=\"fa fa-angle-down\" aria-hidden=\"true\"></i><span>Rollladenposition: </span> ‚Üï  Absolut <var>geschlossen (min)</var></div></div>"
            },
            {
                "index": 1,
                "name": "SonAufAuf",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [],
                "level": {
                    "type": "levelFixed",
                    "value": "closed (min)",
                    "operator": 0,
                    "operatorText": "‚Üï  Absolut"
                },
                "slat": {
                    "type": "none",
                    "value": ""
                },
                "topic": "",
                "resetOverwrite": true,
                "importance": 0,
                "time": {
                    "type": "pdsTime",
                    "value": "civilDawn",
                    "operator": 0,
                    "operatorText": "‚Ü• bis",
                    "offsetType": "none",
                    "offset": "",
                    "multiplier": 60000,
                    "days": "*",
                    "months": "*"
                },
                "timeMin": {
                    "type": "entered",
                    "value": "6:00",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000
                },
                "timeMax": {
                    "type": "entered",
                    "value": "9:00",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000
                },
                "description": "<div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ‚Ü• bis <var>b√ºrgerliche Morgend√§mmerung</var><div class=\"indent-time-text\"><i class=\"fa fa-step-backward\" aria-hidden=\"true\"></i> <span>fr√ºhestens (min)</span> <var>6:00</var></div><div class=\"indent-time-text\"><i class=\"fa fa-step-forward\" aria-hidden=\"true\"></i> <span>sp√§testens (max)</span> <var>9:00</var></div></div><div><div class=\"indent-level-text\"> <i class=\"fa fa-angle-down\" aria-hidden=\"true\"></i><span>Rollladenposition: </span> ‚Üï  Absolut <var>geschlossen (min)</var></div><div class=\"indent-resetOverwrite-text\"> <i class=\"fa fa-thumbs-o-down\" aria-hidden=\"true\"></i><span>manuelle √úberschreibung verf√§llt wenn die Regel aktiv wird</span> </div></div>"
            },
            {
                "index": 2,
                "name": "Hitze",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [
                    {
                        "valueType": "global",
                        "value": "#:(file)::TempOut",
                        "operator": "gte",
                        "operatorText": "‚â•",
                        "thresholdType": "num",
                        "threshold": "25"
                    }
                ],
                "level": {
                    "type": "levelFixed",
                    "value": "50%",
                    "operator": 0,
                    "operatorText": "‚Üï absolute"
                },
                "slat": {
                    "type": "none",
                    "value": ""
                },
                "topic": "",
                "resetOverwrite": false,
                "importance": 0,
                "description": "<div><i class=\"fa fa-code-fork\" aria-hidden=\"true\"></i> <var>global.TempOut</var> ‚â• 25</div><div><div class=\"indent-level-text\"> <i class=\"fa fa-angle-down\" aria-hidden=\"true\"></i><span>blind position: </span> ‚Üï absolute <var>50%</var></div></div>"
            },
            {
                "index": 3,
                "name": "SonnenuntergangZu",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [],
                "level": {
                    "type": "levelFixed",
                    "value": "50%",
                    "operator": 0,
                    "operatorText": "‚Üï  Absolut"
                },
                "slat": {
                    "type": "none",
                    "value": ""
                },
                "topic": "",
                "resetOverwrite": false,
                "importance": 0,
                "time": {
                    "type": "pdsTime",
                    "value": "sunsetEnd",
                    "operator": 1,
                    "operatorText": "‚Üß von",
                    "offsetType": "num",
                    "offset": "15",
                    "multiplier": 60000,
                    "days": "*",
                    "months": "*"
                },
                "timeMax": {
                    "type": "entered",
                    "value": "21:00",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000
                },
                "description": "<div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ‚Üß von <var>Sonnenuntergang Ende</var> + 00:15<div class=\"indent-time-text\"><i class=\"fa fa-step-forward\" aria-hidden=\"true\"></i> <span>sp√§testens (max)</span> <var>21:00</var></div></div><div><div class=\"indent-level-text\"> <i class=\"fa fa-angle-down\" aria-hidden=\"true\"></i><span>Rollladenposition: </span> ‚Üï  Absolut <var>50%</var></div></div>"
            },
            {
                "index": 4,
                "name": "WochenendeGeschlossen",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [
                    {
                        "valueType": "global",
                        "value": "day.today.isWeekendOrHoliday",
                        "operator": "true",
                        "operatorText": "ist true",
                        "thresholdType": "num",
                        "threshold": 0
                    }
                ],
                "level": {
                    "type": "levelFixed",
                    "value": "closed (min)",
                    "operator": 0,
                    "operatorText": "‚Üï  Absolut"
                },
                "slat": {
                    "type": "none",
                    "value": ""
                },
                "topic": "",
                "resetOverwrite": false,
                "importance": 0,
                "time": {
                    "type": "entered",
                    "value": "22:00",
                    "operator": 1,
                    "operatorText": "‚Üß von",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000,
                    "days": "*",
                    "months": "*"
                },
                "description": "<div><i class=\"fa fa-code-fork\" aria-hidden=\"true\"></i> <var>global.day.today.isWeekendOrHoliday</var> ist true</div><div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ‚Üß von <var>22:00</var></div><div><div class=\"indent-level-text\"> <i class=\"fa fa-angle-down\" aria-hidden=\"true\"></i><span>Rollladenposition: </span> ‚Üï  Absolut <var>geschlossen (min)</var></div></div>"
            },
            {
                "index": 5,
                "name": "WochentagGeschlossen",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [],
                "level": {
                    "type": "levelFixed",
                    "value": "closed (min)",
                    "operator": 0,
                    "operatorText": "‚Üï  Absolut"
                },
                "slat": {
                    "type": "none",
                    "value": ""
                },
                "topic": "",
                "resetOverwrite": false,
                "importance": 0,
                "time": {
                    "type": "pdsTime",
                    "value": "blueHourDuskEnd",
                    "operator": 1,
                    "operatorText": "‚Üß von",
                    "offsetType": "num",
                    "offset": "",
                    "multiplier": 60000,
                    "days": "*",
                    "months": "*"
                },
                "timeMax": {
                    "type": "entered",
                    "value": "21:45",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000
                },
                "description": "<div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ‚Üß von <var>Blaue Abendstunde Ende</var> - 00:00<div class=\"indent-time-text\"><i class=\"fa fa-step-forward\" aria-hidden=\"true\"></i> <span>sp√§testens (max)</span> <var>21:45</var></div></div><div><div class=\"indent-level-text\"> <i class=\"fa fa-angle-down\" aria-hidden=\"true\"></i><span>Rollladenposition: </span> ‚Üï  Absolut <var>geschlossen (min)</var></div></div>"
            }
        ],
        "sunControlMode": "16",
        "sunFloorLengthType": "num",
        "sunFloorLength": "150",
        "sunMinDelta": "5",
        "blindPosMin": "30",
        "blindPosMinType": "num",
        "blindPosMax": "open (max)",
        "blindPosMaxType": "levelFixed",
        "blindOpenPosOffset": "30",
        "blindClosedPosOffset": "80",
        "sunSlat": "",
        "sunSlatType": "none",
        "smoothTime": "",
        "sunTopic": "SunShading",
        "windowTopType": "num",
        "windowTop": "205",
        "windowBottomType": "num",
        "windowBottom": "100",
        "windowAzimuthStartType": "numAzimuth",
        "windowAzimuthStart": "105",
        "windowAzimuthEndType": "numAzimuth",
        "windowAzimuthEnd": "190",
        "oversteers": [
            {
                "mode": 0,
                "valueType": "global",
                "value": "#:(file)::TempOut",
                "operator": "lt",
                "operatorText": "<",
                "thresholdType": "num",
                "threshold": "10",
                "onlySunInWindow": true,
                "blindPos": {
                    "type": "levelFixed",
                    "value": "open (max)"
                },
                "slatPos": {
                    "type": "none",
                    "value": ""
                }
            },
            {
                "mode": 0,
                "valueType": "pdsCalcElevation",
                "value": "",
                "operator": "lt",
                "operatorText": "<",
                "thresholdType": "numAltitude",
                "threshold": "10",
                "onlySunInWindow": true,
                "blindPos": {
                    "type": "levelFixed",
                    "value": "open (max)"
                },
                "slatPos": {
                    "type": "none",
                    "value": ""
                }
            },
            {
                "mode": 0,
                "valueType": "msg",
                "value": "clouds",
                "operator": "gte",
                "operatorText": ">=",
                "thresholdType": "num",
                "threshold": "25",
                "onlySunInWindow": true,
                "blindPos": {
                    "type": "levelFixed",
                    "value": "open (max)"
                },
                "slatPos": {
                    "type": "none",
                    "value": ""
                }
            },
            {
                "mode": 0,
                "valueType": "global",
                "value": "#:(file)::iRed",
                "operator": "lt",
                "operatorText": "<",
                "thresholdType": "num",
                "threshold": "6000",
                "onlySunInWindow": true,
                "blindPos": {
                    "type": "levelFixed",
                    "value": "open (max)"
                },
                "slatPos": {
                    "type": "none",
                    "value": ""
                }
            }
        ],
        "oversteerTopic": "CloudsOverwrite",
        "x": 340,
        "y": 1780,
        "wires": [
            [
                "a58a381aa2e38d88",
                "a9f2e8e37fab03d9"
            ],
            []
        ]
    },
    {
        "id": "020815130193de39",
        "type": "debug",
        "z": "7e5a345d.05161c",
        "g": "c87697c7.9b9e58",
        "name": "debug 75",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 200,
        "y": 1200,
        "wires": []
    },
    {
        "id": "3adbcc4a84edfcd0",
        "type": "debug",
        "z": "7e5a345d.05161c",
        "g": "c87697c7.9b9e58",
        "name": "debug 76",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 860,
        "y": 1240,
        "wires": []
    },
    {
        "id": "e093d6cc.660ef8",
        "type": "mqtt out",
        "z": "303a8ac7.4ea1c6",
        "g": "25c55a9c.73b9c6",
        "name": "Wohnzimmerlampe",
        "topic": "shellies/Wohnzimmerlampe/light/0/set",
        "qos": "",
        "retain": "",
        "broker": "19cf2a10.f9d4a6",
        "x": 330,
        "y": 60,
        "wires": []
    },
    {
        "id": "c4729f96.429f3",
        "type": "mqtt in",
        "z": "303a8ac7.4ea1c6",
        "g": "25c55a9c.73b9c6",
        "name": "Wohnzimmerlampe Status",
        "topic": "shellies/Wohnzimmerlampe/light/0/status",
        "qos": "2",
        "datatype": "auto",
        "broker": "19cf2a10.f9d4a6",
        "inputs": 0,
        "x": 350,
        "y": 120,
        "wires": [
            [
                "e698cc28.6d655"
            ]
        ]
    },
    {
        "id": "e698cc28.6d655",
        "type": "debug",
        "z": "303a8ac7.4ea1c6",
        "g": "25c55a9c.73b9c6",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 60,
        "wires": []
    },
    {
        "id": "f394341d.b4ebf8",
        "type": "inject",
        "z": "303a8ac7.4ea1c6",
        "g": "25c55a9c.73b9c6",
        "name": "OFF",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"brightness\":100,\"turn\":\"off\"}",
        "payloadType": "json",
        "x": 130,
        "y": 60,
        "wires": [
            [
                "e093d6cc.660ef8"
            ]
        ]
    },
    {
        "id": "78b4e8db.f77fb8",
        "type": "inject",
        "z": "303a8ac7.4ea1c6",
        "g": "25c55a9c.73b9c6",
        "name": "ON",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"brightness\":100,\"turn\":\"on\"}",
        "payloadType": "json",
        "x": 130,
        "y": 120,
        "wires": [
            [
                "e093d6cc.660ef8"
            ]
        ]
    },
    {
        "id": "923ccc32.a66e2",
        "type": "inject",
        "z": "303a8ac7.4ea1c6",
        "g": "25c55a9c.73b9c6",
        "name": "30%",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"brightness\":30,\"turn\":\"on\"}",
        "payloadType": "json",
        "x": 130,
        "y": 180,
        "wires": [
            [
                "e093d6cc.660ef8"
            ]
        ]
    },
    {
        "id": "47fa255b.9cef7c",
        "type": "inject",
        "z": "303a8ac7.4ea1c6",
        "g": "25c55a9c.73b9c6",
        "name": "80%",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"brightness\":80,\"turn\":\"on\",\"transition\":5000}",
        "payloadType": "json",
        "x": 130,
        "y": 240,
        "wires": [
            [
                "e093d6cc.660ef8"
            ]
        ]
    },
    {
        "id": "d5fc8000.9e0ab",
        "type": "mqtt in",
        "z": "303a8ac7.4ea1c6",
        "g": "25c55a9c.73b9c6",
        "name": "",
        "topic": "shellies/Wohnzimmerlampe/light/0/power",
        "qos": "2",
        "datatype": "auto",
        "broker": "19cf2a10.f9d4a6",
        "inputs": 0,
        "x": 400,
        "y": 180,
        "wires": [
            [
                "e698cc28.6d655"
            ]
        ]
    },
    {
        "id": "70c7fcfe.4a18a4",
        "type": "debug",
        "z": "303a8ac7.4ea1c6",
        "g": "1b82c7fb.e55448",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 490,
        "y": 340,
        "wires": []
    },
    {
        "id": "e5cb0df.5f800f",
        "type": "mqtt in",
        "z": "303a8ac7.4ea1c6",
        "g": "1b82c7fb.e55448",
        "name": "",
        "topic": "shellies/Wohnzimmerschalter/input_event/0",
        "qos": "0",
        "datatype": "auto",
        "broker": "19cf2a10.f9d4a6",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 220,
        "y": 420,
        "wires": [
            [
                "70c7fcfe.4a18a4",
                "9d5588be.cd9ff8"
            ]
        ]
    },
    {
        "id": "cc3c23a7.cde0c",
        "type": "mqtt in",
        "z": "303a8ac7.4ea1c6",
        "g": "d8d1de94.dfe9",
        "name": "",
        "topic": "shellies/Wohnzimmerschalter/input_event/2",
        "qos": "0",
        "datatype": "auto",
        "broker": "19cf2a10.f9d4a6",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 220,
        "y": 600,
        "wires": [
            [
                "b8aa167e.038cf8"
            ]
        ]
    },
    {
        "id": "9d5588be.cd9ff8",
        "type": "json",
        "z": "303a8ac7.4ea1c6",
        "g": "1b82c7fb.e55448",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 470,
        "y": 420,
        "wires": [
            [
                "90164b1.c8cd0b8",
                "e62cdee5.0ac4a"
            ]
        ]
    },
    {
        "id": "90164b1.c8cd0b8",
        "type": "debug",
        "z": "303a8ac7.4ea1c6",
        "g": "1b82c7fb.e55448",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 340,
        "wires": []
    },
    {
        "id": "e62cdee5.0ac4a",
        "type": "function",
        "z": "303a8ac7.4ea1c6",
        "g": "1b82c7fb.e55448",
        "name": "",
        "func": "switch (msg.payload.event){\n    case \"S\":\n        msg.payload = \"0\";\n        break;\n    case \"SS\":\n        msg.payload = \"50\";\n        break;\n    case \"SSS\":\n        msg.payload = \"100\";\n        break;\n    default:\n        msg.payload = \"anderes event\"\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 640,
        "y": 420,
        "wires": [
            [
                "692cb70c.99c928",
                "89de660e.32b288"
            ]
        ]
    },
    {
        "id": "692cb70c.99c928",
        "type": "debug",
        "z": "303a8ac7.4ea1c6",
        "g": "1b82c7fb.e55448",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 340,
        "wires": []
    },
    {
        "id": "89de660e.32b288",
        "type": "link out",
        "z": "303a8ac7.4ea1c6",
        "g": "1b82c7fb.e55448",
        "name": "Schalter Out",
        "links": [
            "fd62f2d7.c32f7",
            "e1e1185c.2c8d88",
            "1f2409.3d5e7bf8"
        ],
        "x": 815,
        "y": 420,
        "wires": []
    },
    {
        "id": "1dc7e978.c48077",
        "type": "mqtt out",
        "z": "303a8ac7.4ea1c6",
        "g": "d8d1de94.dfe9",
        "name": "Regalbeleuchtung Set",
        "topic": "shellies/Regalbeleuchtung/color/0/set",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "19cf2a10.f9d4a6",
        "x": 1120,
        "y": 640,
        "wires": []
    },
    {
        "id": "b8aa167e.038cf8",
        "type": "json",
        "z": "303a8ac7.4ea1c6",
        "g": "d8d1de94.dfe9",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 470,
        "y": 600,
        "wires": [
            [
                "175136f.5bb36c9"
            ]
        ]
    },
    {
        "id": "8d25df5c.ebd85",
        "type": "function",
        "z": "303a8ac7.4ea1c6",
        "g": "d8d1de94.dfe9",
        "name": "",
        "func": "switch (msg.payload){\n    case \"S\":\n        msg.payload = \n        {\n    \"mode\": \"color\",\n    \"red\": 255,\n    \"green\": 255,\n    \"blue\": 255,\n    \"gain\": 100,\n    \"turn\": \"toggle\",\n    \"transition\": 1000\n}\n        break;\n    case \"SS\":\n    // red rechts, green links, blue mitte\n        msg.payload = \n                {\n    \"mode\": \"color\",\n    \"red\": 200,\n    \"green\":255,\n    \"blue\": 50,\n    \"gain\": 50,\n    \"turn\": \"on\",\n    \"transition\": 500\n                }\n        break;\n    case \"SSS\":\n        msg.payload = \n                {\n    \"mode\": \"color\",\n    \"red\": 255,\n    \"green\": 255,\n    \"blue\": 10,\n    \"gain\": 100,\n    \"turn\": \"on\",\n    \"transition\": 100\n}\n        break;\n    default:\n        msg.payload = \"anderes event\"\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 600,
        "wires": [
            [
                "1dc7e978.c48077",
                "114319b2.da6366",
                "ee576d625ea73b19"
            ]
        ]
    },
    {
        "id": "114319b2.da6366",
        "type": "debug",
        "z": "303a8ac7.4ea1c6",
        "g": "d8d1de94.dfe9",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1090,
        "y": 600,
        "wires": []
    },
    {
        "id": "175136f.5bb36c9",
        "type": "change",
        "z": "303a8ac7.4ea1c6",
        "g": "d8d1de94.dfe9",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.event",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 650,
        "y": 600,
        "wires": [
            [
                "8d25df5c.ebd85"
            ]
        ]
    },
    {
        "id": "1268a437.7e39bc",
        "type": "mqtt in",
        "z": "303a8ac7.4ea1c6",
        "g": "d8d1de94.dfe9",
        "name": "Shelly On Off Status",
        "topic": "shellies/Regalbeleuchtung/color/0/status",
        "qos": "0",
        "datatype": "auto",
        "broker": "19cf2a10.f9d4a6",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 150,
        "y": 660,
        "wires": [
            [
                "cc16c88b.fcf548"
            ]
        ]
    },
    {
        "id": "cc16c88b.fcf548",
        "type": "json",
        "z": "303a8ac7.4ea1c6",
        "g": "d8d1de94.dfe9",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 150,
        "y": 760,
        "wires": [
            [
                "c44943a810485120",
                "ff47c6e93ade7138"
            ]
        ]
    },
    {
        "id": "1c7e85b9.7a139a",
        "type": "function",
        "z": "303a8ac7.4ea1c6",
        "g": "d8d1de94.dfe9",
        "name": "",
        "func": "\n\nif(msg.statuson == true)\n{\n    msg.oncolor = \"yellow\"\n}\nelse msg.oncolor = \"black\";\n\nif(msg.blue <= 80)\n{\n    msg.dimcolor = \"yellow\";\n    msg.normcolor = \"black\";\n}\nelse { \n    msg.dimcolor = \"black\";\n    msg.normcolor = \"yellow\"\n}\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 760,
        "wires": [
            [
                "9f8b174e.db7128",
                "afd3f744.eebe38",
                "3b653b55.378c04",
                "5c40e7a216b4c613"
            ]
        ]
    },
    {
        "id": "d5fbe10f.cabbe",
        "type": "mqtt in",
        "z": "303a8ac7.4ea1c6",
        "g": "48598788.77a428",
        "name": "Esstischlampe Status",
        "topic": "shellies/Esstischlampe/light/0/status",
        "qos": "0",
        "datatype": "auto",
        "broker": "19cf2a10.f9d4a6",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 160,
        "y": 1080,
        "wires": [
            [
                "8a3241ff.1ce98"
            ]
        ]
    },
    {
        "id": "560b8c99.51d2e4",
        "type": "mqtt out",
        "z": "303a8ac7.4ea1c6",
        "g": "48598788.77a428",
        "name": "",
        "topic": "shellies/Esstischlampe/light/0/set",
        "qos": "1",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "19cf2a10.f9d4a6",
        "x": 1080,
        "y": 1140,
        "wires": []
    },
    {
        "id": "aba74db0.cc5fa",
        "type": "inject",
        "z": "303a8ac7.4ea1c6",
        "g": "48598788.77a428",
        "name": "Esstischlampe ON",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"brightness\":56,\"turn\":\"on\"}",
        "payloadType": "json",
        "x": 750,
        "y": 1020,
        "wires": [
            [
                "560b8c99.51d2e4"
            ]
        ]
    },
    {
        "id": "8a3241ff.1ce98",
        "type": "debug",
        "z": "303a8ac7.4ea1c6",
        "g": "48598788.77a428",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 490,
        "y": 1060,
        "wires": []
    },
    {
        "id": "4b0e945f.2a447c",
        "type": "inject",
        "z": "303a8ac7.4ea1c6",
        "g": "48598788.77a428",
        "name": "Esstischlampe OFF",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"brightness\":0,\"turn\":\"off\"}",
        "payloadType": "json",
        "x": 750,
        "y": 1060,
        "wires": [
            [
                "560b8c99.51d2e4"
            ]
        ]
    },
    {
        "id": "d4048c71.c6147",
        "type": "mqtt in",
        "z": "303a8ac7.4ea1c6",
        "g": "48598788.77a428",
        "name": "",
        "topic": "shellies/Wohnzimmerschalter/input_event/1",
        "qos": "0",
        "datatype": "auto",
        "broker": "19cf2a10.f9d4a6",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 220,
        "y": 1140,
        "wires": [
            [
                "598dc7bf.230e78"
            ]
        ]
    },
    {
        "id": "598dc7bf.230e78",
        "type": "json",
        "z": "303a8ac7.4ea1c6",
        "g": "48598788.77a428",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 450,
        "y": 1140,
        "wires": [
            [
                "1cdf209c.5f543f"
            ]
        ]
    },
    {
        "id": "1cdf209c.5f543f",
        "type": "change",
        "z": "303a8ac7.4ea1c6",
        "g": "48598788.77a428",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.event",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 630,
        "y": 1140,
        "wires": [
            [
                "8967db25.f1b4d8",
                "9450f1731fc4de3d"
            ]
        ]
    },
    {
        "id": "8967db25.f1b4d8",
        "type": "function",
        "z": "303a8ac7.4ea1c6",
        "g": "48598788.77a428",
        "name": "",
        "func": "// Erlaubtes Zeitfenster\nconst startHour = 6; // 6:00 Uhr\nconst endHour = 1;   // 1:00 Uhr\n\n// Aktuelle Zeit abrufen\nconst now = new Date();\nconst currentHour = now.getHours();\n\n\nswitch (msg.payload){\n    case \"S\":\n        msg.payload = \n        \n            {\n    \"brightness\": 40,\n    \"turn\": \"toggle\"\n}\n        break;\n    case \"SS\":\n        msg.payload = \n                {\n\n    \"brightness\": 80,\n    \"turn\": \"on\"\n                }\n        break;\n    case \"SSS\":\n        msg.payload = \n      {\n    \"brightness\": 20,\n    \"turn\": \"on\"\n\n}\n        break;\n    default:\n        msg.payload = \"anderes event\"\n}\nif (currentHour >= startHour || currentHour < endHour) {\nreturn msg;\n}\nelse {\n    msg.payload = \"ausserhalb Zeitbereich\"\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 1140,
        "wires": [
            [
                "560b8c99.51d2e4",
                "8408ab6f.7b84f8"
            ]
        ]
    },
    {
        "id": "8408ab6f.7b84f8",
        "type": "debug",
        "z": "303a8ac7.4ea1c6",
        "g": "48598788.77a428",
        "name": "mqtt IN",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1040,
        "y": 1260,
        "wires": []
    },
    {
        "id": "6ea779b5.a475f8",
        "type": "mqtt in",
        "z": "303a8ac7.4ea1c6",
        "g": "48598788.77a428",
        "name": "",
        "topic": "shellies/Esstischlampe/light/0/power",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "19cf2a10.f9d4a6",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 200,
        "y": 1020,
        "wires": [
            [
                "7f7def5a.ded76"
            ]
        ]
    },
    {
        "id": "7f7def5a.ded76",
        "type": "debug",
        "z": "303a8ac7.4ea1c6",
        "g": "48598788.77a428",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 490,
        "y": 1020,
        "wires": []
    },
    {
        "id": "b8fc33.612c63d",
        "type": "clock-timer",
        "z": "303a8ac7.4ea1c6",
        "g": "d8d1de94.dfe9",
        "name": "Zufall  Abwesenheit",
        "topic": "",
        "addIdType": "none",
        "addId": "",
        "positionConfig": "9a5a8534.25d4d8",
        "autoTrigger": true,
        "autoTriggerTime": 1200000,
        "startDelayTime": 10000,
        "contextStore": "",
        "results": [
            {
                "p": "",
                "pt": "msgTopic",
                "v": "",
                "vt": "topic"
            },
            {
                "p": "",
                "pt": "msgPayload",
                "v": "",
                "vt": "payload"
            },
            {
                "p": "timeCtrl",
                "pt": "msg",
                "v": "",
                "vt": "ctrlObj"
            }
        ],
        "overwriteExpire": "",
        "rules": [
            {
                "index": 0,
                "name": "On",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [
                    {
                        "valueType": "global",
                        "value": "OnHoliday",
                        "operator": "true",
                        "operatorText": "ist true",
                        "thresholdType": "num",
                        "threshold": "0"
                    }
                ],
                "payload": {
                    "type": "json",
                    "value": " {     \"mode\": \"color\",     \"red\": 255,     \"green\": 255,     \"blue\": 255,     \"gain\": 100,     \"turn\": \"on\",     \"transition\": 500 }",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000,
                    "format": ""
                },
                "topic": "",
                "importance": 0,
                "resetOverwrite": false,
                "time": {
                    "type": "pdsTime",
                    "value": "goldenHourDuskStart",
                    "operator": 1,
                    "operatorText": "‚Üß von",
                    "offsetType": "randmNumCachedDay",
                    "offset": "10",
                    "multiplier": 60000,
                    "days": "*",
                    "months": "*"
                },
                "description": "<div><i class=\"fa fa-code-fork\" aria-hidden=\"true\"></i> <var>global.OnHoliday</var> ist true</div><div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ‚Üß von <var>Goldene Abendstunde Beginn</var> offset <var>zuf√§llig (t√§glich) bis 10</var></div><div><div class=\"indent-payload-text\"><i class=\"fa fa-step-backward\" aria-hidden=\"true\"></i> <span>Payload:</span> <var>json</var></div></div>"
            },
            {
                "index": 1,
                "name": "Aus",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [
                    {
                        "valueType": "global",
                        "value": "OnHoliday",
                        "operator": "true",
                        "operatorText": "ist true",
                        "thresholdType": "num",
                        "threshold": "0"
                    }
                ],
                "payload": {
                    "type": "json",
                    "value": " {     \"mode\": \"color\",     \"red\": 255,     \"green\": 255,     \"blue\": 255,     \"gain\": 100,     \"turn\": \"off\",     \"transition\": 500 }",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000,
                    "format": ""
                },
                "topic": "",
                "importance": 0,
                "resetOverwrite": false,
                "time": {
                    "type": "entered",
                    "value": "20:15",
                    "operator": 1,
                    "operatorText": "‚Üß von",
                    "offsetType": "randmNumCachedDay",
                    "offset": "30",
                    "multiplier": 60000,
                    "days": "*",
                    "months": "*"
                },
                "description": "<div><i class=\"fa fa-code-fork\" aria-hidden=\"true\"></i> <var>global.OnHoliday</var> ist true</div><div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ‚Üß von <var>20:15</var> offset <var>zuf√§llig (t√§glich) bis 30</var></div><div><div class=\"indent-payload-text\"><i class=\"fa fa-step-backward\" aria-hidden=\"true\"></i> <span>Payload:</span> <var>json</var></div></div>"
            }
        ],
        "payloadDefault": "",
        "payloadDefaultType": "none",
        "payloadDefaultTimeFormat": 0,
        "payloadDefaultOffset": 0,
        "payloadDefaultOffsetType": "none",
        "payloadDefaultOffsetMultiplier": 60000,
        "x": 650,
        "y": 640,
        "wires": [
            [
                "1dc7e978.c48077"
            ],
            []
        ]
    },
    {
        "id": "9f8b174e.db7128",
        "type": "ui_button",
        "z": "303a8ac7.4ea1c6",
        "g": "d8d1de94.dfe9",
        "name": "Regal Ein/Aus",
        "group": "ae60322a.3a15c",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Regal",
        "tooltip": "",
        "color": "red",
        "bgcolor": "{{msg.oncolor}}",
        "className": "",
        "icon": "",
        "payload": "S",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 660,
        "y": 700,
        "wires": [
            [
                "8d25df5c.ebd85"
            ]
        ]
    },
    {
        "id": "afd3f744.eebe38",
        "type": "ui_button",
        "z": "303a8ac7.4ea1c6",
        "g": "d8d1de94.dfe9",
        "name": "",
        "group": "ae60322a.3a15c",
        "order": 1,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "Dim",
        "tooltip": "",
        "color": "red",
        "bgcolor": "{{msg.dimcolor}}",
        "className": "",
        "icon": "",
        "payload": "SS",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 630,
        "y": 740,
        "wires": [
            [
                "8d25df5c.ebd85"
            ]
        ]
    },
    {
        "id": "3b653b55.378c04",
        "type": "ui_button",
        "z": "303a8ac7.4ea1c6",
        "g": "d8d1de94.dfe9",
        "name": "",
        "group": "ae60322a.3a15c",
        "order": 2,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "Normal",
        "tooltip": "",
        "color": "red",
        "bgcolor": "{{msg.normcolor}}",
        "className": "",
        "icon": "",
        "payload": "S",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 640,
        "y": 780,
        "wires": [
            [
                "8d25df5c.ebd85"
            ]
        ]
    },
    {
        "id": "dbb3fcbb.281df",
        "type": "samsung-tv-isalive",
        "z": "303a8ac7.4ea1c6",
        "g": "d8d1de94.dfe9",
        "device": "d3280bd.1460df8",
        "name": "",
        "x": 360,
        "y": 840,
        "wires": [
            [
                "11294d5a.bc9e03",
                "0c44a392567ece67"
            ],
            [
                "80c803e5a0b04b9f",
                "3da7835372f92593"
            ]
        ]
    },
    {
        "id": "11294d5a.bc9e03",
        "type": "debug",
        "z": "303a8ac7.4ea1c6",
        "g": "d8d1de94.dfe9",
        "name": "ON",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 900,
        "wires": []
    },
    {
        "id": "c44943a810485120",
        "type": "switch",
        "z": "303a8ac7.4ea1c6",
        "g": "d8d1de94.dfe9",
        "name": "",
        "property": "payload.power",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 170,
        "y": 820,
        "wires": [
            [
                "dbb3fcbb.281df",
                "8b1654739201e473"
            ]
        ]
    },
    {
        "id": "dfd88152d7f11711",
        "type": "change",
        "z": "303a8ac7.4ea1c6",
        "g": "d8d1de94.dfe9",
        "name": "Set Dim",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"mode\":\"color\",\"red\":200,\"green\":255,\"blue\":50,\"gain\":50,\"turn\":\"on\",\"transition\":500}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "TVwasON",
                "pt": "flow",
                "to": "TRUE",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 960,
        "y": 820,
        "wires": [
            [
                "f9d6935864aab449"
            ]
        ]
    },
    {
        "id": "ff47c6e93ade7138",
        "type": "change",
        "z": "303a8ac7.4ea1c6",
        "g": "d8d1de94.dfe9",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "blue",
                "pt": "msg",
                "to": "payload.blue",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "statuson",
                "pt": "msg",
                "to": "payload.ison",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 300,
        "y": 760,
        "wires": [
            [
                "1c7e85b9.7a139a"
            ]
        ]
    },
    {
        "id": "ee576d625ea73b19",
        "type": "function",
        "z": "303a8ac7.4ea1c6",
        "g": "d8d1de94.dfe9",
        "name": "store current setting",
        "func": "\n\nflow.set(\"RegalLastValue\",{\n    mode: \"color\",\n    red: msg.payload.red,\n    green: msg.payload.green,\n    blue: msg.payload.blue,\n    gain: msg.payload.gain\n    \n    }, \"file\");\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "269fa372f1b2b061",
        "type": "function",
        "z": "303a8ac7.4ea1c6",
        "g": "d8d1de94.dfe9",
        "name": "function 5",
        "func": "msg.payload = flow.get(\"RegalLastValue\", \"file\");\nvar onCounter = flow.get(\"BlockNextON\", \"file\")  ;\nvar StatusText = \"empty\";\nonCounter = onCounter +1;\nif(onCounter >1) \n{\n    onCounter = 0;\n}\nStatusText = String(onCounter);\nflow.set(\"BlockNextON\", onCounter, \"file\");\nflow.set(\"TVwasON\", \"FALSE\", \"file\");\nnode.status({ fill: \"red\", shape: \"ring\", text: StatusText});\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\nif ((flow.get(\"BlockNextON\")) === undefined) {\n    flow.set(\"BlockNextON\", 0);\n}",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 860,
        "wires": [
            [
                "6c481a11bf50ef2a"
            ]
        ]
    },
    {
        "id": "6c481a11bf50ef2a",
        "type": "debug",
        "z": "303a8ac7.4ea1c6",
        "g": "d8d1de94.dfe9",
        "name": "debug 43",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1120,
        "y": 860,
        "wires": []
    },
    {
        "id": "80c803e5a0b04b9f",
        "type": "switch",
        "z": "303a8ac7.4ea1c6",
        "g": "d8d1de94.dfe9",
        "name": "TV was ON",
        "property": "TVwasON",
        "propertyType": "flow",
        "rules": [
            {
                "t": "eq",
                "v": "TRUE",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 630,
        "y": 860,
        "wires": [
            [
                "269fa372f1b2b061"
            ]
        ]
    },
    {
        "id": "0c44a392567ece67",
        "type": "switch",
        "z": "303a8ac7.4ea1c6",
        "g": "d8d1de94.dfe9",
        "name": "TV was Off",
        "property": "TVwasON",
        "propertyType": "flow",
        "rules": [
            {
                "t": "eq",
                "v": "FALSE",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 630,
        "y": 820,
        "wires": [
            [
                "79e79ac4f740a2e1"
            ]
        ]
    },
    {
        "id": "f9d6935864aab449",
        "type": "debug",
        "z": "303a8ac7.4ea1c6",
        "g": "d8d1de94.dfe9",
        "name": "debug 45",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1120,
        "y": 820,
        "wires": []
    },
    {
        "id": "8b1654739201e473",
        "type": "debug",
        "z": "303a8ac7.4ea1c6",
        "g": "d8d1de94.dfe9",
        "name": "debug 46",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 180,
        "y": 880,
        "wires": []
    },
    {
        "id": "3da7835372f92593",
        "type": "debug",
        "z": "303a8ac7.4ea1c6",
        "g": "d8d1de94.dfe9",
        "name": "OFF",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 940,
        "wires": []
    },
    {
        "id": "5c40e7a216b4c613",
        "type": "debug",
        "z": "303a8ac7.4ea1c6",
        "g": "d8d1de94.dfe9",
        "name": "debug 51",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 460,
        "y": 680,
        "wires": []
    },
    {
        "id": "79e79ac4f740a2e1",
        "type": "function",
        "z": "303a8ac7.4ea1c6",
        "g": "d8d1de94.dfe9",
        "name": "function 7",
        "func": "var onCounter = flow.get(\"BlockNextON\", \"file\")  ;\nvar StatusText = \"empty\";\nStatusText = String(onCounter);\n node.status({ fill: \"red\", shape: \"ring\", text: StatusText });\n flow.set(\"TVwasON\", \"TRUE\");\nif(onCounter != 1){\n    return msg;\n} ",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 820,
        "wires": [
            [
                "dfd88152d7f11711"
            ]
        ]
    },
    {
        "id": "77d544823668d60d",
        "type": "inject",
        "z": "303a8ac7.4ea1c6",
        "g": "d8d1de94.dfe9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 800,
        "y": 920,
        "wires": [
            [
                "269fa372f1b2b061"
            ]
        ]
    },
    {
        "id": "73f6d13a86f5a5fe",
        "type": "clock-timer",
        "z": "303a8ac7.4ea1c6",
        "g": "48598788.77a428",
        "name": "",
        "topic": "",
        "addIdType": "none",
        "addId": "",
        "positionConfig": "9a5a8534.25d4d8",
        "autoTrigger": true,
        "autoTriggerTime": 1200000,
        "startDelayTime": 10000,
        "contextStore": "",
        "results": [
            {
                "p": "",
                "pt": "msgTopic",
                "v": "",
                "vt": "topic"
            },
            {
                "p": "",
                "pt": "msgPayload",
                "v": "",
                "vt": "payload"
            },
            {
                "p": "timeCtrl",
                "pt": "msg",
                "v": "",
                "vt": "ctrlObj"
            }
        ],
        "overwriteExpire": "",
        "rules": [
            {
                "index": 0,
                "name": "Mitternacht aus",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [],
                "payload": {
                    "type": "json",
                    "value": "{\"brightness\":0,\"turn\":\"off\"}",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000,
                    "format": ""
                },
                "topic": "",
                "importance": 0,
                "resetOverwrite": false,
                "time": {
                    "type": "entered",
                    "value": "02:15",
                    "operator": 1,
                    "operatorText": "‚Üß von",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000,
                    "days": "*",
                    "months": "*"
                },
                "description": "<div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ‚Üß von <var>02:15</var></div><div><div class=\"indent-payload-text\"><i class=\"fa fa-step-backward\" aria-hidden=\"true\"></i> <span>Payload:</span> <var>{\"brightness\":0,\"turn\":\"off\"}</var></div></div>"
            }
        ],
        "payloadDefault": "",
        "payloadDefaultType": "none",
        "payloadDefaultTimeFormat": 0,
        "payloadDefaultOffset": 0,
        "payloadDefaultOffsetType": "none",
        "payloadDefaultOffsetMultiplier": 60000,
        "x": 790,
        "y": 1260,
        "wires": [
            [
                "560b8c99.51d2e4",
                "8408ab6f.7b84f8"
            ],
            []
        ]
    },
    {
        "id": "3c742c50ddb82a78",
        "type": "ui_switch",
        "z": "303a8ac7.4ea1c6",
        "g": "48598788.77a428",
        "name": "",
        "label": "Esstischlampe",
        "tooltip": "",
        "group": "ae60322a.3a15c",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 140,
        "y": 1200,
        "wires": [
            [
                "22488e72b78c78a8"
            ]
        ]
    },
    {
        "id": "22488e72b78c78a8",
        "type": "change",
        "z": "303a8ac7.4ea1c6",
        "g": "48598788.77a428",
        "name": "Esstischlampe Manuell",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "{\"brightness\":56,\"turn\":\"on\"}",
                "tot": "json"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "{\"brightness\":0,\"turn\":\"off\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 360,
        "y": 1200,
        "wires": [
            [
                "560b8c99.51d2e4"
            ]
        ]
    },
    {
        "id": "9450f1731fc4de3d",
        "type": "debug",
        "z": "303a8ac7.4ea1c6",
        "g": "48598788.77a428",
        "name": "debug 84",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 780,
        "y": 1200,
        "wires": []
    },
    {
        "id": "17cb0817cb05a53a",
        "type": "link in",
        "z": "abede211eec6d1b4",
        "name": "TempSchlafzimmer",
        "links": [
            "92311c170fc82c32"
        ],
        "x": 45,
        "y": 80,
        "wires": [
            [
                "a09692e6cff55521"
            ]
        ]
    },
    {
        "id": "a09692e6cff55521",
        "type": "function",
        "z": "abede211eec6d1b4",
        "name": "Sensor2 fTempA Only",
        "func": "var topic=msg.topic;\nswitch(topic){\n    case \"Sensor2/fTempA\":\n        msg.payload= Number(msg.payload)\n        \n        \n        return msg;\n   \n}\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 180,
        "y": 80,
        "wires": [
            [
                "86ac8dbeca355315",
                "58bdb4f17f5f1ec7"
            ]
        ]
    },
    {
        "id": "86ac8dbeca355315",
        "type": "debug",
        "z": "abede211eec6d1b4",
        "name": "debug 19",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 380,
        "y": 200,
        "wires": []
    },
    {
        "id": "58bdb4f17f5f1ec7",
        "type": "switch",
        "z": "abede211eec6d1b4",
        "name": "Temp < 16",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lte",
                "v": "16",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 410,
        "y": 80,
        "wires": [
            [
                "c94789d46afeca1b",
                "12ddd5a448fd65b2"
            ]
        ]
    },
    {
        "id": "4a12b00edaf57a27",
        "type": "inject",
        "z": "abede211eec6d1b4",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "5",
        "payloadType": "num",
        "x": 570,
        "y": 200,
        "wires": [
            [
                "58bdb4f17f5f1ec7"
            ]
        ]
    },
    {
        "id": "08d6a70148e843af",
        "type": "link in",
        "z": "abede211eec6d1b4",
        "name": "Schlafzimmer Fenster offen",
        "links": [
            "e0160b9e060c6bab"
        ],
        "x": 65,
        "y": 380,
        "wires": [
            [
                "3b1c3a9ecc5904c8"
            ]
        ]
    },
    {
        "id": "3b1c3a9ecc5904c8",
        "type": "change",
        "z": "abede211eec6d1b4",
        "name": "Schlafzimmer Fenster Offen",
        "rules": [
            {
                "t": "set",
                "p": "#:(file)::SchlafzFensterOffen",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 240,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "6ae56aa7086dbbd9",
        "type": "change",
        "z": "abede211eec6d1b4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Bitte mach das Fenster im Schlafzimmer zu. Wird sonst zu kalt.",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 780,
        "y": 80,
        "wires": [
            [
                "cf056c38a8bb417e",
                "02f7bf0d7785e028"
            ]
        ]
    },
    {
        "id": "c94789d46afeca1b",
        "type": "switch",
        "z": "abede211eec6d1b4",
        "name": "Window Open",
        "property": "#:(file)::SchlafzFensterOffen",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 600,
        "y": 80,
        "wires": [
            [
                "6ae56aa7086dbbd9"
            ]
        ]
    },
    {
        "id": "02f7bf0d7785e028",
        "type": "delay",
        "z": "abede211eec6d1b4",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "5",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 980,
        "y": 80,
        "wires": [
            [
                "4550d5755f71c3fe"
            ]
        ]
    },
    {
        "id": "4550d5755f71c3fe",
        "type": "function",
        "z": "abede211eec6d1b4",
        "name": "Telegram convert",
        "func": "var text;\ntext = msg.payload;\nreturn { payload: { chatId: -4054485106, type: 'message', content: text } };",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "// Code added here will be run once\n",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 200,
        "wires": [
            [
                "48b61167428abd17"
            ]
        ]
    },
    {
        "id": "12ddd5a448fd65b2",
        "type": "debug",
        "z": "abede211eec6d1b4",
        "name": "debug 20",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 580,
        "y": 20,
        "wires": []
    },
    {
        "id": "cf056c38a8bb417e",
        "type": "debug",
        "z": "abede211eec6d1b4",
        "name": "debug 22",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 960,
        "y": 20,
        "wires": []
    },
    {
        "id": "47c4351b76881231",
        "type": "debug",
        "z": "abede211eec6d1b4",
        "name": "debug 28",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1160,
        "y": 140,
        "wires": []
    },
    {
        "id": "48b61167428abd17",
        "type": "telegram sender",
        "z": "abede211eec6d1b4",
        "name": "TelegramSend",
        "bot": "79ccd59a.7479ec",
        "haserroroutput": true,
        "outputs": 2,
        "x": 1100,
        "y": 200,
        "wires": [
            [],
            [
                "47c4351b76881231"
            ]
        ]
    },
    {
        "id": "5f91e7602da223bd",
        "type": "mqtt out",
        "z": "f9aa4d8908cf3153",
        "g": "ba622014ba4332d1",
        "name": "",
        "topic": "ShellyPlug1/command/switch:0",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "19cf2a10.f9d4a6",
        "x": 370,
        "y": 60,
        "wires": []
    },
    {
        "id": "439f4e1780b18960",
        "type": "inject",
        "z": "f9aa4d8908cf3153",
        "g": "ba622014ba4332d1",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "on",
        "payloadType": "str",
        "x": 130,
        "y": 60,
        "wires": [
            [
                "5f91e7602da223bd"
            ]
        ]
    },
    {
        "id": "6bbe9610015db0bb",
        "type": "inject",
        "z": "f9aa4d8908cf3153",
        "g": "ba622014ba4332d1",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "off",
        "payloadType": "str",
        "x": 130,
        "y": 120,
        "wires": [
            [
                "5f91e7602da223bd"
            ]
        ]
    },
    {
        "id": "acb7a54c851e9859",
        "type": "debug",
        "z": "f9aa4d8908cf3153",
        "g": "ba622014ba4332d1",
        "name": "debug 1",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 400,
        "y": 180,
        "wires": []
    },
    {
        "id": "28e6fe851aacfbc8",
        "type": "mqtt in",
        "z": "f9aa4d8908cf3153",
        "g": "ba622014ba4332d1",
        "name": "",
        "topic": "ShellyPlug1/status/switch:0",
        "qos": "0",
        "datatype": "json",
        "broker": "19cf2a10.f9d4a6",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 170,
        "y": 180,
        "wires": [
            [
                "acb7a54c851e9859"
            ]
        ]
    },
    {
        "id": "8c8efc274d12449f",
        "type": "mqtt out",
        "z": "f9aa4d8908cf3153",
        "g": "0ac5cf038e9b4a0e",
        "name": "",
        "topic": "ShellyPlug6/rpc",
        "qos": "1",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "19cf2a10.f9d4a6",
        "x": 560,
        "y": 300,
        "wires": []
    },
    {
        "id": "37aac056560b1cc1",
        "type": "change",
        "z": "f9aa4d8908cf3153",
        "g": "0ac5cf038e9b4a0e",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "ON",
                "fromt": "str",
                "to": "{\"id\":0,\"src\":\"mqtt\",\"method\":\"Switch.Set\",\"params\":{\"id\":0,\"on\":true}}",
                "tot": "json"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "OFF",
                "fromt": "str",
                "to": "{\"id\":0,\"src\":\"mqtt\",\"method\":\"Switch.Set\",\"params\":{\"id\":0,\"on\":false}}",
                "tot": "json"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "DAY",
                "fromt": "str",
                "to": "{\"id\":0,\"src\":\"mqtt\",\"method\":\"PLUGS_UI.SetConfig\",\"params\":{\"config\":{\"leds\":{\"mode\":\"switch\",\"colors\":{\"switch:0\":{\"on\":{\"rgb\":[0,100,0],\"brightness\":100},\"off\":{\"rgb\":[100,0,0],\"brightness\":100}}}}}}}",
                "tot": "json"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "NIGHT",
                "fromt": "str",
                "to": "{\"id\":0,\"src\":\"mqtt\",\"method\":\"PLUGS_UI.SetConfig\",\"params\":{\"config\":{\"leds\":{\"mode\":\"switch\",\"colors\":{\"switch:0\":{\"on\":{\"rgb\":[0,100,100],\"brightness\":30},\"off\":{\"rgb\":[0,0,100],\"brightness\":30}}}}}}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 350,
        "y": 300,
        "wires": [
            [
                "8c8efc274d12449f",
                "1a6b3cb24b179f60"
            ]
        ]
    },
    {
        "id": "8096558a54a1573b",
        "type": "mqtt out",
        "z": "f9aa4d8908cf3153",
        "g": "32340ff2f48f54cf",
        "name": "",
        "topic": "SchiffLampe/rpc",
        "qos": "1",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "19cf2a10.f9d4a6",
        "x": 600,
        "y": 460,
        "wires": []
    },
    {
        "id": "5ed2c1ced591b927",
        "type": "inject",
        "z": "f9aa4d8908cf3153",
        "g": "32340ff2f48f54cf",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"id\":0,\"src\":\"mqtt\",\"method\":\"PLUGS_UI.SetConfig\",\"params\":{\"config\":{\"leds\":{\"mode\":\"switch\",\"colors\":{\"switch:0\":{\"on\":{\"rgb\":[100,49,100],\"brightness\":100},\"off\":{\"rgb\":[100,100,20],\"brightness\":100}}},\"night_mode\":{\"enable\":true,\"brightness\":10,\"active_between\":[\"21:53\",\"21:59\"]}}}}}",
        "payloadType": "json",
        "x": 390,
        "y": 400,
        "wires": [
            [
                "8096558a54a1573b"
            ]
        ]
    },
    {
        "id": "1cc8a629e50f56e4",
        "type": "debug",
        "z": "f9aa4d8908cf3153",
        "g": "32340ff2f48f54cf",
        "name": "debug 18",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 580,
        "y": 520,
        "wires": []
    },
    {
        "id": "e2bd8d200d5e2702",
        "type": "change",
        "z": "f9aa4d8908cf3153",
        "g": "32340ff2f48f54cf",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "ON",
                "fromt": "str",
                "to": "{\"id\":0,\"src\":\"mqtt\",\"method\":\"Switch.Set\",\"params\":{\"id\":0,\"on\":true}}",
                "tot": "json"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "OFF",
                "fromt": "str",
                "to": "{\"id\":0,\"src\":\"mqtt\",\"method\":\"Switch.Set\",\"params\":{\"id\":0,\"on\":false}}",
                "tot": "json"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "DAY",
                "fromt": "str",
                "to": "{\"id\":0,\"src\":\"mqtt\",\"method\":\"PLUGS_UI.SetConfig\",\"params\":{\"config\":{\"leds\":{\"mode\":\"switch\",\"colors\":{\"switch:0\":{\"on\":{\"rgb\":[0,100,0],\"brightness\":100},\"off\":{\"rgb\":[100,0,0],\"brightness\":100}}}}}}}",
                "tot": "json"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "NIGHT",
                "fromt": "str",
                "to": "{\"id\":0,\"src\":\"mqtt\",\"method\":\"PLUGS_UI.SetConfig\",\"params\":{\"config\":{\"leds\":{\"mode\":\"switch\",\"colors\":{\"switch:0\":{\"on\":{\"rgb\":[0,100,100],\"brightness\":30},\"off\":{\"rgb\":[0,0,100],\"brightness\":30}}}}}}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 460,
        "wires": [
            [
                "1cc8a629e50f56e4",
                "8096558a54a1573b"
            ]
        ]
    },
    {
        "id": "242b1a5b6365a506",
        "type": "inject",
        "z": "f9aa4d8908cf3153",
        "g": "32340ff2f48f54cf",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "NIGHT",
        "payloadType": "str",
        "x": 130,
        "y": 560,
        "wires": [
            [
                "e2bd8d200d5e2702"
            ]
        ]
    },
    {
        "id": "aa807b1b18ee51ae",
        "type": "inject",
        "z": "f9aa4d8908cf3153",
        "g": "32340ff2f48f54cf",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "DAY",
        "payloadType": "str",
        "x": 130,
        "y": 520,
        "wires": [
            [
                "e2bd8d200d5e2702"
            ]
        ]
    },
    {
        "id": "f4e6dc9865ab090d",
        "type": "clock-timer",
        "z": "f9aa4d8908cf3153",
        "g": "0ac5cf038e9b4a0e",
        "name": "",
        "topic": "",
        "addIdType": "none",
        "addId": "",
        "positionConfig": "9a5a8534.25d4d8",
        "autoTrigger": true,
        "autoTriggerTime": "60000",
        "startDelayTime": 10000,
        "contextStore": "",
        "results": [
            {
                "p": "",
                "pt": "msgTopic",
                "v": "",
                "vt": "topic"
            },
            {
                "p": "",
                "pt": "msgPayload",
                "v": "",
                "vt": "payload"
            },
            {
                "p": "timeCtrl",
                "pt": "msg",
                "v": "",
                "vt": "ctrlObj"
            }
        ],
        "overwriteExpire": "",
        "rules": [
            {
                "index": 0,
                "name": "Weihnachststern ein",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [],
                "payload": {
                    "type": "str",
                    "value": "ON",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000,
                    "format": ""
                },
                "topic": "",
                "importance": 0,
                "resetOverwrite": false,
                "time": {
                    "type": "pdsTime",
                    "value": "sunsetStart",
                    "operator": 1,
                    "operatorText": "‚Üß from",
                    "offsetType": "num",
                    "offset": "-10",
                    "multiplier": 60000,
                    "days": "*",
                    "months": "*"
                },
                "description": "<div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ‚Üß from <var>sunset start</var> - 00:10</div><div><div class=\"indent-payload-text\"><i class=\"fa fa-step-backward\" aria-hidden=\"true\"></i> <span>Payload: </span> <var>\"ON\"</var></div></div>"
            },
            {
                "index": 1,
                "name": "",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [],
                "payload": {
                    "type": "str",
                    "value": "OFF",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000,
                    "format": ""
                },
                "topic": "",
                "importance": 0,
                "resetOverwrite": false,
                "time": {
                    "type": "entered",
                    "value": "23:00",
                    "operator": 1,
                    "operatorText": "‚Üß from",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000,
                    "days": "*",
                    "months": "*"
                },
                "description": "<div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ‚Üß from <var>23:00</var></div><div><div class=\"indent-payload-text\"><i class=\"fa fa-step-backward\" aria-hidden=\"true\"></i> <span>Payload: </span> <var>\"OFF\"</var></div></div>"
            }
        ],
        "payloadDefault": "OFF",
        "payloadDefaultType": "str",
        "payloadDefaultTimeFormat": 0,
        "payloadDefaultOffset": 0,
        "payloadDefaultOffsetType": "none",
        "payloadDefaultOffsetMultiplier": 60000,
        "x": 130,
        "y": 300,
        "wires": [
            [
                "37aac056560b1cc1"
            ],
            []
        ]
    },
    {
        "id": "79a6f8307898f063",
        "type": "clock-timer",
        "z": "f9aa4d8908cf3153",
        "g": "32340ff2f48f54cf",
        "name": "",
        "topic": "",
        "addIdType": "none",
        "addId": "",
        "positionConfig": "9a5a8534.25d4d8",
        "autoTrigger": true,
        "autoTriggerTime": "60000",
        "startDelayTime": 10000,
        "contextStore": "",
        "results": [
            {
                "p": "",
                "pt": "msgTopic",
                "v": "",
                "vt": "topic"
            },
            {
                "p": "",
                "pt": "msgPayload",
                "v": "",
                "vt": "payload"
            },
            {
                "p": "timeCtrl",
                "pt": "msg",
                "v": "",
                "vt": "ctrlObj"
            }
        ],
        "overwriteExpire": "",
        "rules": [
            {
                "index": 0,
                "name": "Weihnachststern ein",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [],
                "payload": {
                    "type": "str",
                    "value": "ON",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000,
                    "format": ""
                },
                "topic": "",
                "importance": 0,
                "resetOverwrite": false,
                "time": {
                    "type": "pdsTime",
                    "value": "sunsetStart",
                    "operator": 1,
                    "operatorText": "‚Üß from",
                    "offsetType": "num",
                    "offset": "-10",
                    "multiplier": 60000,
                    "days": "*",
                    "months": "*"
                },
                "description": "<div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ‚Üß from <var>sunset start</var> - 00:10</div><div><div class=\"indent-payload-text\"><i class=\"fa fa-step-backward\" aria-hidden=\"true\"></i> <span>Payload: </span> <var>\"ON\"</var></div></div>"
            },
            {
                "index": 1,
                "name": "",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [],
                "payload": {
                    "type": "str",
                    "value": "OFF",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000,
                    "format": ""
                },
                "topic": "",
                "importance": 0,
                "resetOverwrite": false,
                "time": {
                    "type": "entered",
                    "value": "22:00",
                    "operator": 1,
                    "operatorText": "‚Üß von",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000,
                    "days": "*",
                    "months": "*"
                },
                "description": "<div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ‚Üß von <var>22:00</var></div><div><div class=\"indent-payload-text\"><i class=\"fa fa-step-backward\" aria-hidden=\"true\"></i> <span>Payload:</span> <var>\"OFF\"</var></div></div>"
            }
        ],
        "payloadDefault": "OFF",
        "payloadDefaultType": "str",
        "payloadDefaultTimeFormat": 0,
        "payloadDefaultOffset": 0,
        "payloadDefaultOffsetType": "none",
        "payloadDefaultOffsetMultiplier": 60000,
        "x": 130,
        "y": 400,
        "wires": [
            [
                "e2bd8d200d5e2702"
            ],
            []
        ]
    },
    {
        "id": "707583bc79fdf095",
        "type": "clock-timer",
        "z": "f9aa4d8908cf3153",
        "g": "32340ff2f48f54cf",
        "name": "Night Mode",
        "topic": "",
        "addIdType": "none",
        "addId": "",
        "positionConfig": "9a5a8534.25d4d8",
        "autoTrigger": true,
        "autoTriggerTime": "60000",
        "startDelayTime": 10000,
        "contextStore": "",
        "results": [
            {
                "p": "",
                "pt": "msgTopic",
                "v": "",
                "vt": "topic"
            },
            {
                "p": "",
                "pt": "msgPayload",
                "v": "",
                "vt": "payload"
            },
            {
                "p": "timeCtrl",
                "pt": "msg",
                "v": "",
                "vt": "ctrlObj"
            }
        ],
        "overwriteExpire": "",
        "rules": [
            {
                "index": 0,
                "name": "Day",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [],
                "payload": {
                    "type": "str",
                    "value": "DAY",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000,
                    "format": ""
                },
                "topic": "",
                "importance": 0,
                "resetOverwrite": false,
                "time": {
                    "type": "entered",
                    "value": "9:05",
                    "operator": 1,
                    "operatorText": "‚Üß from",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000,
                    "days": "*",
                    "months": "*"
                },
                "description": "<div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ‚Üß from <var>9:05</var></div><div><div class=\"indent-payload-text\"><i class=\"fa fa-step-backward\" aria-hidden=\"true\"></i> <span>Payload: </span> <var>\"DAY\"</var></div></div>"
            },
            {
                "index": 1,
                "name": "NIGHT",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [],
                "payload": {
                    "type": "str",
                    "value": "NIGHT",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000,
                    "format": ""
                },
                "topic": "",
                "importance": 0,
                "resetOverwrite": false,
                "time": {
                    "type": "entered",
                    "value": "18:45",
                    "operator": 1,
                    "operatorText": "‚Üß from",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000,
                    "days": "*",
                    "months": "*"
                },
                "description": "<div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ‚Üß from <var>18:45</var></div><div><div class=\"indent-payload-text\"><i class=\"fa fa-step-backward\" aria-hidden=\"true\"></i> <span>Payload: </span> <var>\"NIGHT\"</var></div></div>",
                "timeData": 0
            }
        ],
        "payloadDefault": "NIGHT",
        "payloadDefaultType": "str",
        "payloadDefaultTimeFormat": 0,
        "payloadDefaultOffset": 0,
        "payloadDefaultOffsetType": "none",
        "payloadDefaultOffsetMultiplier": 60000,
        "x": 130,
        "y": 460,
        "wires": [
            [
                "e2bd8d200d5e2702"
            ],
            []
        ]
    },
    {
        "id": "7315777ca52b6217",
        "type": "mqtt out",
        "z": "f9aa4d8908cf3153",
        "g": "6cbee2f8d8c21bd4",
        "name": "",
        "topic": "Waipu/rpc",
        "qos": "1",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "19cf2a10.f9d4a6",
        "x": 580,
        "y": 720,
        "wires": []
    },
    {
        "id": "ea1509d472571410",
        "type": "debug",
        "z": "f9aa4d8908cf3153",
        "g": "6cbee2f8d8c21bd4",
        "name": "debug 78",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 580,
        "y": 780,
        "wires": []
    },
    {
        "id": "0dae3786785bf5f7",
        "type": "change",
        "z": "f9aa4d8908cf3153",
        "g": "6cbee2f8d8c21bd4",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "ON",
                "fromt": "str",
                "to": "{\"id\":0,\"src\":\"mqtt\",\"method\":\"Switch.Set\",\"params\":{\"id\":0,\"on\":true}}",
                "tot": "json"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "OFF",
                "fromt": "str",
                "to": "{\"id\":0,\"src\":\"mqtt\",\"method\":\"Switch.Set\",\"params\":{\"id\":0,\"on\":false}}",
                "tot": "json"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "DAY",
                "fromt": "str",
                "to": "{\"id\":0,\"src\":\"mqtt\",\"method\":\"PLUGS_UI.SetConfig\",\"params\":{\"config\":{\"leds\":{\"mode\":\"switch\",\"colors\":{\"switch:0\":{\"on\":{\"rgb\":[0,100,0],\"brightness\":100},\"off\":{\"rgb\":[100,0,0],\"brightness\":100}}}}}}}",
                "tot": "json"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "NIGHT",
                "fromt": "str",
                "to": "{\"id\":0,\"src\":\"mqtt\",\"method\":\"PLUGS_UI.SetConfig\",\"params\":{\"config\":{\"leds\":{\"mode\":\"switch\",\"colors\":{\"switch:0\":{\"on\":{\"rgb\":[0,10,0],\"brightness\":30},\"off\":{\"rgb\":[60,0,0],\"brightness\":30}}}}}}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 720,
        "wires": [
            [
                "ea1509d472571410",
                "7315777ca52b6217"
            ]
        ]
    },
    {
        "id": "c096bf1bd24a9355",
        "type": "inject",
        "z": "f9aa4d8908cf3153",
        "g": "6cbee2f8d8c21bd4",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "NIGHT",
        "payloadType": "str",
        "x": 130,
        "y": 820,
        "wires": [
            [
                "0dae3786785bf5f7"
            ]
        ]
    },
    {
        "id": "8521c54304dfaa01",
        "type": "inject",
        "z": "f9aa4d8908cf3153",
        "g": "6cbee2f8d8c21bd4",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "DAY",
        "payloadType": "str",
        "x": 130,
        "y": 780,
        "wires": [
            [
                "0dae3786785bf5f7"
            ]
        ]
    },
    {
        "id": "33bcd57ebcf3e876",
        "type": "ui_button",
        "z": "f9aa4d8908cf3153",
        "g": "6cbee2f8d8c21bd4",
        "name": "",
        "group": "67365e98.aacf3",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "ON",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "ON",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 110,
        "y": 680,
        "wires": [
            [
                "0dae3786785bf5f7"
            ]
        ]
    },
    {
        "id": "b9c430a901df5ad5",
        "type": "ui_button",
        "z": "f9aa4d8908cf3153",
        "g": "6cbee2f8d8c21bd4",
        "name": "",
        "group": "67365e98.aacf3",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "OFF",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "OFF",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 110,
        "y": 720,
        "wires": [
            [
                "0dae3786785bf5f7"
            ]
        ]
    },
    {
        "id": "16f3d121ff896e83",
        "type": "comment",
        "z": "f9aa4d8908cf3153",
        "g": "6cbee2f8d8c21bd4",
        "name": "",
        "info": "Schaltet waipu Stick ab um  Netzwerk usw zu resetten.",
        "x": 600,
        "y": 640,
        "wires": []
    },
    {
        "id": "d8e0365a68890c54",
        "type": "inject",
        "z": "f9aa4d8908cf3153",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "OFF",
        "payloadType": "str",
        "x": 150,
        "y": 240,
        "wires": [
            [
                "37aac056560b1cc1"
            ]
        ]
    },
    {
        "id": "1a6b3cb24b179f60",
        "type": "debug",
        "z": "f9aa4d8908cf3153",
        "name": "debug 79",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 220,
        "wires": []
    },
    {
        "id": "46c340e550e6a541",
        "type": "mqtt out",
        "z": "f9aa4d8908cf3153",
        "g": "61105c945b3dbdf6",
        "name": "",
        "topic": "ShellyPlug5/rpc",
        "qos": "1",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "19cf2a10.f9d4a6",
        "x": 600,
        "y": 980,
        "wires": []
    },
    {
        "id": "dad10dfe1ff17c1b",
        "type": "inject",
        "z": "f9aa4d8908cf3153",
        "g": "61105c945b3dbdf6",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"id\":0,\"src\":\"mqtt\",\"method\":\"PLUGS_UI.SetConfig\",\"params\":{\"config\":{\"leds\":{\"mode\":\"switch\",\"colors\":{\"switch:0\":{\"on\":{\"rgb\":[100,49,100],\"brightness\":100},\"off\":{\"rgb\":[100,100,20],\"brightness\":100}}},\"night_mode\":{\"enable\":true,\"brightness\":10,\"active_between\":[\"21:53\",\"21:59\"]}}}}}",
        "payloadType": "json",
        "x": 390,
        "y": 920,
        "wires": [
            [
                "46c340e550e6a541"
            ]
        ]
    },
    {
        "id": "a0374dac5c451e6c",
        "type": "debug",
        "z": "f9aa4d8908cf3153",
        "g": "61105c945b3dbdf6",
        "name": "debug 80",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 580,
        "y": 1040,
        "wires": []
    },
    {
        "id": "af4f39c2cb753003",
        "type": "clock-timer",
        "z": "f9aa4d8908cf3153",
        "g": "61105c945b3dbdf6",
        "name": "",
        "topic": "",
        "addIdType": "none",
        "addId": "",
        "positionConfig": "9a5a8534.25d4d8",
        "autoTrigger": true,
        "autoTriggerTime": "60000",
        "startDelayTime": 10000,
        "contextStore": "",
        "results": [
            {
                "p": "",
                "pt": "msgTopic",
                "v": "",
                "vt": "topic"
            },
            {
                "p": "",
                "pt": "msgPayload",
                "v": "",
                "vt": "payload"
            },
            {
                "p": "timeCtrl",
                "pt": "msg",
                "v": "",
                "vt": "ctrlObj"
            }
        ],
        "overwriteExpire": "",
        "rules": [
            {
                "index": 0,
                "name": "Weihnachststern ein",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [],
                "payload": {
                    "type": "str",
                    "value": "ON",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000,
                    "format": ""
                },
                "topic": "",
                "importance": 0,
                "resetOverwrite": false,
                "time": {
                    "type": "entered",
                    "value": "16:00",
                    "operator": 1,
                    "operatorText": "‚Üß von",
                    "offsetType": "num",
                    "offset": "0",
                    "multiplier": 60000,
                    "days": "*",
                    "months": "*",
                    "dateStart": "2024-12-24",
                    "dateEnd": "2025-01-25"
                },
                "description": "<div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ‚Üß von <var>16:00</var> - 00:00<div class=\"indent-time-datelimit\"><i class=\"fa fa-calendar-o\" aria-hidden=\"true\"></i> <span>nur von</span> <var>12-24</var> <span> bis</span> <var>01-25</var></div></div><div><div class=\"indent-payload-text\"><i class=\"fa fa-step-backward\" aria-hidden=\"true\"></i> <span>Payload:</span> <var>\"ON\"</var></div></div>"
            },
            {
                "index": 1,
                "name": "",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [],
                "payload": {
                    "type": "str",
                    "value": "OFF",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000,
                    "format": ""
                },
                "topic": "",
                "importance": 0,
                "resetOverwrite": false,
                "time": {
                    "type": "entered",
                    "value": "22:00",
                    "operator": 1,
                    "operatorText": "‚Üß von",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000,
                    "days": "1,2,3,4",
                    "months": "*",
                    "dateStart": "2024-12-24",
                    "dateEnd": "2025-01-25"
                },
                "description": "<div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ‚Üß von <var>22:00</var><div class=\"indent-time-days\"><i class=\"fa fa-calendar-o\" aria-hidden=\"true\"></i> <span>nur an folgenden Tagen</span> <var>Mo-Do</var></div><div class=\"indent-time-datelimit\"><i class=\"fa fa-calendar-o\" aria-hidden=\"true\"></i> <span>nur von</span> <var>12-24</var> <span> bis</span> <var>01-25</var></div></div><div><div class=\"indent-payload-text\"><i class=\"fa fa-step-backward\" aria-hidden=\"true\"></i> <span>Payload:</span> <var>\"OFF\"</var></div></div>"
            },
            {
                "index": 2,
                "name": "Off Weekend",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [],
                "payload": {
                    "type": "none",
                    "value": "",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000,
                    "format": ""
                },
                "topic": "",
                "importance": 0,
                "resetOverwrite": false,
                "time": {
                    "type": "entered",
                    "value": "23:55",
                    "operator": 0,
                    "operatorText": "‚Ü• bis",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000,
                    "days": "5,6,0",
                    "months": "*",
                    "dateStart": "2024-12-24",
                    "dateEnd": "2025-01-25"
                },
                "description": "<div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ‚Ü• bis <var>23:55</var><div class=\"indent-time-days\"><i class=\"fa fa-calendar-o\" aria-hidden=\"true\"></i> <span>nur an folgenden Tagen</span> <var>Fr-So</var></div><div class=\"indent-time-datelimit\"><i class=\"fa fa-calendar-o\" aria-hidden=\"true\"></i> <span>nur von</span> <var>12-24</var> <span> bis</span> <var>01-25</var></div></div><div>Kein Payload</div>"
            }
        ],
        "payloadDefault": "OFF",
        "payloadDefaultType": "str",
        "payloadDefaultTimeFormat": 0,
        "payloadDefaultOffset": 0,
        "payloadDefaultOffsetType": "none",
        "payloadDefaultOffsetMultiplier": 60000,
        "x": 130,
        "y": 920,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "331427707e2f11a5",
        "type": "change",
        "z": "f9aa4d8908cf3153",
        "g": "61105c945b3dbdf6",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "ON",
                "fromt": "str",
                "to": "{\"id\":0,\"src\":\"mqtt\",\"method\":\"Switch.Set\",\"params\":{\"id\":0,\"on\":true}}",
                "tot": "json"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "OFF",
                "fromt": "str",
                "to": "{\"id\":0,\"src\":\"mqtt\",\"method\":\"Switch.Set\",\"params\":{\"id\":0,\"on\":false}}",
                "tot": "json"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "DAY",
                "fromt": "str",
                "to": "{\"id\":0,\"src\":\"mqtt\",\"method\":\"PLUGS_UI.SetConfig\",\"params\":{\"config\":{\"leds\":{\"mode\":\"switch\",\"colors\":{\"switch:0\":{\"on\":{\"rgb\":[0,100,0],\"brightness\":100},\"off\":{\"rgb\":[0,0,100],\"brightness\":100}}}}}}}",
                "tot": "json"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "NIGHT",
                "fromt": "str",
                "to": "{\"id\":0,\"src\":\"mqtt\",\"method\":\"PLUGS_UI.SetConfig\",\"params\":{\"config\":{\"leds\":{\"mode\":\"switch\",\"colors\":{\"switch:0\":{\"on\":{\"rgb\":[0,0,0],\"brightness\":0},\"off\":{\"rgb\":[0,0,0],\"brightness\":0}}}}}}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 980,
        "wires": [
            [
                "a0374dac5c451e6c",
                "46c340e550e6a541"
            ]
        ]
    },
    {
        "id": "392c733344f14512",
        "type": "clock-timer",
        "z": "f9aa4d8908cf3153",
        "g": "61105c945b3dbdf6",
        "name": "Night Mode",
        "topic": "",
        "addIdType": "none",
        "addId": "",
        "positionConfig": "9a5a8534.25d4d8",
        "autoTrigger": true,
        "autoTriggerTime": "60000",
        "startDelayTime": 10000,
        "contextStore": "",
        "results": [
            {
                "p": "",
                "pt": "msgTopic",
                "v": "",
                "vt": "topic"
            },
            {
                "p": "",
                "pt": "msgPayload",
                "v": "",
                "vt": "payload"
            },
            {
                "p": "timeCtrl",
                "pt": "msg",
                "v": "",
                "vt": "ctrlObj"
            }
        ],
        "overwriteExpire": "",
        "rules": [
            {
                "index": 0,
                "name": "Day",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [],
                "payload": {
                    "type": "str",
                    "value": "DAY",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000,
                    "format": ""
                },
                "topic": "",
                "importance": 0,
                "resetOverwrite": false,
                "time": {
                    "type": "entered",
                    "value": "9:05",
                    "operator": 1,
                    "operatorText": "‚Üß from",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000,
                    "days": "*",
                    "months": "*"
                },
                "description": "<div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ‚Üß from <var>9:05</var></div><div><div class=\"indent-payload-text\"><i class=\"fa fa-step-backward\" aria-hidden=\"true\"></i> <span>Payload: </span> <var>\"DAY\"</var></div></div>"
            },
            {
                "index": 1,
                "name": "NIGHT",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [],
                "payload": {
                    "type": "str",
                    "value": "NIGHT",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000,
                    "format": ""
                },
                "topic": "",
                "importance": 0,
                "resetOverwrite": false,
                "time": {
                    "type": "entered",
                    "value": "18:45",
                    "operator": 1,
                    "operatorText": "‚Üß from",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000,
                    "days": "*",
                    "months": "*"
                },
                "description": "<div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ‚Üß from <var>18:45</var></div><div><div class=\"indent-payload-text\"><i class=\"fa fa-step-backward\" aria-hidden=\"true\"></i> <span>Payload: </span> <var>\"NIGHT\"</var></div></div>",
                "timeData": 0
            }
        ],
        "payloadDefault": "NIGHT",
        "payloadDefaultType": "str",
        "payloadDefaultTimeFormat": 0,
        "payloadDefaultOffset": 0,
        "payloadDefaultOffsetType": "none",
        "payloadDefaultOffsetMultiplier": 60000,
        "x": 130,
        "y": 980,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "caaaeef37fbc1551",
        "type": "inject",
        "z": "f9aa4d8908cf3153",
        "g": "61105c945b3dbdf6",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "NIGHT",
        "payloadType": "str",
        "x": 130,
        "y": 1080,
        "wires": [
            [
                "331427707e2f11a5"
            ]
        ]
    },
    {
        "id": "a23fc24ad2c7b0c6",
        "type": "inject",
        "z": "f9aa4d8908cf3153",
        "g": "61105c945b3dbdf6",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "DAY",
        "payloadType": "str",
        "x": 130,
        "y": 1040,
        "wires": [
            [
                "331427707e2f11a5"
            ]
        ]
    },
    {
        "id": "7a6cea8d8ec0b5c8",
        "type": "inject",
        "z": "f9aa4d8908cf3153",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "OFF",
        "payloadType": "str",
        "x": 130,
        "y": 1140,
        "wires": [
            [
                "331427707e2f11a5"
            ]
        ]
    },
    {
        "id": "2f1bb20e10a28fd2",
        "type": "inject",
        "z": "f9aa4d8908cf3153",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "ON",
        "payloadType": "str",
        "x": 110,
        "y": 1180,
        "wires": [
            [
                "331427707e2f11a5"
            ]
        ]
    },
    {
        "id": "3326dc4516b02909",
        "type": "ui_switch",
        "z": "f9aa4d8908cf3153",
        "name": "",
        "label": "Christbaum",
        "tooltip": "",
        "group": "ae60322a.3a15c",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 130,
        "y": 1220,
        "wires": [
            [
                "d7f551bf6378408b",
                "f23d1cdf6918bd30"
            ]
        ]
    },
    {
        "id": "d7f551bf6378408b",
        "type": "change",
        "z": "f9aa4d8908cf3153",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "ON",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "OFF",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 330,
        "y": 1220,
        "wires": [
            [
                "6c26389b973f4567",
                "331427707e2f11a5"
            ]
        ]
    },
    {
        "id": "6c26389b973f4567",
        "type": "debug",
        "z": "f9aa4d8908cf3153",
        "name": "debug 81",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 560,
        "y": 1220,
        "wires": []
    },
    {
        "id": "f23d1cdf6918bd30",
        "type": "debug",
        "z": "f9aa4d8908cf3153",
        "name": "debug 82",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 560,
        "y": 1280,
        "wires": []
    },
    {
        "id": "932446c71fa5d2ea",
        "type": "debug",
        "z": "fd2d363b540d07e3",
        "name": "debug 12",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 160,
        "wires": []
    },
    {
        "id": "f86c70cc358a51d7",
        "type": "mqtt in",
        "z": "fd2d363b540d07e3",
        "name": "",
        "topic": "WaschmaschineTrockner/status/switch:0",
        "qos": "0",
        "datatype": "json",
        "broker": "19cf2a10.f9d4a6",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 220,
        "y": 160,
        "wires": [
            [
                "932446c71fa5d2ea",
                "3f1d8884e279b0c6",
                "793adb97f3ea1668",
                "fc74106d1efe0edb",
                "b8237608d193d01a"
            ]
        ]
    },
    {
        "id": "3f1d8884e279b0c6",
        "type": "change",
        "z": "fd2d363b540d07e3",
        "name": "APower",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "msg.payload.apower",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "APower",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 220,
        "wires": [
            [
                "318c0e2df5005b22",
                "2cd33b3990f310f3",
                "dba8c59ea0918439"
            ]
        ]
    },
    {
        "id": "318c0e2df5005b22",
        "type": "debug",
        "z": "fd2d363b540d07e3",
        "name": "APower",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 220,
        "wires": []
    },
    {
        "id": "793adb97f3ea1668",
        "type": "change",
        "z": "fd2d363b540d07e3",
        "name": "PlugTemp",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "msg.payload.temperature.tC",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "PlugTemp",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 360,
        "y": 280,
        "wires": [
            [
                "1f0287b2db1e339f",
                "2cd33b3990f310f3"
            ]
        ]
    },
    {
        "id": "1f0287b2db1e339f",
        "type": "debug",
        "z": "fd2d363b540d07e3",
        "name": "debug 14",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 580,
        "y": 280,
        "wires": []
    },
    {
        "id": "fc74106d1efe0edb",
        "type": "change",
        "z": "fd2d363b540d07e3",
        "name": "AEnergy1",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "msg.payload.aenergy.by_minute[0]",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "AEnergy1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 360,
        "y": 360,
        "wires": [
            [
                "101823c9ca9b2557",
                "2cd33b3990f310f3"
            ]
        ]
    },
    {
        "id": "101823c9ca9b2557",
        "type": "debug",
        "z": "fd2d363b540d07e3",
        "name": "debug 15",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 640,
        "y": 360,
        "wires": []
    },
    {
        "id": "b8237608d193d01a",
        "type": "change",
        "z": "fd2d363b540d07e3",
        "name": "AEnergy3",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "msg.payload.aenergy.by_minute[2]",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "AEnergy3",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 360,
        "y": 420,
        "wires": [
            [
                "8dd061fb659fa6b9",
                "2cd33b3990f310f3"
            ]
        ]
    },
    {
        "id": "8dd061fb659fa6b9",
        "type": "debug",
        "z": "fd2d363b540d07e3",
        "name": "debug 16",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 440,
        "wires": []
    },
    {
        "id": "2cd33b3990f310f3",
        "type": "function",
        "z": "fd2d363b540d07e3",
        "name": "SensorLoc switch/convert",
        "func": "var topic=msg.topic;\nvar WPower3;\nvar WPower2;\nvar WPower1;\nswitch(topic){\n    case \"APower\":\n  \n        msg.payload={\n            APower: Number(msg.payload),\n        }\n         return msg;\n    case \"PlugTemp\":\n        msg.payload={\n            PlugTemp: Number(msg.payload),\n        }\n        return msg;\n    case \"AEnergy1\":\n        msg.payload={\n            AEnergy1: Number(msg.payload),\n        }\n        return msg;\n    case \"AEnergy3\":\n        msg.payload={\n            AEnergy3: Number(msg.payload),\n        }\n        return msg;\n    case \"Status\":\n        msg.payload={\n            Status: (msg.payload),\n        }\n        return msg;\n}\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 300,
        "wires": [
            [
                "59a205b0f76d6d19",
                "1c7dd834b7f8830b"
            ]
        ]
    },
    {
        "id": "59a205b0f76d6d19",
        "type": "debug",
        "z": "fd2d363b540d07e3",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1030,
        "y": 160,
        "wires": []
    },
    {
        "id": "03ad92e3ee7c83cd",
        "type": "function",
        "z": "fd2d363b540d07e3",
        "name": "StoreLastValues",
        "func": "var topic=msg.topic;\nvar WPower3;\nvar WPower2;\nvar WPower1;\nswitch(topic){\n    case \"APower\":\n        WPower3 = flow.get(\"WPower2\", \"memoryOnly\");\n        WPower2 = flow.get(\"WPower1\", \"memoryOnly\");\n        WPower1 = Number(msg.payload);\n        flow.set(\"WPower1\", WPower1,\"memoryOnly\");\n        flow.set(\"WPower2\", WPower2,\"memoryOnly\");\n        flow.set(\"WPower3\", WPower3,\"memoryOnly\");\n        msg.payload= Number(WPower1);\n        \n         return msg;\n    \n        return msg;\n}\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\n//flow.set(\"WPower1\", 0, \"memoryOnly\");\n//flow.set(\"WPower2\", 0, \"memoryOnly\");\n//flow.set(\"WPower3\", 0, \"memoryOnly\");",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 520,
        "wires": [
            [
                "855ccb2273c8f2ed",
                "5a2811c094b67555"
            ]
        ]
    },
    {
        "id": "ece6e59aebf93242",
        "type": "inject",
        "z": "fd2d363b540d07e3",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "APower",
        "payload": "1",
        "payloadType": "str",
        "x": 260,
        "y": 500,
        "wires": [
            [
                "03ad92e3ee7c83cd"
            ]
        ]
    },
    {
        "id": "855ccb2273c8f2ed",
        "type": "debug",
        "z": "fd2d363b540d07e3",
        "name": "debug 23",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 960,
        "y": 520,
        "wires": []
    },
    {
        "id": "fc0d99079dd24f2f",
        "type": "inject",
        "z": "fd2d363b540d07e3",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "APower",
        "payload": "17.1",
        "payloadType": "str",
        "x": 270,
        "y": 620,
        "wires": [
            [
                "03ad92e3ee7c83cd"
            ]
        ]
    },
    {
        "id": "5b5bda0295541ca2",
        "type": "inject",
        "z": "fd2d363b540d07e3",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "APower",
        "payload": "65",
        "payloadType": "str",
        "x": 260,
        "y": 660,
        "wires": [
            [
                "03ad92e3ee7c83cd"
            ]
        ]
    },
    {
        "id": "d3b9cdc2e36cfa92",
        "type": "inject",
        "z": "fd2d363b540d07e3",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "APower",
        "payload": "100",
        "payloadType": "str",
        "x": 270,
        "y": 700,
        "wires": [
            [
                "03ad92e3ee7c83cd"
            ]
        ]
    },
    {
        "id": "73f64309c960fd0d",
        "type": "inject",
        "z": "fd2d363b540d07e3",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "APower",
        "payload": "1600",
        "payloadType": "str",
        "x": 270,
        "y": 860,
        "wires": [
            [
                "03ad92e3ee7c83cd"
            ]
        ]
    },
    {
        "id": "90670e4291c9afc5",
        "type": "inject",
        "z": "fd2d363b540d07e3",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "APower",
        "payload": "230",
        "payloadType": "str",
        "x": 270,
        "y": 900,
        "wires": [
            [
                "03ad92e3ee7c83cd"
            ]
        ]
    },
    {
        "id": "5a2811c094b67555",
        "type": "function",
        "z": "fd2d363b540d07e3",
        "name": "function 3",
        "func": "var WPower1 = flow.get(\"WPower1\", \"memoryOnly\");\nvar WPower2 = flow.get(\"WPower2\", \"memoryOnly\");\nvar WPower3 = flow.get(\"WPower3\", \"memoryOnly\");\nvar sStatus = flow.get(\"WStatus\",\"memoryOnly\");\nvar WOff = 0;\nvar WOn = 5;\nvar WEinsp = 35;\nvar WWash = 40;\nvar WHeiz = 1500;\nvar nSchleud;\n\n//Off On\nif((WPower1 > WOn)&& (WPower1 < WEinsp)&& (sStatus == \"OFF\") ) \n{\n    sStatus = \"ON\";\n    flow.set(\"NoSchleuder\", 0, \"memoryOnly\");\n    node.status({fill:\"green\",shape:\"ring\",text: sStatus});\n}\n//Einspuelen Spitze von 40 -50 W einige Minuten gleichm√§√üig bei ca 19 -42 W ohne T√§ler leicht stufig steigend\nif((WPower1 > WEinsp)&& (WPower1 < WWash)&& (sStatus == \"ON\") ) \n{\nsStatus = \"EINSP\";\nnode.status({fill:\"yellow\",shape:\"ring\",text: \"EINSP\"});\n}\n//Heizen und Waschen\nif((WPower1 > WHeiz) ) \n{\nsStatus = \"HEIZ\";\nnode.status({fill:\"red\",shape:\"ring\",text: \"HEIZ\"});\n}\n//Waschen Rechtecksignal mit ca 35 W unterschied 15 W bis 50 W\nif( (WPower1 > 42 )\n && (WPower1 < 150)\n && ((sStatus == \"HEIZ\")|| (sStatus == \"SCHLEUD\")|| (sStatus == \"EINSP\"))\n) \n{\nsStatus = \"WASH\";\nnode.status({fill:\"yellow\",shape:\"ring\",text: \"WASH\"});\n}\n//Schleudern\nif((WPower1 > 150 )&& (WPower1 < 700)&& (WPower1 > WPower2) && (WPower2 > WPower3) && (sStatus == \"WASH\") ) \n{\n  sStatus = \"SCHLEUD\";\n  nSchleud = flow.get(\"NoSchleuder\",\"memoryOnly\");\n  nSchleud++;\n  flow.set(\"NoSchleuder\", '1', \"memoryOnly\");\n  node.status({fill:\"yellow\",shape:\"ring\",text: \"SCHLEUD\"});\n}\n//Ende\nif(  (WPower1 < 10) && (WPower1 > 3)\n  && (WPower2 < 10) && (WPower2 >3)\n  && (WPower3 < 10) && (WPower3 >3)    \n  && ((nSchleud > 1))\n   ) \n{\nsStatus = \"ENDE\";\nnode.status({fill:\"yellow\",shape:\"ring\",text: \"ENDE\"});\n}\n//Off\nif(  (WPower1 < 3)\n  && (WPower2 < 3)\n  && (WPower3 < 3) \n  && (sStatus == \"ENDE\") ) \n{\nsStatus = \"OFF\";\nnode.status({fill:\"yellow\",shape:\"ring\",text: \"Off\"});\n}\nmsg.Status = sStatus;\nmsg.WPower1 = WPower1;\nmsg.WPower2 = WPower2;\nmsg.WPower3 = WPower3;\nflow.set(\"WStatus\", sStatus);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\nvar sStatus;\nsStatus = \"OFF\";\nnode.status({ fill: \"blue\", shape: \"ring\", text: \"OFF\" });\nflow.set(\"WStatus\", \"OFF\");",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 600,
        "wires": [
            [
                "f530481c98003bf9",
                "f05f320d3ce9dbc7",
                "d460f6c77d05fc3d",
                "7f699fbdf6c36d8b"
            ]
        ]
    },
    {
        "id": "f530481c98003bf9",
        "type": "debug",
        "z": "fd2d363b540d07e3",
        "name": "debug 24",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1080,
        "y": 600,
        "wires": []
    },
    {
        "id": "dba8c59ea0918439",
        "type": "delay",
        "z": "fd2d363b540d07e3",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "5",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 620,
        "y": 640,
        "wires": [
            [
                "03ad92e3ee7c83cd"
            ]
        ]
    },
    {
        "id": "dadd4088f685f7dc",
        "type": "change",
        "z": "fd2d363b540d07e3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "WStatus",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1100,
        "y": 1080,
        "wires": [
            []
        ]
    },
    {
        "id": "dea5d02c4eb52af9",
        "type": "inject",
        "z": "fd2d363b540d07e3",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "OFF",
        "payloadType": "str",
        "x": 830,
        "y": 1080,
        "wires": [
            [
                "dadd4088f685f7dc"
            ]
        ]
    },
    {
        "id": "e4c7fecc0e99e876",
        "type": "inject",
        "z": "fd2d363b540d07e3",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "ON",
        "payloadType": "str",
        "x": 830,
        "y": 1120,
        "wires": [
            [
                "dadd4088f685f7dc"
            ]
        ]
    },
    {
        "id": "2a8bfd075616c784",
        "type": "inject",
        "z": "fd2d363b540d07e3",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "EINSP",
        "payloadType": "str",
        "x": 830,
        "y": 1160,
        "wires": [
            [
                "dadd4088f685f7dc"
            ]
        ]
    },
    {
        "id": "8b450c87f40d73cc",
        "type": "inject",
        "z": "fd2d363b540d07e3",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "HEIZ",
        "payloadType": "str",
        "x": 830,
        "y": 1200,
        "wires": [
            [
                "dadd4088f685f7dc"
            ]
        ]
    },
    {
        "id": "9d3f0bd6d5f14d16",
        "type": "inject",
        "z": "fd2d363b540d07e3",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "WASH",
        "payloadType": "str",
        "x": 830,
        "y": 1240,
        "wires": [
            [
                "dadd4088f685f7dc"
            ]
        ]
    },
    {
        "id": "17fddb0f74c27865",
        "type": "inject",
        "z": "fd2d363b540d07e3",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "SCHLEUD",
        "payloadType": "str",
        "x": 840,
        "y": 1280,
        "wires": [
            [
                "dadd4088f685f7dc"
            ]
        ]
    },
    {
        "id": "b73a39e150473111",
        "type": "inject",
        "z": "fd2d363b540d07e3",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "ENDE",
        "payloadType": "str",
        "x": 830,
        "y": 1320,
        "wires": [
            [
                "dadd4088f685f7dc"
            ]
        ]
    },
    {
        "id": "f05f320d3ce9dbc7",
        "type": "debug",
        "z": "fd2d363b540d07e3",
        "name": "debug 25",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "Status",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1120,
        "y": 660,
        "wires": []
    },
    {
        "id": "d460f6c77d05fc3d",
        "type": "change",
        "z": "fd2d363b540d07e3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Status",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Status",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 920,
        "y": 720,
        "wires": [
            [
                "1dbe1728f75c04c7",
                "2cd33b3990f310f3",
                "6a3219e26c67a391"
            ]
        ]
    },
    {
        "id": "1dbe1728f75c04c7",
        "type": "debug",
        "z": "fd2d363b540d07e3",
        "name": "debug 26",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1120,
        "y": 720,
        "wires": []
    },
    {
        "id": "f514b5b167b26e6a",
        "type": "mqtt out",
        "z": "fd2d363b540d07e3",
        "g": "4b345f34f7b4d8e1",
        "name": "",
        "topic": "WaschmaschineTrockner/command/switch:0",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "19cf2a10.f9d4a6",
        "x": 510,
        "y": 1180,
        "wires": []
    },
    {
        "id": "464478dd6d3aaae2",
        "type": "inject",
        "z": "fd2d363b540d07e3",
        "g": "4b345f34f7b4d8e1",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "on",
        "payloadType": "str",
        "x": 230,
        "y": 1180,
        "wires": [
            [
                "f514b5b167b26e6a"
            ]
        ]
    },
    {
        "id": "3fcb2f94f630c655",
        "type": "inject",
        "z": "fd2d363b540d07e3",
        "g": "4b345f34f7b4d8e1",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "off",
        "payloadType": "str",
        "x": 230,
        "y": 1240,
        "wires": [
            [
                "f514b5b167b26e6a"
            ]
        ]
    },
    {
        "id": "79a8ec2b47652bfb",
        "type": "debug",
        "z": "fd2d363b540d07e3",
        "g": "4b345f34f7b4d8e1",
        "name": "debug 27",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 560,
        "y": 1300,
        "wires": []
    },
    {
        "id": "1620464c7201262c",
        "type": "mqtt in",
        "z": "fd2d363b540d07e3",
        "g": "4b345f34f7b4d8e1",
        "name": "",
        "topic": "WaschmaschineTrockner/status/switch:0",
        "qos": "0",
        "datatype": "json",
        "broker": "19cf2a10.f9d4a6",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 320,
        "y": 1300,
        "wires": [
            [
                "79a8ec2b47652bfb"
            ]
        ]
    },
    {
        "id": "6ce8f54ee455893c",
        "type": "inject",
        "z": "fd2d363b540d07e3",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "APower",
        "payload": "9",
        "payloadType": "num",
        "x": 260,
        "y": 580,
        "wires": [
            [
                "03ad92e3ee7c83cd"
            ]
        ]
    },
    {
        "id": "4838903a325e30ef",
        "type": "inject",
        "z": "fd2d363b540d07e3",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "APower",
        "payload": "6.3",
        "payloadType": "str",
        "x": 270,
        "y": 540,
        "wires": [
            [
                "03ad92e3ee7c83cd"
            ]
        ]
    },
    {
        "id": "86e61815c3d4baf4",
        "type": "inject",
        "z": "fd2d363b540d07e3",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "APower",
        "payload": "154",
        "payloadType": "str",
        "x": 270,
        "y": 760,
        "wires": [
            [
                "dba8c59ea0918439"
            ]
        ]
    },
    {
        "id": "200be19ab9be475e",
        "type": "change",
        "z": "fd2d363b540d07e3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Waschmaschine ist fertig",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 840,
        "y": 840,
        "wires": [
            [
                "d1a66b4f01d850d1"
            ]
        ]
    },
    {
        "id": "923e4b6fe50325b5",
        "type": "function",
        "z": "fd2d363b540d07e3",
        "name": "Telegram convert",
        "func": "var text;\ntext = msg.payload;\nreturn { payload: { chatId: -4054485106, type: 'message', content: text } };",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "// Code added here will be run once\n",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 900,
        "wires": [
            [
                "34627ac120b1ba83",
                "472946796ea5d996"
            ]
        ]
    },
    {
        "id": "6a3219e26c67a391",
        "type": "switch",
        "z": "fd2d363b540d07e3",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "ENDE",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 670,
        "y": 840,
        "wires": [
            [
                "200be19ab9be475e"
            ]
        ]
    },
    {
        "id": "d1a66b4f01d850d1",
        "type": "delay",
        "z": "fd2d363b540d07e3",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "5",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 1060,
        "y": 840,
        "wires": [
            [
                "923e4b6fe50325b5"
            ]
        ]
    },
    {
        "id": "472946796ea5d996",
        "type": "debug",
        "z": "fd2d363b540d07e3",
        "name": "debug 29",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 880,
        "y": 980,
        "wires": []
    },
    {
        "id": "1c7dd834b7f8830b",
        "type": "influxdb out",
        "z": "fd2d363b540d07e3",
        "influxdb": "e3f4c3e8.b52ee",
        "name": "WaschmTrockner",
        "measurement": "WaschmTrockner",
        "precision": "",
        "retentionPolicy": "two_month",
        "database": "",
        "retentionPolicyV18Flux": "",
        "org": "",
        "bucket": "",
        "x": 1030,
        "y": 80,
        "wires": []
    },
    {
        "id": "34627ac120b1ba83",
        "type": "telegram sender",
        "z": "fd2d363b540d07e3",
        "name": "TelegramSend",
        "bot": "79ccd59a.7479ec",
        "haserroroutput": true,
        "outputs": 2,
        "x": 880,
        "y": 900,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "7f699fbdf6c36d8b",
        "type": "function",
        "z": "fd2d363b540d07e3",
        "name": "History to DB",
        "func": "var WPower1 = flow.get(\"WPower1\", \"memoryOnly\");\nvar WPower2 = flow.get(\"WPower2\", \"memoryOnly\");\nvar WPower3 = flow.get(\"WPower3\", \"memoryOnly\");\nmsg.payload={\n            Power1: Number(WPower1),\n            Power2: Number(WPower2),\n            Power3: Number(WPower3)\n        }\n        return msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 340,
        "wires": [
            [
                "28115d885de4692b",
                "1c7dd834b7f8830b"
            ]
        ]
    },
    {
        "id": "28115d885de4692b",
        "type": "debug",
        "z": "fd2d363b540d07e3",
        "name": "debug 48",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1140,
        "y": 340,
        "wires": []
    },
    {
        "id": "4dd95472.f323ec",
        "type": "debug",
        "z": "8c0dc70a.3a1008",
        "name": "Sp√ºlmaschine",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 580,
        "y": 60,
        "wires": []
    },
    {
        "id": "e4dabaed.0bac08",
        "type": "inject",
        "z": "8c0dc70a.3a1008",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 170,
        "y": 60,
        "wires": [
            [
                "4419e545f249d53e"
            ]
        ]
    },
    {
        "id": "ec60b9ae.61c308",
        "type": "debug",
        "z": "8c0dc70a.3a1008",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 620,
        "y": 560,
        "wires": []
    },
    {
        "id": "b621889a.7a8198",
        "type": "inject",
        "z": "8c0dc70a.3a1008",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 620,
        "wires": [
            [
                "be3398e9.139348"
            ]
        ]
    },
    {
        "id": "ddee4222.dcb21",
        "type": "inject",
        "z": "8c0dc70a.3a1008",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 90,
        "y": 400,
        "wires": [
            [
                "6693313c.9b041"
            ]
        ]
    },
    {
        "id": "e6457d9b.d82c8",
        "type": "inject",
        "z": "8c0dc70a.3a1008",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 640,
        "y": 640,
        "wires": [
            [
                "faf66282a34732fa"
            ]
        ]
    },
    {
        "id": "1dee6c7f.98aac4",
        "type": "debug",
        "z": "8c0dc70a.3a1008",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 740,
        "y": 760,
        "wires": []
    },
    {
        "id": "e1ffda1f.f1e228",
        "type": "debug",
        "z": "8c0dc70a.3a1008",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 760,
        "y": 840,
        "wires": []
    },
    {
        "id": "9742d791.e68298",
        "type": "inject",
        "z": "8c0dc70a.3a1008",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 410,
        "y": 820,
        "wires": [
            [
                "733737d6.42bfc8"
            ]
        ]
    },
    {
        "id": "733737d6.42bfc8",
        "type": "new-samsung-tv-isalive",
        "z": "8c0dc70a.3a1008",
        "ip": "192.168.178.32",
        "name": "",
        "x": 550,
        "y": 760,
        "wires": [
            [
                "1dee6c7f.98aac4"
            ],
            [
                "e1ffda1f.f1e228"
            ]
        ]
    },
    {
        "id": "6693313c.9b041",
        "type": "samsung-tv-send",
        "z": "8c0dc70a.3a1008",
        "device": "d3280bd.1460df8",
        "name": "",
        "key": "KEY_VOLUP",
        "x": 250,
        "y": 440,
        "wires": [
            [
                "49cd22bdebdef7b9"
            ]
        ]
    },
    {
        "id": "be3398e9.139348",
        "type": "samsung-tv-token",
        "z": "8c0dc70a.3a1008",
        "device": "d3280bd.1460df8",
        "name": "Samsung Fernseher",
        "x": 310,
        "y": 540,
        "wires": [
            [
                "ec60b9ae.61c308"
            ]
        ]
    },
    {
        "id": "4419e545f249d53e",
        "type": "home-connect-request",
        "z": "8c0dc70a.3a1008",
        "auth": "fd0259eef2520d3a",
        "name": " NodeRed Tom2",
        "tag": "programs",
        "operationId": "get_selected_program",
        "haid": "011010386568004449",
        "body": "",
        "optionkey": "",
        "programkey": "",
        "settingkey": "",
        "commandkey": "",
        "statuskey": "",
        "imagekey": "",
        "x": 360,
        "y": 60,
        "wires": [
            [
                "4dd95472.f323ec"
            ]
        ]
    },
    {
        "id": "709325df680d84e5",
        "type": "home-connect-event",
        "z": "8c0dc70a.3a1008",
        "d": true,
        "auth": "fd0259eef2520d3a",
        "name": "",
        "haid": "011010386568004449",
        "x": 130,
        "y": 260,
        "wires": [
            [
                "fd97fd149b0e42c3",
                "11ad241b29d34aa7",
                "b5fdd1b17767d308",
                "c8800fa32cf16ddc"
            ]
        ]
    },
    {
        "id": "fd97fd149b0e42c3",
        "type": "debug",
        "z": "8c0dc70a.3a1008",
        "name": "debug 31",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 360,
        "y": 220,
        "wires": []
    },
    {
        "id": "6434aa4aa8985f4e",
        "type": "samsung-tv-token",
        "z": "8c0dc70a.3a1008",
        "device": "d3280bd.1460df8",
        "name": "",
        "x": 430,
        "y": 900,
        "wires": [
            [
                "31c3cf85422d6066"
            ]
        ]
    },
    {
        "id": "31c3cf85422d6066",
        "type": "debug",
        "z": "8c0dc70a.3a1008",
        "name": "debug 32",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 640,
        "y": 900,
        "wires": []
    },
    {
        "id": "4a0c2a7177433a51",
        "type": "inject",
        "z": "8c0dc70a.3a1008",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Token",
        "payloadType": "str",
        "x": 190,
        "y": 900,
        "wires": [
            [
                "6434aa4aa8985f4e"
            ]
        ]
    },
    {
        "id": "49cd22bdebdef7b9",
        "type": "debug",
        "z": "8c0dc70a.3a1008",
        "name": "debug 33",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 540,
        "y": 500,
        "wires": []
    },
    {
        "id": "40a4783d6cdc6dc1",
        "type": "samsung-tv-sendchannel",
        "z": "8c0dc70a.3a1008",
        "device": "d3280bd.1460df8",
        "name": "",
        "keys": "009",
        "x": 650,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "df7717b3db25aaef",
        "type": "samsung-tv-send",
        "z": "8c0dc70a.3a1008",
        "device": "d3280bd.1460df8",
        "name": "",
        "key": "KEY_TV",
        "x": 380,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "a4dbc01cb9dd2049",
        "type": "inject",
        "z": "8c0dc70a.3a1008",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 220,
        "y": 680,
        "wires": [
            [
                "df7717b3db25aaef"
            ]
        ]
    },
    {
        "id": "235ae01f15ef415a",
        "type": "inject",
        "z": "8c0dc70a.3a1008",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 460,
        "y": 680,
        "wires": [
            [
                "40a4783d6cdc6dc1"
            ]
        ]
    },
    {
        "id": "faf66282a34732fa",
        "type": "samsung-tv-openapp",
        "z": "8c0dc70a.3a1008",
        "device": "d3280bd.1460df8",
        "name": "",
        "appid": "3201512006785",
        "x": 860,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "c4d56a6d9f4244cc",
        "type": "debug",
        "z": "8c0dc70a.3a1008",
        "name": "debug 34",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 640,
        "y": 940,
        "wires": []
    },
    {
        "id": "54c4d9ddc82c615e",
        "type": "samsung-tv-getapps",
        "z": "8c0dc70a.3a1008",
        "device": "d3280bd.1460df8",
        "name": "",
        "x": 420,
        "y": 940,
        "wires": [
            [
                "c4d56a6d9f4244cc"
            ]
        ]
    },
    {
        "id": "d6ce42afd9cf0167",
        "type": "inject",
        "z": "8c0dc70a.3a1008",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 940,
        "wires": [
            [
                "54c4d9ddc82c615e"
            ]
        ]
    },
    {
        "id": "11ad241b29d34aa7",
        "type": "debug",
        "z": "8c0dc70a.3a1008",
        "name": "debug 36",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload.value",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 360,
        "y": 140,
        "wires": []
    },
    {
        "id": "b5fdd1b17767d308",
        "type": "debug",
        "z": "8c0dc70a.3a1008",
        "name": "debug 37",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload.key",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 360,
        "y": 180,
        "wires": []
    },
    {
        "id": "c8800fa32cf16ddc",
        "type": "switch",
        "z": "8c0dc70a.3a1008",
        "name": "Remaining Time",
        "property": "payload.key",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "BSH.Common.Option.RemainingProgramTime",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 460,
        "y": 260,
        "wires": [
            [
                "fad4823531c9344d"
            ]
        ]
    },
    {
        "id": "fad4823531c9344d",
        "type": "change",
        "z": "8c0dc70a.3a1008",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.value",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 660,
        "y": 260,
        "wires": [
            [
                "22855ceef6d88513",
                "7cf77139865f634b"
            ]
        ]
    },
    {
        "id": "22855ceef6d88513",
        "type": "debug",
        "z": "8c0dc70a.3a1008",
        "name": "debug 38",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 800,
        "y": 200,
        "wires": []
    },
    {
        "id": "b4fdfd3b2452cc74",
        "type": "debug",
        "z": "8c0dc70a.3a1008",
        "name": "debug 39",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1040,
        "y": 260,
        "wires": []
    },
    {
        "id": "7cf77139865f634b",
        "type": "function",
        "z": "8c0dc70a.3a1008",
        "name": "to hours minutes",
        "func": "// Assuming input is in milliseconds and stored in msg.payload.time\nvar seconds = msg.payload;\n\n// Calculate hours and minutes\nvar hours = Math.floor(seconds / 3600);\nvar minutes = Math.floor((seconds % 3600) / 60);\n\n// Create formatted time object\nmsg.formattedTime = {\n    hours: hours,\n    minutes: minutes\n};\n\n// Optionally, create a formatted time string\nmsg.formattedTimeString = hours + 'h ' + minutes + 'm';\n\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 260,
        "wires": [
            [
                "b4fdfd3b2452cc74"
            ]
        ]
    },
    {
        "id": "9579ffbb.2b15d",
        "type": "mqtt in",
        "z": "b85baf22.3cc35",
        "name": "Lightning",
        "topic": "sensors/+",
        "qos": "0",
        "datatype": "auto",
        "broker": "19cf2a10.f9d4a6",
        "inputs": 0,
        "x": 160,
        "y": 140,
        "wires": [
            [
                "e0aff261.64836",
                "62736dfc.b3d2f4"
            ]
        ]
    },
    {
        "id": "e0aff261.64836",
        "type": "debug",
        "z": "b85baf22.3cc35",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 480,
        "y": 140,
        "wires": []
    },
    {
        "id": "e691064e.2845e8",
        "type": "debug",
        "z": "b85baf22.3cc35",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload.energy",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 790,
        "y": 360,
        "wires": []
    },
    {
        "id": "62736dfc.b3d2f4",
        "type": "json",
        "z": "b85baf22.3cc35",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 520,
        "y": 460,
        "wires": [
            [
                "e691064e.2845e8",
                "c4c24f29.e1186",
                "693e04ee.1819cc",
                "31962824.976f98"
            ]
        ]
    },
    {
        "id": "693e04ee.1819cc",
        "type": "debug",
        "z": "b85baf22.3cc35",
        "name": "LightningDistance",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload.distance",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 790,
        "y": 460,
        "wires": []
    },
    {
        "id": "c4c24f29.e1186",
        "type": "influxdb out",
        "z": "b85baf22.3cc35",
        "influxdb": "e3f4c3e8.b52ee",
        "name": "Lightning Energy",
        "measurement": "LightningEnergy",
        "precision": "",
        "retentionPolicy": "two_month",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 800,
        "y": 200,
        "wires": []
    },
    {
        "id": "31962824.976f98",
        "type": "influxdb out",
        "z": "b85baf22.3cc35",
        "influxdb": "e3f4c3e8.b52ee",
        "name": "LightningDistance",
        "measurement": " distance",
        "precision": "",
        "retentionPolicy": "two_month",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 820,
        "y": 280,
        "wires": []
    },
    {
        "id": "76fa1ec9.8c37",
        "type": "inject",
        "z": "8be0833b.6c16c",
        "name": "",
        "props": [
            {
                "p": "payload",
                "v": "OFF",
                "vt": "str"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "string"
            }
        ],
        "repeat": "",
        "crontab": "00 22 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "OFF",
        "payloadType": "str",
        "x": 430,
        "y": 340,
        "wires": [
            [
                "4e172ef6.80b7a"
            ]
        ]
    },
    {
        "id": "4e172ef6.80b7a",
        "type": "mqtt out",
        "z": "8be0833b.6c16c",
        "name": "",
        "topic": "cmnd/TASMOTA/Power",
        "qos": "1",
        "retain": "",
        "broker": "19cf2a10.f9d4a6",
        "x": 690,
        "y": 260,
        "wires": []
    },
    {
        "id": "3d7a200b.f09e8",
        "type": "mqtt in",
        "z": "8be0833b.6c16c",
        "name": "",
        "topic": "stat/TASMOTA/+",
        "qos": "1",
        "datatype": "utf8",
        "broker": "19cf2a10.f9d4a6",
        "inputs": 0,
        "x": 140,
        "y": 220,
        "wires": [
            [
                "18fef629.91877a"
            ]
        ]
    },
    {
        "id": "11a74cc.a9950b3",
        "type": "inject",
        "z": "8be0833b.6c16c",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "ON",
        "payloadType": "str",
        "x": 430,
        "y": 380,
        "wires": [
            [
                "4e172ef6.80b7a"
            ]
        ]
    },
    {
        "id": "80382034.4d80c",
        "type": "debug",
        "z": "8be0833b.6c16c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 720,
        "y": 180,
        "wires": []
    },
    {
        "id": "18fef629.91877a",
        "type": "debug",
        "z": "8be0833b.6c16c",
        "name": "SONOFF Status",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 240,
        "y": 120,
        "wires": []
    },
    {
        "id": "5865d674.dadeb8",
        "type": "mqtt out",
        "z": "8be0833b.6c16c",
        "name": "",
        "topic": "cmnd/SONOFF4/Power",
        "qos": "",
        "retain": "",
        "broker": "19cf2a10.f9d4a6",
        "x": 1310,
        "y": 80,
        "wires": []
    },
    {
        "id": "a98d4b21.7cfc38",
        "type": "inject",
        "z": "8be0833b.6c16c",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "ON",
        "payloadType": "str",
        "x": 940,
        "y": 100,
        "wires": [
            [
                "5865d674.dadeb8"
            ]
        ]
    },
    {
        "id": "4725486.e4595b8",
        "type": "debug",
        "z": "8be0833b.6c16c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1300,
        "y": 240,
        "wires": []
    },
    {
        "id": "115785e4.3acc0a",
        "type": "inject",
        "z": "8be0833b.6c16c",
        "name": "",
        "repeat": "",
        "crontab": "00 22 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "OFF",
        "payloadType": "str",
        "x": 940,
        "y": 160,
        "wires": [
            [
                "5865d674.dadeb8"
            ]
        ]
    },
    {
        "id": "5fa52f71.0833d",
        "type": "mqtt in",
        "z": "8be0833b.6c16c",
        "name": "",
        "topic": "stat/SONOFF3/+",
        "qos": "1",
        "datatype": "utf8",
        "broker": "19cf2a10.f9d4a6",
        "inputs": 0,
        "x": 950,
        "y": 260,
        "wires": [
            [
                "4725486.e4595b8"
            ]
        ]
    },
    {
        "id": "5cf70042.c9b67",
        "type": "inject",
        "z": "8be0833b.6c16c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 540,
        "wires": [
            [
                "2f940302.f6ad4c"
            ]
        ]
    },
    {
        "id": "2f940302.f6ad4c",
        "type": "function",
        "z": "8be0833b.6c16c",
        "name": "Telegram convert",
        "func": "var text;\ntext = msg.payload;\nreturn { payload: { chatId: 2039054265, type: 'message', content: text } };",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n",
        "finalize": "",
        "x": 320,
        "y": 540,
        "wires": [
            [
                "9b7b1203.be72e"
            ]
        ]
    },
    {
        "id": "63551cf5.287644",
        "type": "mqtt in",
        "z": "8be0833b.6c16c",
        "name": "Miband button1",
        "topic": "Miband/Button1",
        "qos": "2",
        "datatype": "utf8",
        "broker": "19cf2a10.f9d4a6",
        "inputs": 0,
        "x": 130,
        "y": 620,
        "wires": [
            [
                "37480822.fe66c8"
            ]
        ]
    },
    {
        "id": "37480822.fe66c8",
        "type": "debug",
        "z": "8be0833b.6c16c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 380,
        "y": 660,
        "wires": []
    },
    {
        "id": "f8060574.ed10e8",
        "type": "mqtt in",
        "z": "8be0833b.6c16c",
        "name": "Sleep",
        "topic": "Miband/Sleep",
        "qos": "0",
        "datatype": "utf8",
        "broker": "19cf2a10.f9d4a6",
        "inputs": 0,
        "x": 120,
        "y": 720,
        "wires": [
            [
                "6943c0b8.3cb08"
            ]
        ]
    },
    {
        "id": "6943c0b8.3cb08",
        "type": "debug",
        "z": "8be0833b.6c16c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 360,
        "y": 760,
        "wires": []
    },
    {
        "id": "9bb47e18.c404",
        "type": "clock-timer",
        "z": "8be0833b.6c16c",
        "name": "",
        "topic": "",
        "positionConfig": "9a5a8534.25d4d8",
        "autoTrigger": true,
        "autoTriggerTime": "7200000",
        "startDelayTime": "0",
        "overwriteExpire": "",
        "rules": [
            {
                "index": 0,
                "name": "Abend Schiff Lampe an",
                "isValid": false,
                "valid": {},
                "timeValue": "sunsetStart",
                "timeType": "pdsTime",
                "timeOp": 1,
                "timeOpText": "‚Üß von",
                "offsetValue": "",
                "offsetType": "none",
                "multiplier": 3600000,
                "timeDays": "*",
                "timeMonths": "*",
                "timeOnlyEvenDays": false,
                "timeOnlyOddDays": false,
                "timeDateStart": "",
                "timeDateEnd": "",
                "timeMinValue": "",
                "timeMinType": "none",
                "offsetMinValue": "",
                "offsetMinType": "none",
                "multiplierMin": 60000,
                "timeMaxValue": "",
                "timeMaxType": "none",
                "offsetMaxValue": "",
                "offsetMaxType": "none",
                "multiplierMax": 60000,
                "payloadValue": "ON",
                "payloadType": "str",
                "payloadOffsetValue": "",
                "payloadOffsetType": "none",
                "payloadOffsetMultiplier": 3600000,
                "payloadFormat": 99,
                "topic": "",
                "importance": 0,
                "validOperandAValue": "",
                "validOperandAType": "none",
                "validOperator": "true",
                "validOperatorText": "ist true",
                "validOperandBValue": "",
                "validOperandBType": "num",
                "valid2LogOperator": 0,
                "valid2LogOperatorText": "N/A",
                "valid2OperandAValue": "",
                "valid2OperandAType": "msg",
                "valid2Operator": "true",
                "valid2OperatorText": "ist true",
                "valid2OperandBValue": "",
                "valid2OperandBType": "num",
                "description": "<div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ‚Üß von <var>Sonnenuntergang Begin</var></div><div><div class=\"indent-payload-text\"><i class=\"fa fa-step-backward\" aria-hidden=\"true\"></i> <span>Payload:</span> <var>\"ON\"</var></div></div>",
                "timeMinOp": 0,
                "timeMaxOp": 0
            },
            {
                "index": 1,
                "name": "Off",
                "isValid": false,
                "valid": {},
                "timeValue": "22:45",
                "timeType": "entered",
                "timeOp": 1,
                "timeOpText": "‚Üß von",
                "offsetValue": "",
                "offsetType": "none",
                "multiplier": 60000,
                "timeDays": "*",
                "timeMonths": "*",
                "timeOnlyEvenDays": false,
                "timeOnlyOddDays": false,
                "timeDateStart": "",
                "timeDateEnd": "",
                "timeMinValue": "",
                "timeMinType": "none",
                "offsetMinValue": "",
                "offsetMinType": "none",
                "multiplierMin": 60000,
                "timeMaxValue": "",
                "timeMaxType": "none",
                "offsetMaxValue": "",
                "offsetMaxType": "none",
                "multiplierMax": 60000,
                "payloadValue": "OFF",
                "payloadType": "str",
                "payloadOffsetValue": "",
                "payloadOffsetType": "none",
                "payloadOffsetMultiplier": 60000,
                "payloadFormat": 99,
                "topic": "",
                "importance": 0,
                "validOperandAValue": "",
                "validOperandAType": "none",
                "validOperator": "true",
                "validOperatorText": "ist true",
                "validOperandBValue": "",
                "validOperandBType": "num",
                "valid2LogOperator": 0,
                "valid2LogOperatorText": "N/A",
                "valid2OperandAValue": "",
                "valid2OperandAType": "msg",
                "valid2Operator": "true",
                "valid2OperatorText": "ist true",
                "valid2OperandBValue": "",
                "valid2OperandBType": "num",
                "description": "<div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ‚Üß von <var>22:45</var></div><div><div class=\"indent-payload-text\"><i class=\"fa fa-step-backward\" aria-hidden=\"true\"></i> <span>Payload:</span> <var>\"OFF\"</var></div></div>",
                "timeMinOp": 0,
                "timeMaxOp": 0
            }
        ],
        "payloadDefault": "",
        "payloadDefaultType": "none",
        "payloadDefaultTimeFormat": 0,
        "payloadDefaultOffset": 0,
        "payloadDefaultOffsetType": "none",
        "payloadDefaultOffsetMultiplier": 60000,
        "x": 420,
        "y": 160,
        "wires": [
            [
                "4e172ef6.80b7a"
            ],
            [
                "80382034.4d80c"
            ]
        ]
    },
    {
        "id": "9b7b1203.be72e",
        "type": "telegram sender",
        "z": "8be0833b.6c16c",
        "name": "TelegramSend",
        "bot": "79ccd59a.7479ec",
        "haserroroutput": false,
        "outputs": 1,
        "x": 520,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "da1c393d.f23878",
        "type": "function",
        "z": "1d446fc4.18a0d",
        "name": "",
        "func": "if(msg.payload == \"on\"){\n return [ msg,null];\n}\n\nif(msg.payload == \"off\"){\n return [null, msg];\n}\n",
        "outputs": 2,
        "noerr": 0,
        "x": 470,
        "y": 400,
        "wires": [
            [
                "c47174b1.6aafb8"
            ],
            [
                "fd9629ce.9331c8"
            ]
        ]
    },
    {
        "id": "72e2bf78.32c2f",
        "type": "inject",
        "z": "1d446fc4.18a0d",
        "name": "TV OFF",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "off",
        "payloadType": "str",
        "x": 510,
        "y": 340,
        "wires": [
            [
                "da1c393d.f23878"
            ]
        ]
    },
    {
        "id": "31b4cbf9.213984",
        "type": "inject",
        "z": "1d446fc4.18a0d",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 640,
        "y": 500,
        "wires": [
            [
                "fd9629ce.9331c8"
            ]
        ]
    },
    {
        "id": "b5c4ccb4.68aef",
        "type": "inject",
        "z": "1d446fc4.18a0d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 200,
        "wires": [
            [
                "54335120.fd63a"
            ]
        ]
    },
    {
        "id": "8f2949e8.868d18",
        "type": "change",
        "z": "1d446fc4.18a0d",
        "name": "Full Light",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "SSS",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "a3233a67.d08488",
        "type": "change",
        "z": "1d446fc4.18a0d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "SS",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "eeb2454.b98ccb8",
        "type": "debug",
        "z": "1d446fc4.18a0d",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 460,
        "y": 660,
        "wires": []
    },
    {
        "id": "80005140.337ba",
        "type": "debug",
        "z": "1d446fc4.18a0d",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 410,
        "y": 520,
        "wires": []
    },
    {
        "id": "61a158d3.55b2d8",
        "type": "debug",
        "z": "1d446fc4.18a0d",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 560,
        "y": 700,
        "wires": []
    },
    {
        "id": "f0650407.a1cc08",
        "type": "inject",
        "z": "1d446fc4.18a0d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "token",
        "payloadType": "str",
        "x": 160,
        "y": 660,
        "wires": [
            [
                "3d351ae2.a23b96"
            ]
        ]
    },
    {
        "id": "a4e9e49c.6377c8",
        "type": "inject",
        "z": "1d446fc4.18a0d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 820,
        "wires": [
            [
                "15f4f9aa.c1b956"
            ]
        ]
    },
    {
        "id": "15f4f9aa.c1b956",
        "type": "samsung-tv-send",
        "z": "1d446fc4.18a0d",
        "device": "d3280bd.1460df8",
        "name": "",
        "key": "KEY_VOLUP",
        "x": 390,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "9d6bf743.48cb28",
        "type": "samsung-tv-isalive",
        "z": "1d446fc4.18a0d",
        "device": "d3280bd.1460df8",
        "name": "",
        "x": 160,
        "y": 520,
        "wires": [
            [
                "a3233a67.d08488",
                "80005140.337ba"
            ],
            [
                "8f2949e8.868d18",
                "eeb2454.b98ccb8"
            ]
        ]
    },
    {
        "id": "fd9629ce.9331c8",
        "type": "samsung-tv-isaliveping",
        "z": "1d446fc4.18a0d",
        "device": "d3280bd.1460df8",
        "name": "",
        "x": 740,
        "y": 400,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "3d351ae2.a23b96",
        "type": "samsung-tv-token",
        "z": "1d446fc4.18a0d",
        "device": "d3280bd.1460df8",
        "name": "",
        "x": 320,
        "y": 700,
        "wires": [
            [
                "61a158d3.55b2d8"
            ]
        ]
    },
    {
        "id": "c47174b1.6aafb8",
        "type": "samsung-tv-turnon",
        "z": "1d446fc4.18a0d",
        "device": "d3280bd.1460df8",
        "name": "",
        "x": 780,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "54335120.fd63a",
        "type": "ui_button",
        "z": "1d446fc4.18a0d",
        "name": "",
        "group": "67365e98.aacf3",
        "order": 11,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Bit TV OFF!",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "off",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 330,
        "y": 340,
        "wires": [
            [
                "da1c393d.f23878"
            ]
        ]
    },
    {
        "id": "58ba9882.718fe8",
        "type": "ui_switch",
        "z": "1d446fc4.18a0d",
        "name": "",
        "label": "Big TV",
        "tooltip": "",
        "group": "67365e98.aacf3",
        "order": 9,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "topicType": "str",
        "style": "",
        "onvalue": "on",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "off",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "x": 190,
        "y": 360,
        "wires": [
            [
                "da1c393d.f23878"
            ]
        ]
    },
    {
        "id": "7392e4cb.75c2fc",
        "type": "inject",
        "z": "d9d529d7.01c778",
        "name": "Urlaub",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 140,
        "y": 140,
        "wires": [
            [
                "fe410c6e.33637"
            ]
        ]
    },
    {
        "id": "d5f2f2cf.282d1",
        "type": "change",
        "z": "d9d529d7.01c778",
        "name": "SetGlobal OnHoliday",
        "rules": [
            {
                "t": "set",
                "p": "OnHoliday",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "OnHoliday",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "ff2c5bca.879ec8",
        "type": "inject",
        "z": "d9d529d7.01c778",
        "name": "Zuhause",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "false",
        "payloadType": "bool",
        "x": 140,
        "y": 200,
        "wires": [
            [
                "fe410c6e.33637"
            ]
        ]
    },
    {
        "id": "fe410c6e.33637",
        "type": "ui_switch",
        "z": "d9d529d7.01c778",
        "name": "",
        "label": "Zuhause",
        "tooltip": "",
        "group": "8e157408.1ce3a8",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "false",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "true",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 130,
        "y": 280,
        "wires": [
            [
                "d5f2f2cf.282d1"
            ]
        ],
        "icon": "font-awesome/fa-home"
    },
    {
        "id": "efbec2a02a61b637",
        "type": "debug",
        "z": "286e1e1c1a02e435",
        "name": "debug 6",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 460,
        "y": 120,
        "wires": []
    },
    {
        "id": "b8b85dc9a86491cb",
        "type": "mqtt in",
        "z": "286e1e1c1a02e435",
        "name": "",
        "topic": "SchiffLampe/status/switch:0",
        "qos": "0",
        "datatype": "json",
        "broker": "19cf2a10.f9d4a6",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 200,
        "y": 120,
        "wires": [
            [
                "efbec2a02a61b637",
                "60ce8446981468a9",
                "46edf4c2be901c69",
                "69399b88f8cb29e3",
                "449e570d966957ae"
            ]
        ]
    },
    {
        "id": "60ce8446981468a9",
        "type": "change",
        "z": "286e1e1c1a02e435",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "msg.payload.apower",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 180,
        "wires": [
            [
                "fe66329bd06aa412"
            ]
        ]
    },
    {
        "id": "fe66329bd06aa412",
        "type": "debug",
        "z": "286e1e1c1a02e435",
        "name": "debug 7",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 180,
        "wires": []
    },
    {
        "id": "46edf4c2be901c69",
        "type": "change",
        "z": "286e1e1c1a02e435",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "msg.payload.temperature.tC",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 400,
        "y": 240,
        "wires": [
            [
                "3ba3b4da4c0fe31b"
            ]
        ]
    },
    {
        "id": "3ba3b4da4c0fe31b",
        "type": "debug",
        "z": "286e1e1c1a02e435",
        "name": "debug 8",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 600,
        "y": 240,
        "wires": []
    },
    {
        "id": "69399b88f8cb29e3",
        "type": "change",
        "z": "286e1e1c1a02e435",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "msg.payload.aenergy.by_minute[0]",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 400,
        "y": 320,
        "wires": [
            [
                "aa9fdbbec77a6490"
            ]
        ]
    },
    {
        "id": "aa9fdbbec77a6490",
        "type": "debug",
        "z": "286e1e1c1a02e435",
        "name": "debug 9",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 320,
        "wires": []
    },
    {
        "id": "449e570d966957ae",
        "type": "change",
        "z": "286e1e1c1a02e435",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "msg.payload.aenergy.by_minute[2]",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 400,
        "y": 380,
        "wires": [
            [
                "817f4c6014f4039b"
            ]
        ]
    },
    {
        "id": "817f4c6014f4039b",
        "type": "debug",
        "z": "286e1e1c1a02e435",
        "name": "debug 10",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 700,
        "y": 400,
        "wires": []
    },
    {
        "id": "114d28ff64217bc6",
        "type": "mqtt out",
        "z": "286e1e1c1a02e435",
        "name": "",
        "topic": "ShellyPlug1/command/switch:0",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "19cf2a10.f9d4a6",
        "x": 390,
        "y": 520,
        "wires": []
    },
    {
        "id": "eca0a6e67c8d078f",
        "type": "inject",
        "z": "286e1e1c1a02e435",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "on",
        "payloadType": "str",
        "x": 150,
        "y": 520,
        "wires": [
            [
                "114d28ff64217bc6"
            ]
        ]
    },
    {
        "id": "92188728aed1a467",
        "type": "inject",
        "z": "286e1e1c1a02e435",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "off",
        "payloadType": "str",
        "x": 130,
        "y": 580,
        "wires": [
            [
                "114d28ff64217bc6"
            ]
        ]
    }
]