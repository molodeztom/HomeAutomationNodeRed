[
    {
        "id": "6f61cfd3.3d721",
        "type": "tab",
        "label": "HomeAutomation Measurements",
        "disabled": false,
        "info": "Receive MQTT messages from sensors through HomeServer and mosquitto on raspberry.\nEach SensorStation has several subtopics for the individual sensor measurements such as temp, humi. \nWhen homeserver founds a measurement erroneous it will send a 1 on topic ERR for that SensorStation.\nThe outgoing MQTT node controls the RemoteDisplay station. It can recieve measurements and will display it (currently fixed to temp and humi)\n\nVersionen:\n20200418    V1.1: geht soweit beginne Umstellung auf Switch in Function statt lauter MQTT Knoten\n"
    },
    {
        "id": "8be0833b.6c16c",
        "type": "tab",
        "label": "HOME",
        "disabled": false,
        "info": ""
    },
    {
        "id": "511989b1.670cc8",
        "type": "tab",
        "label": "printer",
        "disabled": false,
        "info": ""
    },
    {
        "id": "9963931.9232c7",
        "type": "tab",
        "label": "Power Measurement",
        "disabled": false,
        "info": ""
    },
    {
        "id": "b83af794.4bec68",
        "type": "group",
        "z": "9963931.9232c7",
        "name": "Total Hours Counter",
        "style": {
            "label": true,
            "stroke": "#92d04f",
            "fill": "#7fb7df",
            "color": "#ffff00"
        },
        "nodes": [
            "3073af6c.b8faf",
            "eb3968c3.bb5428",
            "da1d5372.6280b",
            "c84605f2.fc07b8",
            "98f49115.c6a88",
            "2464e0ea.8854",
            "aeeace25.46d86",
            "76c727f9.1bd188",
            "4e87f92e.0671f8",
            "48c974e1.caa28c",
            "6c3ad4d5.7c797c",
            "b2c4112c.bc82e",
            "5eb17b01.40f1d4",
            "2d7342af.ce708e",
            "4965a0c.3a0ac6",
            "75749182.28289",
            "3b155418.9a8f0c",
            "6f4763e9.e5576c",
            "532bc566.df7b1c"
        ],
        "x": 14,
        "y": 199
    },
    {
        "id": "7d3411b0.20fc7",
        "type": "group",
        "z": "9963931.9232c7",
        "name": "Power Measurement to Database",
        "style": {
            "stroke": "#ff3f3f",
            "fill": "#ffC000",
            "label": true
        },
        "nodes": [
            "c1e7e0f.1a2202",
            "3a6c508.ebe3cb",
            "f571eda1.7d3f5",
            "1a1c6586.ce182a",
            "2a103049.f6a29"
        ],
        "x": 14,
        "y": 39
    },
    {
        "id": "5d7bb23e.6c04ec",
        "type": "group",
        "z": "6f61cfd3.3d721",
        "name": "Heating Valve Control",
        "style": {
            "label": true,
            "fill": "#c8e7a7"
        },
        "nodes": [
            "17a551f9.bcd59e",
            "da2b6e45.21a05",
            "3c962617.c2f8da",
            "19222942.f62117",
            "7b6ccd29.970414",
            "20ca1b0c.9a8c24",
            "a4e3b9e2.4783a8",
            "a01343a.a42a9c",
            "8583dd1c.64052",
            "97b9ac13.ca45c",
            "cb6213d.83258f",
            "130dd598.a91e6a"
        ],
        "x": 14,
        "y": 619,
        "w": 472,
        "h": 502
    },
    {
        "id": "584f76f1.996908",
        "type": "group",
        "z": "6f61cfd3.3d721",
        "name": "Measurement Sensor to DB",
        "style": {
            "stroke": "#3f93cf",
            "fill": "#bfbfbf",
            "label": true
        },
        "nodes": [
            "15f6ffc8.eb6d3",
            "481f575d.658e08",
            "d3718c58.f498a",
            "74b1862d.2f15f8",
            "3b080467.ae49dc",
            "89c4be7a.d8218",
            "d47fd123.52af2",
            "3baa2ffa.c917b",
            "1029799b.c92736",
            "e35d7f54.4ad1f",
            "c026e49e.be0588",
            "6a1827c1.d350e8",
            "13346bce.a3e684",
            "9dbc98b8.8f08b8",
            "d0849bc.1c43168",
            "10bda896.f1d857",
            "eced108b.5f3cd",
            "95b11563.82c788",
            "e414ce6.6f20c3",
            "7a71ee5f.b5c6f"
        ],
        "x": 14,
        "y": 19,
        "w": 1012,
        "h": 423
    },
    {
        "id": "2f27dc68.9ff574",
        "type": "group",
        "z": "6f61cfd3.3d721",
        "name": "Remote Display",
        "style": {
            "stroke": "#ffff3f",
            "fill": "#ffffbf",
            "label": true
        },
        "nodes": [
            "49e2646f.c4941c",
            "3fcd6f25.e487c",
            "ea688e79.cf481",
            "64c76441.d5f36c"
        ],
        "x": 14,
        "y": 459,
        "w": 432,
        "h": 142
    },
    {
        "id": "5c041b39.d836b4",
        "type": "group",
        "z": "511989b1.670cc8",
        "name": "Printer Measurement",
        "style": {
            "label": true,
            "fill": "#dbcbe7"
        },
        "nodes": [
            "818d3c6f.201f2",
            "4b0bda4e.1a1664",
            "d702897a.1cfcf8",
            "966ae8fb.a98fd8",
            "c6ec2928.710c18",
            "1824c144.dfb4ef",
            "d754d650.2a8f18",
            "76804725.6ac1f8",
            "5da76156.34c3f",
            "8c67a965.134088",
            "1a54d5c9.3e5b9a",
            "6b77f023.4e575",
            "63b53cab.0746d4",
            "1b6c236f.f67d4d",
            "7b1463f8.f8e4cc",
            "c4532342.dddc2",
            "ff6b7215.93de5",
            "1dea714a.68511f"
        ],
        "x": 14,
        "y": 19
    },
    {
        "id": "18ca9346.bdbedd",
        "type": "group",
        "z": "511989b1.670cc8",
        "name": "Timer and Output",
        "style": {
            "stroke": "#ffdf7f",
            "fill": "#ffefbf",
            "label": true
        },
        "nodes": [
            "31b9404d.230c",
            "9bea78c2.290f98",
            "f46b4697.85a528",
            "ab040656.4d62c8",
            "c963b96.8ceb748",
            "29e1d371.ff155c",
            "15937479.cc992c",
            "47ac10c5.af1f3",
            "823d7203.adc6f",
            "c85e3aa6.8a06d8",
            "a781db69.92e528",
            "3b6104fe.71eecc",
            "f065d912.8cec88",
            "c60a1a40.b2a698",
            "87cac91c.8f1ba8",
            "339b0b7.0a49bf4",
            "c0b2e11c.f580f",
            "8224f7c3.a845f8",
            "19c8b5c0.3dcaca",
            "1ffa44ec.2f584b",
            "acfc89f6.5dc368",
            "550eb938.78f938",
            "54087a9f.9d1c24",
            "f665e232.83018",
            "6e793f78.19688"
        ],
        "x": 24,
        "y": 536.5
    },
    {
        "id": "73d12632.94b388",
        "type": "group",
        "z": "6f61cfd3.3d721",
        "name": "Heating Measurement",
        "style": {
            "stroke": "#9363b7",
            "fill": "#dbcbe7",
            "label": true
        },
        "nodes": [
            "3bb0fb40.e717e4",
            "c772a959.162c98",
            "d5959449.a47808",
            "ecec7acf.215678"
        ],
        "x": 454,
        "y": 459,
        "w": 572,
        "h": 122
    },
    {
        "id": "19cf2a10.f9d4a6",
        "type": "mqtt-broker",
        "z": "",
        "name": "",
        "broker": "mosquitto",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": true,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": ""
    },
    {
        "id": "e3f4c3e8.b52ee",
        "type": "influxdb",
        "z": "",
        "hostname": "influxdb",
        "port": "8086",
        "protocol": "http",
        "database": "HomeAutomation",
        "name": "HomeAutomation",
        "usetls": false,
        "tls": ""
    },
    {
        "id": "9a5a8534.25d4d8",
        "type": "position-config",
        "z": "",
        "name": "HOME",
        "isValide": "true",
        "longitude": "0",
        "latitude": "0",
        "angleType": "deg",
        "timeZoneOffset": 99,
        "timeZoneDST": 0,
        "stateTimeFormat": "3",
        "stateDateFormat": "12"
    },
    {
        "id": "7f110bbf.a6e474",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "49e2646f.c4941c",
        "type": "mqtt out",
        "z": "6f61cfd3.3d721",
        "g": "2f27dc68.9ff574",
        "name": "",
        "topic": "Thermo",
        "qos": "",
        "retain": "",
        "broker": "19cf2a10.f9d4a6",
        "x": 360,
        "y": 560,
        "wires": []
    },
    {
        "id": "15f6ffc8.eb6d3",
        "type": "influxdb out",
        "z": "6f61cfd3.3d721",
        "g": "584f76f1.996908",
        "influxdb": "e3f4c3e8.b52ee",
        "name": "SensorLoc HomAut",
        "measurement": "SensorLoc",
        "precision": "",
        "retentionPolicy": "two_hours",
        "x": 670,
        "y": 60,
        "wires": []
    },
    {
        "id": "481f575d.658e08",
        "type": "mqtt in",
        "z": "6f61cfd3.3d721",
        "g": "584f76f1.996908",
        "name": "",
        "topic": "SensorLoc/+",
        "qos": "0",
        "datatype": "auto",
        "broker": "19cf2a10.f9d4a6",
        "x": 110,
        "y": 61,
        "wires": [
            [
                "6a1827c1.d350e8",
                "e414ce6.6f20c3"
            ]
        ]
    },
    {
        "id": "d3718c58.f498a",
        "type": "mqtt in",
        "z": "6f61cfd3.3d721",
        "g": "584f76f1.996908",
        "name": "",
        "topic": "Sensor1/+",
        "qos": "0",
        "datatype": "auto",
        "broker": "19cf2a10.f9d4a6",
        "x": 100,
        "y": 121,
        "wires": [
            [
                "c026e49e.be0588"
            ]
        ]
    },
    {
        "id": "3fcd6f25.e487c",
        "type": "mqtt in",
        "z": "6f61cfd3.3d721",
        "g": "2f27dc68.9ff574",
        "name": "",
        "topic": "Sensor1/fHumi",
        "qos": "0",
        "datatype": "auto",
        "broker": "19cf2a10.f9d4a6",
        "x": 120,
        "y": 500,
        "wires": [
            [
                "64c76441.d5f36c"
            ]
        ]
    },
    {
        "id": "ea688e79.cf481",
        "type": "mqtt in",
        "z": "6f61cfd3.3d721",
        "g": "2f27dc68.9ff574",
        "name": "",
        "topic": "Sensor1/fTempA",
        "qos": "0",
        "datatype": "auto",
        "broker": "19cf2a10.f9d4a6",
        "x": 120,
        "y": 560,
        "wires": [
            [
                "49e2646f.c4941c"
            ]
        ]
    },
    {
        "id": "74b1862d.2f15f8",
        "type": "mqtt in",
        "z": "6f61cfd3.3d721",
        "g": "584f76f1.996908",
        "name": "",
        "topic": "Sensor2/+",
        "qos": "0",
        "datatype": "auto",
        "broker": "19cf2a10.f9d4a6",
        "x": 100,
        "y": 181,
        "wires": [
            [
                "e35d7f54.4ad1f"
            ]
        ]
    },
    {
        "id": "3b080467.ae49dc",
        "type": "influxdb out",
        "z": "6f61cfd3.3d721",
        "g": "584f76f1.996908",
        "influxdb": "e3f4c3e8.b52ee",
        "name": "sSens1 HomAut",
        "measurement": "sSens1",
        "precision": "",
        "retentionPolicy": "two_hours",
        "x": 660,
        "y": 121,
        "wires": []
    },
    {
        "id": "89c4be7a.d8218",
        "type": "influxdb out",
        "z": "6f61cfd3.3d721",
        "g": "584f76f1.996908",
        "influxdb": "e3f4c3e8.b52ee",
        "name": "sSens2 HomAut",
        "measurement": "sSens2",
        "precision": "",
        "retentionPolicy": "two_hours",
        "x": 660,
        "y": 181,
        "wires": []
    },
    {
        "id": "d47fd123.52af2",
        "type": "influxdb out",
        "z": "6f61cfd3.3d721",
        "g": "584f76f1.996908",
        "influxdb": "e3f4c3e8.b52ee",
        "name": "sSens3 HomeAut",
        "measurement": "sSens3",
        "precision": "",
        "retentionPolicy": "two_hours",
        "x": 670,
        "y": 241,
        "wires": []
    },
    {
        "id": "64c76441.d5f36c",
        "type": "mqtt out",
        "z": "6f61cfd3.3d721",
        "g": "2f27dc68.9ff574",
        "name": "",
        "topic": "Humi",
        "qos": "0",
        "retain": "",
        "broker": "19cf2a10.f9d4a6",
        "x": 350,
        "y": 500,
        "wires": []
    },
    {
        "id": "3baa2ffa.c917b",
        "type": "mqtt in",
        "z": "6f61cfd3.3d721",
        "g": "584f76f1.996908",
        "name": "",
        "topic": "Sensor3/+",
        "qos": "0",
        "datatype": "auto",
        "broker": "19cf2a10.f9d4a6",
        "x": 100,
        "y": 241,
        "wires": [
            [
                "1029799b.c92736"
            ]
        ]
    },
    {
        "id": "1029799b.c92736",
        "type": "function",
        "z": "6f61cfd3.3d721",
        "g": "584f76f1.996908",
        "name": "Sensor3 switch/convert",
        "func": "var topic=msg.topic;\nswitch(topic){\n    case \"Sensor3/fTempA\":\n        msg.payload={\n            fTempA: Number(msg.payload),\n        }\n        \n        return msg;\n    case \"Sensor3/fVolt\":\n        msg.payload={\n            fVolt: Number(msg.payload),\n        }\n        return msg;\n    case \"Sensor3/Err\":\n        msg.payload={\n            Err: Number(msg.payload),\n        }\n        return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 350,
        "y": 241,
        "wires": [
            [
                "d47fd123.52af2"
            ]
        ],
        "info": "Switch je nach Topic \nund dann in Number wandeln "
    },
    {
        "id": "e35d7f54.4ad1f",
        "type": "function",
        "z": "6f61cfd3.3d721",
        "g": "584f76f1.996908",
        "name": "Sensor2 switch/convert",
        "func": "var topic=msg.topic;\nswitch(topic){\n    case \"Sensor2/fTempA\":\n        msg.payload={\n            fTempA: Number(msg.payload),\n        }\n        \n        return msg;\n    case \"Sensor2/fTempB\":\n        msg.payload={\n            fTempB: Number(msg.payload),\n        }\n        return msg;\n    case \"Sensor2/fVolt\":\n        msg.payload={\n            fVolt: Number(msg.payload),\n        }\n        return msg;\n    case \"Sensor2/Err\":\n        msg.payload={\n            Err: Number(msg.payload),\n        }\n        return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 350,
        "y": 181,
        "wires": [
            [
                "89c4be7a.d8218"
            ]
        ]
    },
    {
        "id": "c026e49e.be0588",
        "type": "function",
        "z": "6f61cfd3.3d721",
        "g": "584f76f1.996908",
        "name": "Sensor1 switch/convert",
        "func": "var topic=msg.topic;\nswitch(topic){\n    case \"Sensor1/fTempA\":\n        msg.payload={\n            fTempA: Number(msg.payload),\n        }\n        \n        return msg;\n    case \"Sensor1/fTempB\":\n        msg.payload={\n            fTempB: Number(msg.payload),\n        }\n        \n        return msg;\n    case \"Sensor1/fHumi\":\n        msg.payload={\n            fHumi: Number(msg.payload),\n        }\n        return msg;\n    case \"Sensor1/fVolt\":\n        msg.payload={\n            fVolt: Number(msg.payload),\n        }\n        return msg;\n    case \"Sensor1/Err\":\n        msg.payload={\n            Err: Number(msg.payload),\n        }\n        return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 350,
        "y": 121,
        "wires": [
            [
                "3b080467.ae49dc",
                "7a71ee5f.b5c6f"
            ]
        ]
    },
    {
        "id": "6a1827c1.d350e8",
        "type": "function",
        "z": "6f61cfd3.3d721",
        "g": "584f76f1.996908",
        "name": "SensorLoc switch/convert",
        "func": "var topic=msg.topic;\nswitch(topic){\n    case \"SensorLoc/fTempA\":\n        msg.payload={\n            fTempA: Number(msg.payload),\n        }\n         return msg;\n    case \"SensorLoc/fHumi\":\n        msg.payload={\n            fHumi: Number(msg.payload),\n        }\n        return msg;\n    case \"SensorLoc/iLight\":\n        msg.payload={\n            iLight: Number(msg.payload),\n        }\n        return msg;\n    case \"SensorLoc/fAtmo\":\n        msg.payload={\n            fAtmo: Number(msg.payload),\n        }\n        return msg;\n    case \"SensorLoc/Err\":\n        msg.payload={\n            Err: Number(msg.payload),\n        }\n        return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 350,
        "y": 61,
        "wires": [
            [
                "15f6ffc8.eb6d3"
            ]
        ]
    },
    {
        "id": "7a71ee5f.b5c6f",
        "type": "influxdb out",
        "z": "6f61cfd3.3d721",
        "g": "584f76f1.996908",
        "influxdb": "e3f4c3e8.b52ee",
        "name": "Sens1 TempA Reference",
        "measurement": "sSens1",
        "precision": "",
        "retentionPolicy": "",
        "x": 890,
        "y": 120,
        "wires": []
    },
    {
        "id": "13346bce.a3e684",
        "type": "mqtt in",
        "z": "6f61cfd3.3d721",
        "g": "584f76f1.996908",
        "name": "",
        "topic": "Sensor4/+",
        "qos": "0",
        "datatype": "auto",
        "broker": "19cf2a10.f9d4a6",
        "x": 100,
        "y": 321,
        "wires": [
            [
                "9dbc98b8.8f08b8"
            ]
        ]
    },
    {
        "id": "9dbc98b8.8f08b8",
        "type": "function",
        "z": "6f61cfd3.3d721",
        "g": "584f76f1.996908",
        "name": "Sensor4 switch/conver",
        "func": "var topic=msg.topic;\nswitch(topic){\n    case \"Sensor4/fTempA\":\n        msg.payload={\n            fTempA: Number(msg.payload),\n        }\n        \n        return msg;\n    case \"Sensor4/fVolt\":\n        msg.payload={\n            fVolt: Number(msg.payload),\n        }\n        return msg;\n    case \"Sensor4/Err\":\n        msg.payload={\n            Err: Number(msg.payload),\n        }\n        return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 340,
        "y": 321,
        "wires": [
            []
        ]
    },
    {
        "id": "17a551f9.bcd59e",
        "type": "mqtt out",
        "z": "6f61cfd3.3d721",
        "g": "5d7bb23e.6c04ec",
        "name": "",
        "topic": "ValveControl/SetPos",
        "qos": "0",
        "retain": "",
        "broker": "19cf2a10.f9d4a6",
        "x": 340,
        "y": 660,
        "wires": []
    },
    {
        "id": "da2b6e45.21a05",
        "type": "inject",
        "z": "6f61cfd3.3d721",
        "g": "5d7bb23e.6c04ec",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "4",
        "payloadType": "num",
        "x": 120,
        "y": 900,
        "wires": [
            [
                "17a551f9.bcd59e"
            ]
        ]
    },
    {
        "id": "3c962617.c2f8da",
        "type": "inject",
        "z": "6f61cfd3.3d721",
        "g": "5d7bb23e.6c04ec",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "5",
        "payloadType": "num",
        "x": 120,
        "y": 960,
        "wires": [
            [
                "17a551f9.bcd59e"
            ]
        ]
    },
    {
        "id": "19222942.f62117",
        "type": "inject",
        "z": "6f61cfd3.3d721",
        "g": "5d7bb23e.6c04ec",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "3",
        "payloadType": "num",
        "x": 120,
        "y": 840,
        "wires": [
            [
                "17a551f9.bcd59e"
            ]
        ]
    },
    {
        "id": "7b6ccd29.970414",
        "type": "inject",
        "z": "6f61cfd3.3d721",
        "g": "5d7bb23e.6c04ec",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "ValvPos",
        "payload": "0",
        "payloadType": "str",
        "x": 130,
        "y": 660,
        "wires": [
            [
                "17a551f9.bcd59e"
            ]
        ]
    },
    {
        "id": "20ca1b0c.9a8c24",
        "type": "inject",
        "z": "6f61cfd3.3d721",
        "g": "5d7bb23e.6c04ec",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "2",
        "payloadType": "num",
        "x": 120,
        "y": 780,
        "wires": [
            [
                "17a551f9.bcd59e"
            ]
        ]
    },
    {
        "id": "a4e3b9e2.4783a8",
        "type": "inject",
        "z": "6f61cfd3.3d721",
        "g": "5d7bb23e.6c04ec",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 120,
        "y": 720,
        "wires": [
            [
                "17a551f9.bcd59e"
            ]
        ]
    },
    {
        "id": "d0849bc.1c43168",
        "type": "debug",
        "z": "6f61cfd3.3d721",
        "g": "584f76f1.996908",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 321,
        "wires": []
    },
    {
        "id": "76fa1ec9.8c37",
        "type": "inject",
        "z": "8be0833b.6c16c",
        "name": "",
        "repeat": "",
        "crontab": "00 22 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "OFF",
        "payloadType": "str",
        "x": 430,
        "y": 340,
        "wires": [
            [
                "4e172ef6.80b7a"
            ]
        ]
    },
    {
        "id": "4e172ef6.80b7a",
        "type": "mqtt out",
        "z": "8be0833b.6c16c",
        "name": "",
        "topic": "cmnd/TASMOTA/Power",
        "qos": "1",
        "retain": "",
        "broker": "19cf2a10.f9d4a6",
        "x": 690,
        "y": 260,
        "wires": []
    },
    {
        "id": "3d7a200b.f09e8",
        "type": "mqtt in",
        "z": "8be0833b.6c16c",
        "name": "",
        "topic": "stat/TASMOTA/POWER",
        "qos": "1",
        "datatype": "utf8",
        "broker": "19cf2a10.f9d4a6",
        "x": 180,
        "y": 240,
        "wires": [
            [
                "18fef629.91877a"
            ]
        ]
    },
    {
        "id": "9bb47e18.c404",
        "type": "clock-timer",
        "z": "8be0833b.6c16c",
        "name": "",
        "topic": "",
        "positionConfig": "9a5a8534.25d4d8",
        "outputs": 2,
        "autoTrigger": true,
        "autoTriggerTime": "7200000",
        "startDelayTime": "0",
        "storeName": "",
        "overwriteExpire": "",
        "rules": [
            {
                "index": 0,
                "name": "Abend Schiff Lampe an",
                "isValid": false,
                "valid": {},
                "timeValue": "sunsetStart",
                "timeType": "pdsTime",
                "timeOp": 1,
                "timeOpText": "↧ von",
                "offsetValue": "",
                "offsetType": "none",
                "multiplier": 3600000,
                "timeDays": "*",
                "timeMonths": "*",
                "timeOnlyEvenDays": false,
                "timeOnlyOddDays": false,
                "timeDateStart": "",
                "timeDateEnd": "",
                "timeMinValue": "",
                "timeMinType": "none",
                "offsetMinValue": "",
                "offsetMinType": "none",
                "multiplierMin": 60000,
                "timeMaxValue": "",
                "timeMaxType": "none",
                "offsetMaxValue": "",
                "offsetMaxType": "none",
                "multiplierMax": 60000,
                "payloadValue": "ON",
                "payloadType": "str",
                "payloadOffsetValue": "",
                "payloadOffsetType": "none",
                "payloadOffsetMultiplier": 3600000,
                "payloadFormat": 99,
                "topic": "",
                "importance": 0,
                "validOperandAValue": "",
                "validOperandAType": "none",
                "validOperator": "true",
                "validOperatorText": "ist true",
                "validOperandBValue": "",
                "validOperandBType": "num",
                "valid2LogOperator": 0,
                "valid2LogOperatorText": "N/A",
                "valid2OperandAValue": "",
                "valid2OperandAType": "msg",
                "valid2Operator": "true",
                "valid2OperatorText": "ist true",
                "valid2OperandBValue": "",
                "valid2OperandBType": "num",
                "description": "<div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ↧ von <var>Sonnenuntergang Begin</var></div><div><div class=\"indent-payload-text\"><i class=\"fa fa-step-backward\" aria-hidden=\"true\"></i> <span>Payload:</span> <var>\"ON\"</var></div></div>",
                "timeMinOp": 0,
                "timeMaxOp": 0
            },
            {
                "index": 1,
                "name": "Off",
                "isValid": false,
                "valid": {},
                "timeValue": "22:45",
                "timeType": "entered",
                "timeOp": 1,
                "timeOpText": "↧ von",
                "offsetValue": "",
                "offsetType": "none",
                "multiplier": 60000,
                "timeDays": "*",
                "timeMonths": "*",
                "timeOnlyEvenDays": false,
                "timeOnlyOddDays": false,
                "timeDateStart": "",
                "timeDateEnd": "",
                "timeMinValue": "",
                "timeMinType": "none",
                "offsetMinValue": "",
                "offsetMinType": "none",
                "multiplierMin": 60000,
                "timeMaxValue": "",
                "timeMaxType": "none",
                "offsetMaxValue": "",
                "offsetMaxType": "none",
                "multiplierMax": 60000,
                "payloadValue": "OFF",
                "payloadType": "str",
                "payloadOffsetValue": "",
                "payloadOffsetType": "none",
                "payloadOffsetMultiplier": 60000,
                "payloadFormat": 99,
                "topic": "",
                "importance": 0,
                "validOperandAValue": "",
                "validOperandAType": "none",
                "validOperator": "true",
                "validOperatorText": "ist true",
                "validOperandBValue": "",
                "validOperandBType": "num",
                "valid2LogOperator": 0,
                "valid2LogOperatorText": "N/A",
                "valid2OperandAValue": "",
                "valid2OperandAType": "msg",
                "valid2Operator": "true",
                "valid2OperatorText": "ist true",
                "valid2OperandBValue": "",
                "valid2OperandBType": "num",
                "description": "<div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ↧ von <var>22:45</var></div><div><div class=\"indent-payload-text\"><i class=\"fa fa-step-backward\" aria-hidden=\"true\"></i> <span>Payload:</span> <var>\"OFF\"</var></div></div>",
                "timeMinOp": 0,
                "timeMaxOp": 0
            }
        ],
        "payloadDefault": "",
        "payloadDefaultType": "none",
        "payloadDefaultTimeFormat": 0,
        "payloadDefaultOffset": 0,
        "payloadDefaultOffsetType": "none",
        "payloadDefaultOffsetMultiplier": 60000,
        "x": 420,
        "y": 160,
        "wires": [
            [
                "4e172ef6.80b7a"
            ],
            [
                "80382034.4d80c"
            ]
        ]
    },
    {
        "id": "11a74cc.a9950b3",
        "type": "inject",
        "z": "8be0833b.6c16c",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "ON",
        "payloadType": "str",
        "x": 430,
        "y": 380,
        "wires": [
            [
                "4e172ef6.80b7a"
            ]
        ]
    },
    {
        "id": "80382034.4d80c",
        "type": "debug",
        "z": "8be0833b.6c16c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 720,
        "y": 180,
        "wires": []
    },
    {
        "id": "18fef629.91877a",
        "type": "debug",
        "z": "8be0833b.6c16c",
        "name": "SONOFF Status",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 240,
        "y": 120,
        "wires": []
    },
    {
        "id": "a6878b51.4aab48",
        "type": "mqtt in",
        "z": "8be0833b.6c16c",
        "name": "",
        "topic": "SensorLoc/iLight",
        "qos": "1",
        "datatype": "utf8",
        "broker": "19cf2a10.f9d4a6",
        "x": 160,
        "y": 460,
        "wires": [
            [
                "84bc4c5.83a4eb"
            ]
        ]
    },
    {
        "id": "84bc4c5.83a4eb",
        "type": "function",
        "z": "8be0833b.6c16c",
        "name": "",
        "func": "if (msg.payload <= 10)\nmsg.payload = \"ON\"\nelse\nmsg.payload = \"OFF\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 380,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "5865d674.dadeb8",
        "type": "mqtt out",
        "z": "8be0833b.6c16c",
        "name": "",
        "topic": "cmnd/SONOFF4/Power",
        "qos": "",
        "retain": "",
        "broker": "19cf2a10.f9d4a6",
        "x": 740,
        "y": 620,
        "wires": []
    },
    {
        "id": "a98d4b21.7cfc38",
        "type": "inject",
        "z": "8be0833b.6c16c",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "ON",
        "payloadType": "str",
        "x": 370,
        "y": 640,
        "wires": [
            [
                "5865d674.dadeb8"
            ]
        ]
    },
    {
        "id": "4725486.e4595b8",
        "type": "debug",
        "z": "8be0833b.6c16c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 730,
        "y": 780,
        "wires": []
    },
    {
        "id": "115785e4.3acc0a",
        "type": "inject",
        "z": "8be0833b.6c16c",
        "name": "",
        "repeat": "",
        "crontab": "00 22 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "OFF",
        "payloadType": "str",
        "x": 370,
        "y": 700,
        "wires": [
            [
                "5865d674.dadeb8"
            ]
        ]
    },
    {
        "id": "5fa52f71.0833d",
        "type": "mqtt in",
        "z": "8be0833b.6c16c",
        "name": "",
        "topic": "stat/SONOFF3/POWER",
        "qos": "1",
        "datatype": "utf8",
        "broker": "19cf2a10.f9d4a6",
        "x": 400,
        "y": 800,
        "wires": [
            [
                "4725486.e4595b8"
            ]
        ]
    },
    {
        "id": "818d3c6f.201f2",
        "type": "mqtt in",
        "z": "511989b1.670cc8",
        "g": "5c041b39.d836b4",
        "name": "",
        "topic": "octoprint/event/PrinterStateChanged",
        "qos": "2",
        "datatype": "json",
        "broker": "19cf2a10.f9d4a6",
        "x": 180,
        "y": 260,
        "wires": [
            [
                "4b0bda4e.1a1664",
                "76804725.6ac1f8"
            ]
        ]
    },
    {
        "id": "4b0bda4e.1a1664",
        "type": "debug",
        "z": "511989b1.670cc8",
        "g": "5c041b39.d836b4",
        "name": "progress printing",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 550,
        "y": 120,
        "wires": []
    },
    {
        "id": "d702897a.1cfcf8",
        "type": "mqtt in",
        "z": "511989b1.670cc8",
        "g": "5c041b39.d836b4",
        "name": "",
        "topic": "octoprint/progress/printing",
        "qos": "2",
        "datatype": "json",
        "broker": "19cf2a10.f9d4a6",
        "x": 150,
        "y": 120,
        "wires": [
            [
                "4b0bda4e.1a1664"
            ]
        ]
    },
    {
        "id": "966ae8fb.a98fd8",
        "type": "mqtt in",
        "z": "511989b1.670cc8",
        "g": "5c041b39.d836b4",
        "name": "",
        "topic": "octoprint/plugin/mqtt_test/pub",
        "qos": "2",
        "datatype": "auto",
        "broker": "19cf2a10.f9d4a6",
        "x": 160,
        "y": 180,
        "wires": [
            [
                "c6ec2928.710c18",
                "76804725.6ac1f8"
            ]
        ]
    },
    {
        "id": "c6ec2928.710c18",
        "type": "debug",
        "z": "511989b1.670cc8",
        "g": "5c041b39.d836b4",
        "name": "mqtt_test_pub",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 540,
        "y": 180,
        "wires": []
    },
    {
        "id": "10bda896.f1d857",
        "type": "mqtt in",
        "z": "6f61cfd3.3d721",
        "g": "584f76f1.996908",
        "name": "",
        "topic": "Sensor5/+",
        "qos": "2",
        "datatype": "auto",
        "broker": "19cf2a10.f9d4a6",
        "x": 100,
        "y": 401,
        "wires": [
            [
                "eced108b.5f3cd"
            ]
        ]
    },
    {
        "id": "eced108b.5f3cd",
        "type": "function",
        "z": "6f61cfd3.3d721",
        "g": "584f76f1.996908",
        "name": "Sensor5 switch/convert",
        "func": "var topic=msg.topic;\nswitch(topic){\n    case \"Sensor5/fTempA\":\n        msg.payload={\n            fTempA: Number(msg.payload),\n        }\n        \n        return msg;\n    case \"Sensor5/fHumi\":\n        msg.payload={\n            fHumi: Number(msg.payload),\n        }\n        return msg;\n    case \"Sensor5/fVolt\":\n        msg.payload={\n            fVolt: Number(msg.payload),\n        }\n        return msg;\n    case \"Sensor5/Err\":\n        msg.payload={\n            Err: Number(msg.payload),\n        }\n        return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 360,
        "y": 401,
        "wires": [
            [
                "95b11563.82c788",
                "d0849bc.1c43168"
            ]
        ]
    },
    {
        "id": "95b11563.82c788",
        "type": "influxdb out",
        "z": "6f61cfd3.3d721",
        "g": "584f76f1.996908",
        "influxdb": "e3f4c3e8.b52ee",
        "name": "sSens5 HomeAut",
        "measurement": "sSens5",
        "precision": "",
        "retentionPolicy": "",
        "x": 670,
        "y": 401,
        "wires": []
    },
    {
        "id": "e414ce6.6f20c3",
        "type": "debug",
        "z": "6f61cfd3.3d721",
        "g": "584f76f1.996908",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 850,
        "y": 60,
        "wires": []
    },
    {
        "id": "1824c144.dfb4ef",
        "type": "mqtt in",
        "z": "511989b1.670cc8",
        "g": "5c041b39.d836b4",
        "name": "",
        "topic": "octoprint/temperature/+",
        "qos": "2",
        "datatype": "auto",
        "broker": "19cf2a10.f9d4a6",
        "x": 140,
        "y": 320,
        "wires": [
            [
                "5da76156.34c3f"
            ]
        ]
    },
    {
        "id": "d754d650.2a8f18",
        "type": "debug",
        "z": "511989b1.670cc8",
        "g": "5c041b39.d836b4",
        "name": "PrintControlOutput",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 400,
        "wires": []
    },
    {
        "id": "76804725.6ac1f8",
        "type": "function",
        "z": "511989b1.670cc8",
        "g": "5c041b39.d836b4",
        "name": "Printer Control",
        "func": "//get message topic\n//V1.0\nvar myTopic = msg.topic;\nvar o=msg.payload;\nmsg.topic = \"PrintControl.Command\";\nvar sendmsg = false; \n\n//return topic as payload\n//store status in a variable \nvar myStatus = flow.get(\"status\");\n//((msg._event == \"PrinterStageChanged\")&& myTopic == \"octoprint/PrinterStateChanged\") && \n\nif(myStatus == \"Init\"){\n    node.status({fill:\"green\",shape:\"ring\",text: myStatus});\n}\n\n// on Cancelling go to idle to wait some time because printer will heat up anyway\nif(\n    ((o._event == \"PrinterStateChanged\") \n        && (o.state_id == \"OPERATIONAL\") \n        && ((myStatus == \"Init\") || myStatus == \"ON\")|| (myStatus == \"ERROR\")) ||\n    (msg.payload == \"test plugin startup\") \n    )\n{\n    flow.set(\"status\", \"PrinterIdle\"); //Set wait for new print job timer\n    node.status({fill:\"green\",shape:\"ring\",text: \"Idle\"});\n    sendmsg = true; \n}\n//printer printing or start print, do not react on Printing message when in status cancelling\n/* in some situations when cancel from octoprint and printer goes to Cooldown (printer hot) and then restart with new print it switches off\nif(\n    ((o._event == \"PrinterStateChanged\") &&  ((o.state_id == \"STARTING\") \n        || ((o.state_id == \"PRINTING\") && (myStatus != \"PrinterHot\")))\n    && (myStatus != \"CANCELLING\"))\n    )*/\nif(\n    ((o._event == \"PrinterStateChanged\") &&  ((o.state_id == \"STARTING\") \n        || (o.state_id == \"PRINTING\"))\n    ))\n{\n    flow.set(\"status\", \"Printing\"); //wait for print end or cancel\n        node.status({fill:\"green\",shape:\"ring\",text: \"Printing\"});\n     sendmsg = true; \n}\n\n//printer Error assume it is hot set a longer timer and then shutdown everything\nif((o._event == \"PrinterStateChanged\") \n    &&  (o.state_id == \"ERROR\"))\n{\n    flow.set(\"status\", \"ERROR\"); //set ERROR timer, try reconnect (if possible with mqtt)\n    node.status({fill:\"red\",shape:\"ring\",text: \"Error\"});\n    sendmsg = true; \n}\n\n//printer Cancelling assume it is hot set a longer timer and then shutdown everything\nif ((o._event == \"PrinterStateChanged\") && (o.state_id == \"CANCELLING\") )\n{\n    flow.set(\"status\", \"CANCELLING\"); //set ERROR timer, try reconnect (if possible with mqtt)\n    node.status({fill:\"red\",shape:\"ring\",text: \"Cancelling\"});\n     sendmsg = true; \n}\n\n//print finished  or ERROR and temperatur messages received\n\n\nif( \n    (   ((o._event == \"PrinterStateChanged\") && (o.state_id == \"FINISHING\"))\n    ||  ((myStatus == \"ERROR\") && (myTopic == \"octoprint/temperature/tool0\")) \n    ||  ((myTopic == \"PrintControl.Timer\") && (msg.payload == \"IdleTimeout\") && ((myStatus == \"PrinterIdle\") || (myStatus == \"ON\")))\n    ||  ((myTopic == \"PrintControl.Timer\") && (msg.payload == \"CancelTimer\") && ((myStatus == \"CANCELLING\")))\n    )\n    )\n{\n    flow.set(\"status\", \"PrinterHot\"); //wait for cooldown \n     node.status({fill:\"yellow\",shape:\"ring\",text: \"Wait for cooldown\"});\n    sendmsg = true; \n}\n\n\n//printer idle and hotend over temperature or after ERROR status and reconnect receive a temp value waiting for cooldown\nif (\n    (((myTopic == \"octoprint/temperature/tool0\") && (o.actual <= \"40\")) && ((myStatus == \"PrinterHot\") || (myStatus == \"ERROR\")))\n    ||((myTopic == \"PrintControl.Timer\") && (msg.payload == \"PrinterHotTimeout\"))\n){\n    flow.set(\"status\", \"PrinterCooledDown\"); //Reset ERROR timer, set wait for new print job timer\n    node.status({fill:\"yellow\",shape:\"ring\",text: \"ShutDown Octopi\"});\n    sendmsg = true; \n}\n//octoprint shut down finished\nif (\n    (msg._event == \"ClientClosed\") ||  (o._event == \"Disconnected\") ||  (o._event == \"ClientClosed\") || (msg.payload == \"eOctoprintDown\")\n    )  {\n    flow.set(\"status\", \"OctoprintDown\");\n    node.status({fill:\"red\",shape:\"ring\",text: \"Disconnected\"});\n     sendmsg = true; \n}\n\nif ((myTopic == \"stat/SONOFFI3/POWER\") && (msg.payload == \"OFF\"))\n{\n     flow.set(\"status\", \"OFF\");\n     node.status({fill:\"red\",shape:\"ring\",text: \"OFF\"});\n  \n}\n\nif ((myTopic == \"stat/SONOFFI3/POWER\") && (msg.payload == \"ON\")\n    && (myStatus != \"OctoprintDown\")\n)\n{\n     flow.set(\"status\", \"ON\");\n     node.status({fill:\"green\",shape:\"ring\",text: \"ON\"});\n     sendmsg = true;\n     \n}\n\n\nif (sendmsg == true) \n{\n        msg.payload = flow.get(\"status\");\n        sendmsg = false;\n        return msg;\n}\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is deployed.\nflow.set(\"status\", \"Init\");",
        "finalize": "",
        "x": 560,
        "y": 400,
        "wires": [
            [
                "d754d650.2a8f18",
                "c963b96.8ceb748",
                "823d7203.adc6f",
                "c60a1a40.b2a698",
                "1dea714a.68511f"
            ]
        ]
    },
    {
        "id": "31b9404d.230c",
        "type": "change",
        "z": "511989b1.670cc8",
        "g": "18ca9346.bdbedd",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "ShutdownOctopi",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 520,
        "y": 960,
        "wires": [
            [
                "9bea78c2.290f98"
            ]
        ]
    },
    {
        "id": "5da76156.34c3f",
        "type": "json",
        "z": "511989b1.670cc8",
        "g": "5c041b39.d836b4",
        "name": "Convert JSON String to Obj",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 500,
        "y": 320,
        "wires": [
            [
                "76804725.6ac1f8",
                "8c67a965.134088",
                "7b1463f8.f8e4cc"
            ]
        ]
    },
    {
        "id": "8c67a965.134088",
        "type": "debug",
        "z": "511989b1.670cc8",
        "g": "5c041b39.d836b4",
        "name": "Temperature",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 810,
        "y": 320,
        "wires": []
    },
    {
        "id": "1a54d5c9.3e5b9a",
        "type": "mqtt in",
        "z": "511989b1.670cc8",
        "g": "5c041b39.d836b4",
        "name": "",
        "topic": "stat/SONOFFI3/POWER",
        "qos": "0",
        "datatype": "utf8",
        "broker": "19cf2a10.f9d4a6",
        "x": 150,
        "y": 60,
        "wires": [
            [
                "76804725.6ac1f8"
            ]
        ]
    },
    {
        "id": "54087a9f.9d1c24",
        "type": "mqtt out",
        "z": "511989b1.670cc8",
        "g": "18ca9346.bdbedd",
        "name": "",
        "topic": "cmnd/SONOFFI3/Power",
        "qos": "1",
        "retain": "",
        "broker": "19cf2a10.f9d4a6",
        "x": 1380,
        "y": 1020,
        "wires": []
    },
    {
        "id": "6b77f023.4e575",
        "type": "inject",
        "z": "511989b1.670cc8",
        "g": "5c041b39.d836b4",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "ON",
        "payloadType": "str",
        "x": 110,
        "y": 460,
        "wires": [
            [
                "54087a9f.9d1c24"
            ]
        ]
    },
    {
        "id": "550eb938.78f938",
        "type": "mqtt out",
        "z": "511989b1.670cc8",
        "g": "18ca9346.bdbedd",
        "name": "Octoprint Shutdown",
        "topic": "octoprint/plugin/mqtt_test/sub",
        "qos": "0",
        "retain": "false",
        "broker": "19cf2a10.f9d4a6",
        "x": 1360,
        "y": 960,
        "wires": []
    },
    {
        "id": "9bea78c2.290f98",
        "type": "switch",
        "z": "511989b1.670cc8",
        "g": "18ca9346.bdbedd",
        "name": "OnOctoprintShutDownRQ",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "ShutdownOctopi",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1080,
        "y": 960,
        "wires": [
            [
                "acfc89f6.5dc368",
                "550eb938.78f938"
            ]
        ]
    },
    {
        "id": "63b53cab.0746d4",
        "type": "inject",
        "z": "511989b1.670cc8",
        "g": "5c041b39.d836b4",
        "name": "Inject some msg",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "PrintControl.Timer",
        "payload": "IdleTimeout",
        "payloadType": "str",
        "x": 140,
        "y": 400,
        "wires": [
            [
                "76804725.6ac1f8"
            ]
        ]
    },
    {
        "id": "f46b4697.85a528",
        "type": "mytimeout",
        "z": "511989b1.670cc8",
        "g": "18ca9346.bdbedd",
        "name": "Idle Delay ",
        "outtopic": "PrintControl.Timer",
        "outsafe": "on",
        "outwarning": "Warning",
        "outunsafe": "off",
        "warning": "5",
        "timer": "3000",
        "debug": false,
        "ndebug": false,
        "ignoreCase": false,
        "repeat": false,
        "again": false,
        "x": 690,
        "y": 620,
        "wires": [
            [
                "15937479.cc992c"
            ],
            []
        ]
    },
    {
        "id": "ab040656.4d62c8",
        "type": "change",
        "z": "511989b1.670cc8",
        "g": "18ca9346.bdbedd",
        "name": "On Idle or ON",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"payload\":\"on\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 510,
        "y": 580,
        "wires": [
            [
                "f46b4697.85a528"
            ]
        ]
    },
    {
        "id": "c963b96.8ceb748",
        "type": "switch",
        "z": "511989b1.670cc8",
        "g": "18ca9346.bdbedd",
        "name": "Printer Idle ON Printing Hot",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "PrinterIdle",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "ON",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Printing",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "PrinterHot",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "CANCELLING",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 5,
        "x": 190,
        "y": 600,
        "wires": [
            [
                "ab040656.4d62c8"
            ],
            [
                "ab040656.4d62c8"
            ],
            [
                "29e1d371.ff155c"
            ],
            [
                "29e1d371.ff155c"
            ],
            [
                "29e1d371.ff155c"
            ]
        ]
    },
    {
        "id": "29e1d371.ff155c",
        "type": "change",
        "z": "511989b1.670cc8",
        "g": "18ca9346.bdbedd",
        "name": "On Printing or Hot",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"payload\":\"cancel\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 500,
        "y": 620,
        "wires": [
            [
                "f46b4697.85a528"
            ]
        ]
    },
    {
        "id": "15937479.cc992c",
        "type": "change",
        "z": "511989b1.670cc8",
        "g": "18ca9346.bdbedd",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "on",
                "fromt": "str",
                "to": "",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "off",
                "fromt": "str",
                "to": "IdleTimeout",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 890,
        "y": 620,
        "wires": [
            [
                "76804725.6ac1f8"
            ]
        ]
    },
    {
        "id": "47ac10c5.af1f3",
        "type": "mytimeout",
        "z": "511989b1.670cc8",
        "g": "18ca9346.bdbedd",
        "name": "Cooldown Timeout",
        "outtopic": "PrintControl.Timer",
        "outsafe": "on",
        "outwarning": "Warning",
        "outunsafe": "off",
        "warning": "5",
        "timer": "780",
        "debug": false,
        "ndebug": false,
        "ignoreCase": false,
        "repeat": false,
        "again": false,
        "x": 720,
        "y": 700,
        "wires": [
            [
                "3b6104fe.71eecc"
            ],
            []
        ]
    },
    {
        "id": "823d7203.adc6f",
        "type": "switch",
        "z": "511989b1.670cc8",
        "g": "18ca9346.bdbedd",
        "name": "Printer Hot ON Printing Idle Cancelling",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "PrinterHot",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "ON",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Printing",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Idle",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "CANCELLING",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "PrinterCooledDown",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 6,
        "x": 200,
        "y": 720,
        "wires": [
            [
                "c85e3aa6.8a06d8",
                "1ffa44ec.2f584b"
            ],
            [
                "1ffa44ec.2f584b",
                "a781db69.92e528"
            ],
            [
                "1ffa44ec.2f584b",
                "a781db69.92e528"
            ],
            [
                "1ffa44ec.2f584b",
                "a781db69.92e528"
            ],
            [
                "8224f7c3.a845f8",
                "a781db69.92e528"
            ],
            [
                "a781db69.92e528"
            ]
        ]
    },
    {
        "id": "c85e3aa6.8a06d8",
        "type": "change",
        "z": "511989b1.670cc8",
        "g": "18ca9346.bdbedd",
        "name": "On Hot",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"payload\":\"on\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 490,
        "y": 660,
        "wires": [
            [
                "47ac10c5.af1f3"
            ]
        ]
    },
    {
        "id": "a781db69.92e528",
        "type": "change",
        "z": "511989b1.670cc8",
        "g": "18ca9346.bdbedd",
        "name": "On ON Printing Idle",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"payload\":\"cancel\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 520,
        "y": 720,
        "wires": [
            [
                "47ac10c5.af1f3"
            ]
        ]
    },
    {
        "id": "3b6104fe.71eecc",
        "type": "change",
        "z": "511989b1.670cc8",
        "g": "18ca9346.bdbedd",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "on",
                "fromt": "str",
                "to": "",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "off",
                "fromt": "str",
                "to": "PrinterHotTimeout",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 930,
        "y": 700,
        "wires": [
            [
                "76804725.6ac1f8"
            ]
        ]
    },
    {
        "id": "f065d912.8cec88",
        "type": "change",
        "z": "511989b1.670cc8",
        "g": "18ca9346.bdbedd",
        "name": "Send OFF",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "OFF",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 500,
        "y": 1020,
        "wires": [
            [
                "acfc89f6.5dc368",
                "54087a9f.9d1c24"
            ]
        ]
    },
    {
        "id": "c60a1a40.b2a698",
        "type": "switch",
        "z": "511989b1.670cc8",
        "g": "18ca9346.bdbedd",
        "name": "Printer CooledDown Octoprint Down",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "PrinterCooledDown",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "OctoprintDown",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 220,
        "y": 900,
        "wires": [
            [
                "31b9404d.230c",
                "87cac91c.8f1ba8"
            ],
            [
                "f065d912.8cec88"
            ]
        ]
    },
    {
        "id": "87cac91c.8f1ba8",
        "type": "mytimeout",
        "z": "511989b1.670cc8",
        "g": "18ca9346.bdbedd",
        "name": "Octoprint Shutdown Delay",
        "outtopic": "PrintControl.Timer",
        "outsafe": "on",
        "outwarning": "Warning",
        "outunsafe": "off",
        "warning": "0",
        "timer": "120",
        "debug": false,
        "ndebug": false,
        "ignoreCase": false,
        "repeat": false,
        "again": false,
        "x": 740,
        "y": 900,
        "wires": [
            [
                "339b0b7.0a49bf4"
            ],
            []
        ]
    },
    {
        "id": "339b0b7.0a49bf4",
        "type": "change",
        "z": "511989b1.670cc8",
        "g": "18ca9346.bdbedd",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "on",
                "fromt": "str",
                "to": "",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "off",
                "fromt": "str",
                "to": "eOctoprintDown",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1090,
        "y": 900,
        "wires": [
            [
                "76804725.6ac1f8"
            ]
        ]
    },
    {
        "id": "1b6c236f.f67d4d",
        "type": "inject",
        "z": "511989b1.670cc8",
        "g": "5c041b39.d836b4",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "eOctoprintDown",
        "payloadType": "str",
        "x": 310,
        "y": 460,
        "wires": [
            [
                "76804725.6ac1f8"
            ]
        ]
    },
    {
        "id": "c0b2e11c.f580f",
        "type": "mytimeout",
        "z": "511989b1.670cc8",
        "g": "18ca9346.bdbedd",
        "name": "Cancel Timeout",
        "outtopic": "PrintControl.Timer",
        "outsafe": "on",
        "outwarning": "Warning",
        "outunsafe": "off",
        "warning": "5",
        "timer": "360",
        "debug": false,
        "ndebug": false,
        "ignoreCase": false,
        "repeat": false,
        "again": false,
        "x": 710,
        "y": 800,
        "wires": [
            [
                "19c8b5c0.3dcaca"
            ],
            []
        ],
        "info": "Wait 90 sec in cancel the printer still may warm up.\nWe go to cooldown status when it is warmed up. "
    },
    {
        "id": "8224f7c3.a845f8",
        "type": "change",
        "z": "511989b1.670cc8",
        "g": "18ca9346.bdbedd",
        "name": "On Cancelling",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"payload\":\"on\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 490,
        "y": 800,
        "wires": [
            [
                "c0b2e11c.f580f"
            ]
        ]
    },
    {
        "id": "19c8b5c0.3dcaca",
        "type": "change",
        "z": "511989b1.670cc8",
        "g": "18ca9346.bdbedd",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "on",
                "fromt": "str",
                "to": "",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "off",
                "fromt": "str",
                "to": "CancelTimer",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 950,
        "y": 800,
        "wires": [
            [
                "76804725.6ac1f8"
            ]
        ]
    },
    {
        "id": "1ffa44ec.2f584b",
        "type": "change",
        "z": "511989b1.670cc8",
        "g": "18ca9346.bdbedd",
        "name": "On ON Printing Idle",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"payload\":\"cancel\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 500,
        "y": 840,
        "wires": [
            [
                "c0b2e11c.f580f"
            ]
        ]
    },
    {
        "id": "c1e7e0f.1a2202",
        "type": "mqtt in",
        "z": "9963931.9232c7",
        "g": "7d3411b0.20fc7",
        "name": "",
        "topic": "tele/SONOFFI3/SENSOR",
        "qos": "0",
        "datatype": "json",
        "broker": "19cf2a10.f9d4a6",
        "x": 150,
        "y": 80,
        "wires": [
            [
                "1a1c6586.ce182a"
            ]
        ]
    },
    {
        "id": "3a6c508.ebe3cb",
        "type": "debug",
        "z": "9963931.9232c7",
        "g": "7d3411b0.20fc7",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 790,
        "y": 140,
        "wires": []
    },
    {
        "id": "f571eda1.7d3f5",
        "type": "influxdb out",
        "z": "9963931.9232c7",
        "g": "7d3411b0.20fc7",
        "influxdb": "e3f4c3e8.b52ee",
        "name": "AnyI3Power",
        "measurement": "AnyI3Power",
        "precision": "",
        "retentionPolicy": "",
        "x": 790,
        "y": 80,
        "wires": []
    },
    {
        "id": "1a1c6586.ce182a",
        "type": "function",
        "z": "9963931.9232c7",
        "g": "7d3411b0.20fc7",
        "name": "Convert Tasmota Pow",
        "func": "obj = msg.payload;\nvar Total = obj[\"ENERGY\"][\"Total\"];\nvar Power = obj[\"ENERGY\"][\"Power\"];\nvar ApparentPower = obj[\"ENERGY\"][\"ApparentPower\"];\n\nmsg.payload = {\n    AnycubicTotal: Number(obj[\"ENERGY\"][\"Total\"]), \n    AnycubicPower: Number(obj[\"ENERGY\"][\"Power\"]),\n    AnycubicAppPower: Number(obj[\"ENERGY\"][\"ApparentPower\"]),\n    AnycubicVolt: Number(obj[\"ENERGY\"][\"Voltage\"]),\n    AnycubicCurrent: Number(obj[\"ENERGY\"][\"Current\"]),\n    AnycubicPowFact: Number(obj[\"ENERGY\"][\"Factor\"])\n}; \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 460,
        "y": 80,
        "wires": [
            [
                "2a103049.f6a29"
            ]
        ]
    },
    {
        "id": "2a103049.f6a29",
        "type": "switch",
        "z": "9963931.9232c7",
        "g": "7d3411b0.20fc7",
        "name": "",
        "property": "payload.AnycubicVolt",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "20",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 630,
        "y": 140,
        "wires": [
            [
                "f571eda1.7d3f5",
                "3a6c508.ebe3cb"
            ]
        ]
    },
    {
        "id": "acfc89f6.5dc368",
        "type": "debug",
        "z": "511989b1.670cc8",
        "g": "18ca9346.bdbedd",
        "name": "Sonoff OFF / Shutdown",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1370,
        "y": 820,
        "wires": []
    },
    {
        "id": "7b1463f8.f8e4cc",
        "type": "function",
        "z": "511989b1.670cc8",
        "g": "5c041b39.d836b4",
        "name": "Octoprint switch/convert",
        "func": "var topic=msg.topic;\nswitch(topic){\n    case \"octoprint/temperature/tool0\":\n        msg.payload={\n            hotendTemp: Number(msg.payload.actual),\n        }\n         return msg;\n    case \"octoprint/temperature/bed\":\n        msg.payload={\n            bedTemp: Number(msg.payload.actual),\n        }\n        return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 830,
        "y": 260,
        "wires": [
            [
                "c4532342.dddc2",
                "ff6b7215.93de5"
            ]
        ]
    },
    {
        "id": "c4532342.dddc2",
        "type": "debug",
        "z": "511989b1.670cc8",
        "g": "5c041b39.d836b4",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1080,
        "y": 220,
        "wires": []
    },
    {
        "id": "ff6b7215.93de5",
        "type": "influxdb out",
        "z": "511989b1.670cc8",
        "g": "5c041b39.d836b4",
        "influxdb": "e3f4c3e8.b52ee",
        "name": "AnyI3Temp",
        "measurement": "AnyI3Temp",
        "precision": "",
        "retentionPolicy": "",
        "x": 1090,
        "y": 280,
        "wires": []
    },
    {
        "id": "1dea714a.68511f",
        "type": "link out",
        "z": "511989b1.670cc8",
        "g": "5c041b39.d836b4",
        "name": "Printer Control",
        "links": [
            "3073af6c.b8faf"
        ],
        "x": 755,
        "y": 460,
        "wires": []
    },
    {
        "id": "3073af6c.b8faf",
        "type": "link in",
        "z": "9963931.9232c7",
        "g": "b83af794.4bec68",
        "name": "Printer Control IN",
        "links": [
            "1dea714a.68511f"
        ],
        "x": 175,
        "y": 260,
        "wires": [
            [
                "98f49115.c6a88"
            ]
        ]
    },
    {
        "id": "eb3968c3.bb5428",
        "type": "inject",
        "z": "9963931.9232c7",
        "g": "b83af794.4bec68",
        "name": "Run",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Printing",
        "payloadType": "str",
        "x": 130,
        "y": 460,
        "wires": [
            [
                "98f49115.c6a88"
            ]
        ]
    },
    {
        "id": "da1d5372.6280b",
        "type": "inject",
        "z": "9963931.9232c7",
        "g": "b83af794.4bec68",
        "name": "Stop",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "stop",
        "payloadType": "str",
        "x": 130,
        "y": 500,
        "wires": [
            [
                "98f49115.c6a88"
            ]
        ]
    },
    {
        "id": "c84605f2.fc07b8",
        "type": "inject",
        "z": "9963931.9232c7",
        "g": "b83af794.4bec68",
        "name": "ResetAll",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "reset",
        "payloadType": "str",
        "x": 140,
        "y": 300,
        "wires": [
            [
                "98f49115.c6a88"
            ]
        ]
    },
    {
        "id": "98f49115.c6a88",
        "type": "function",
        "z": "9963931.9232c7",
        "g": "b83af794.4bec68",
        "name": "TotalOperatingHours Reset",
        "func": "if (msg.payload == \"reset\") {\n     flow.set(\"nozzlecount\",0);\n    flow.set(\"heatbreakcount\",0);\n    flow.set(\"PTFECount\",0);\n    flow.set(\"MaintenanceCount\",0);\n   \n}\n\nif (msg.payload == \"resetNozzle\") {\n      flow.set(\"nozzlecount\",0);\n}\n\nif (msg.payload == \"resetHeatbreak\") {\n      flow.set(\"heatbreakcount\",0);\n}\n\nif (msg.payload == \"resetPTFE\") {\n      flow.set(\"PTFECount\",0);\n}\n\nif (msg.payload == \"resetMaintenanceCount\") {\n      flow.set(\"MaintenanceCount\",0);\n}\n\n\n\n\nif (msg.payload == \"Printing\")\n{\n    flow.set(\"status\",\"run\");\n}\nelse {\n    flow.set(\"status\",\"stop\")\n}\n",
        "outputs": 0,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is deployed.\n// Code added here will be run once\n// whenever the node is deployed.\n",
        "finalize": "",
        "x": 480,
        "y": 400,
        "wires": []
    },
    {
        "id": "2464e0ea.8854",
        "type": "inject",
        "z": "9963931.9232c7",
        "g": "b83af794.4bec68",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 130,
        "y": 560,
        "wires": [
            [
                "aeeace25.46d86"
            ]
        ]
    },
    {
        "id": "aeeace25.46d86",
        "type": "function",
        "z": "9963931.9232c7",
        "g": "b83af794.4bec68",
        "name": "TOHCounter",
        "func": "var status = flow.get(\"status\")  || \"stop\";\nvar nozzlecount  = flow.get(\"nozzlecount\");\nvar heatbreakcount  = flow.get(\"heatbreakcount\") ;\nvar PTFECount  = flow.get(\"PTFECount\") || 0;\nvar MaintenanceCount  = flow.get(\"MaintenanceCount\") || 0;\n\nvar JsonObj;\n\nif (status == \"run\"){\n    nozzlecount = nozzlecount +1;\n    heatbreakcount = heatbreakcount +1;\n    PTFECount = PTFECount +1;\n    MaintenanceCount = MaintenanceCount +1;\n}\n\nflow.set(\"nozzlecount\",nozzlecount);\nflow.set(\"heatbreakcount\",heatbreakcount);\nflow.set(\"PTFECount\",PTFECount);\nflow.set(\"MaintenanceCount\",MaintenanceCount);\n\nmsg.mystatus = status;\n\nmsg.payload = {\n    AnycubicHNozzle: Number(nozzlecount), \n    AnycubicHHeatbreak: Number(heatbreakcount),\n    AnycubicHPTFE: Number(PTFECount),\n    AnycubicMaintenance: Number(MaintenanceCount)\n}; \nnode.status({fill:\"green\",shape:\"ring\",text: status});\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 270,
        "y": 560,
        "wires": [
            [
                "6c3ad4d5.7c797c",
                "5eb17b01.40f1d4"
            ]
        ]
    },
    {
        "id": "76c727f9.1bd188",
        "type": "inject",
        "z": "9963931.9232c7",
        "g": "b83af794.4bec68",
        "name": "Reset Nozzle",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "resetNozzle",
        "payloadType": "str",
        "x": 160,
        "y": 340,
        "wires": [
            [
                "98f49115.c6a88"
            ]
        ]
    },
    {
        "id": "4e87f92e.0671f8",
        "type": "inject",
        "z": "9963931.9232c7",
        "g": "b83af794.4bec68",
        "name": "Reset Heatbreak",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "resetHeatbreak",
        "payloadType": "str",
        "x": 170,
        "y": 380,
        "wires": [
            [
                "98f49115.c6a88"
            ]
        ]
    },
    {
        "id": "48c974e1.caa28c",
        "type": "inject",
        "z": "9963931.9232c7",
        "g": "b83af794.4bec68",
        "name": "Reset PTFE",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "resetPTFE",
        "payloadType": "str",
        "x": 150,
        "y": 420,
        "wires": [
            [
                "98f49115.c6a88"
            ]
        ]
    },
    {
        "id": "6c3ad4d5.7c797c",
        "type": "debug",
        "z": "9963931.9232c7",
        "g": "b83af794.4bec68",
        "name": "CounterDatabaseOutput",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 530,
        "y": 560,
        "wires": []
    },
    {
        "id": "b2c4112c.bc82e",
        "type": "influxdb out",
        "z": "9963931.9232c7",
        "g": "b83af794.4bec68",
        "influxdb": "e3f4c3e8.b52ee",
        "name": "AnyI3Hours",
        "measurement": "AnyI3Hours",
        "precision": "",
        "retentionPolicy": "",
        "x": 730,
        "y": 500,
        "wires": []
    },
    {
        "id": "5eb17b01.40f1d4",
        "type": "delay",
        "z": "9963931.9232c7",
        "g": "b83af794.4bec68",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "5",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "x": 520,
        "y": 500,
        "wires": [
            [
                "b2c4112c.bc82e"
            ]
        ]
    },
    {
        "id": "2d7342af.ce708e",
        "type": "comment",
        "z": "9963931.9232c7",
        "g": "b83af794.4bec68",
        "name": "Printer Total Operating Hours",
        "info": "",
        "x": 500,
        "y": 240,
        "wires": []
    },
    {
        "id": "4965a0c.3a0ac6",
        "type": "inject",
        "z": "9963931.9232c7",
        "g": "b83af794.4bec68",
        "name": "reset Maintenance",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "resetMaintenanceCount",
        "payloadType": "str",
        "x": 390,
        "y": 300,
        "wires": [
            [
                "98f49115.c6a88"
            ]
        ]
    },
    {
        "id": "3b155418.9a8f0c",
        "type": "influxdb in",
        "z": "9963931.9232c7",
        "g": "b83af794.4bec68",
        "influxdb": "e3f4c3e8.b52ee",
        "name": "Read From DB",
        "query": "select max(*) FROM autogen.AnyI3Hours",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "x": 420,
        "y": 660,
        "wires": [
            [
                "6f4763e9.e5576c",
                "532bc566.df7b1c"
            ]
        ]
    },
    {
        "id": "75749182.28289",
        "type": "inject",
        "z": "9963931.9232c7",
        "g": "b83af794.4bec68",
        "name": "Read Values From DB",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 660,
        "wires": [
            [
                "3b155418.9a8f0c"
            ]
        ]
    },
    {
        "id": "6f4763e9.e5576c",
        "type": "function",
        "z": "9963931.9232c7",
        "g": "b83af794.4bec68",
        "name": "Set Flow Values",
        "func": "    flow.set(\"nozzlecount\",msg.payload[0].max_AnycubicHNozzle);\n    flow.set(\"heatbreakcount\",msg.payload[0].max_AnycubicHHeatbreak);\n    flow.set(\"PTFECount\",msg.payload[0].max_AnycubicHPTFE);\n    flow.set(\"MaintenanceCount\",msg.payload[0].max_AnycubicMaintenance);\n   \n",
        "outputs": 0,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is deployed.\n// Code added here will be run once\n// whenever the node is deployed.\n",
        "finalize": "",
        "x": 640,
        "y": 660,
        "wires": []
    },
    {
        "id": "532bc566.df7b1c",
        "type": "debug",
        "z": "9963931.9232c7",
        "g": "b83af794.4bec68",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 620,
        "wires": []
    },
    {
        "id": "f665e232.83018",
        "type": "inject",
        "z": "511989b1.670cc8",
        "g": "18ca9346.bdbedd",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "OFF",
        "payloadType": "str",
        "x": 130,
        "y": 980,
        "wires": [
            [
                "54087a9f.9d1c24"
            ]
        ]
    },
    {
        "id": "6e793f78.19688",
        "type": "inject",
        "z": "511989b1.670cc8",
        "g": "18ca9346.bdbedd",
        "name": "Reboot",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "OFF",
        "payloadType": "str",
        "x": 130,
        "y": 940,
        "wires": [
            [
                "550eb938.78f938"
            ]
        ]
    },
    {
        "id": "c772a959.162c98",
        "type": "mqtt in",
        "z": "6f61cfd3.3d721",
        "g": "73d12632.94b388",
        "name": "",
        "topic": "ValveControl/+",
        "qos": "0",
        "datatype": "auto",
        "broker": "19cf2a10.f9d4a6",
        "x": 560,
        "y": 500,
        "wires": [
            [
                "3bb0fb40.e717e4",
                "d5959449.a47808"
            ]
        ]
    },
    {
        "id": "3bb0fb40.e717e4",
        "type": "debug",
        "z": "6f61cfd3.3d721",
        "g": "73d12632.94b388",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 540,
        "wires": []
    },
    {
        "id": "cb6213d.83258f",
        "type": "mqtt out",
        "z": "6f61cfd3.3d721",
        "g": "5d7bb23e.6c04ec",
        "name": "",
        "topic": "ValveControl/SetInt",
        "qos": "0",
        "retain": "",
        "broker": "19cf2a10.f9d4a6",
        "x": 350,
        "y": 1080,
        "wires": []
    },
    {
        "id": "97b9ac13.ca45c",
        "type": "inject",
        "z": "6f61cfd3.3d721",
        "g": "5d7bb23e.6c04ec",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "800",
        "payloadType": "num",
        "x": 110,
        "y": 1080,
        "wires": [
            [
                "cb6213d.83258f"
            ]
        ]
    },
    {
        "id": "d5959449.a47808",
        "type": "function",
        "z": "6f61cfd3.3d721",
        "g": "73d12632.94b388",
        "name": "",
        "func": "var topic=msg.topic;\nswitch(topic){\n    case \"ValveControl/TempIn\":\n        msg.payload={\n            TempIn: Number(msg.payload),\n        }\n        \n        return msg;\n    case \"ValveControl/TempOut\":\n        msg.payload={\n            TempOut: Number(msg.payload),\n        }\n        \n        return msg;\n    case \"ValveControl/ActPos\":\n        msg.payload={\n            ValveVolt: Number(msg.payload),\n        }\n        return msg;\n    case \"ValveControl/Mode\":\n        msg.payload={\n            ValveMode: Number(msg.payload),\n        }\n        return msg;\n    case \"ValveControl/Light\":\n        msg.payload={\n            WVLight: Number(msg.payload),\n        }\n        return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 760,
        "y": 500,
        "wires": [
            [
                "ecec7acf.215678"
            ]
        ]
    },
    {
        "id": "ecec7acf.215678",
        "type": "influxdb out",
        "z": "6f61cfd3.3d721",
        "g": "73d12632.94b388",
        "influxdb": "e3f4c3e8.b52ee",
        "name": "ValveControl",
        "measurement": "ValveControl",
        "precision": "",
        "retentionPolicy": "",
        "x": 930,
        "y": 500,
        "wires": []
    },
    {
        "id": "a01343a.a42a9c",
        "type": "clock-timer",
        "z": "6f61cfd3.3d721",
        "g": "5d7bb23e.6c04ec",
        "name": "Clock ",
        "topic": "ValvPos",
        "positionConfig": "9a5a8534.25d4d8",
        "outputs": 1,
        "autoTrigger": true,
        "autoTriggerTime": "120000",
        "startDelayTime": 10000,
        "storeName": "",
        "overwriteExpire": "",
        "rules": [
            {
                "index": 0,
                "name": "Früh Aufheizen",
                "isValid": false,
                "valid": {},
                "timeValue": "6:15",
                "timeType": "entered",
                "timeOp": 1,
                "timeOpText": "↧ von",
                "offsetValue": "",
                "offsetType": "none",
                "multiplier": 60000,
                "timeDays": "*",
                "timeMonths": "*",
                "timeOnlyEvenDays": false,
                "timeOnlyOddDays": false,
                "timeDateStart": "",
                "timeDateEnd": "",
                "timeMinValue": "",
                "timeMinType": "none",
                "offsetMinValue": "",
                "offsetMinType": "none",
                "multiplierMin": 60000,
                "timeMaxValue": "",
                "timeMaxType": "none",
                "offsetMaxValue": "",
                "offsetMaxType": "none",
                "multiplierMax": 60000,
                "payloadValue": "5",
                "payloadType": "str",
                "payloadOffsetValue": "",
                "payloadOffsetType": "none",
                "payloadOffsetMultiplier": 60000,
                "payloadFormat": 99,
                "topic": "",
                "importance": 0,
                "validOperandAValue": "",
                "validOperandAType": "none",
                "validOperator": "true",
                "validOperatorText": "ist true",
                "validOperandBValue": "",
                "validOperandBType": "num",
                "valid2LogOperator": 0,
                "valid2LogOperatorText": "N/A",
                "valid2OperandAValue": "",
                "valid2OperandAType": "msg",
                "valid2Operator": "true",
                "valid2OperatorText": "ist true",
                "valid2OperandBValue": "",
                "valid2OperandBType": "num",
                "description": "<div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ↧ von <var>6:15</var></div><div><div class=\"indent-payload-text\"><i class=\"fa fa-step-backward\" aria-hidden=\"true\"></i> <span>Payload:</span> <var>\"5\"</var></div></div>",
                "timeMinOp": 0,
                "timeMaxOp": 0
            },
            {
                "index": 1,
                "name": "Tag Absenkung ",
                "isValid": false,
                "valid": {},
                "timeValue": "9:30",
                "timeType": "entered",
                "timeOp": 1,
                "timeOpText": "↧ von",
                "offsetValue": "",
                "offsetType": "none",
                "multiplier": 60000,
                "timeDays": "*",
                "timeMonths": "*",
                "timeOnlyEvenDays": false,
                "timeOnlyOddDays": false,
                "timeDateStart": "",
                "timeDateEnd": "",
                "timeMinValue": "",
                "timeMinType": "none",
                "offsetMinValue": "",
                "offsetMinType": "none",
                "multiplierMin": 60000,
                "timeMaxValue": "",
                "timeMaxType": "none",
                "offsetMaxValue": "",
                "offsetMaxType": "none",
                "multiplierMax": 60000,
                "payloadValue": "2",
                "payloadType": "str",
                "payloadOffsetValue": "",
                "payloadOffsetType": "none",
                "payloadOffsetMultiplier": 60000,
                "payloadFormat": 99,
                "topic": "",
                "importance": 0,
                "validOperandAValue": "",
                "validOperandAType": "none",
                "validOperator": "true",
                "validOperatorText": "ist true",
                "validOperandBValue": "",
                "validOperandBType": "num",
                "valid2LogOperator": 0,
                "valid2LogOperatorText": "N/A",
                "valid2OperandAValue": "",
                "valid2OperandAType": "msg",
                "valid2Operator": "true",
                "valid2OperatorText": "ist true",
                "valid2OperandBValue": "",
                "valid2OperandBType": "num",
                "description": "<div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ↧ von <var>9:30</var></div><div><div class=\"indent-payload-text\"><i class=\"fa fa-step-backward\" aria-hidden=\"true\"></i> <span>Payload:</span> <var>\"2\"</var></div></div>",
                "timeMinOp": 0,
                "timeMaxOp": 0
            },
            {
                "index": 2,
                "name": "Mittag Aufheizen",
                "isValid": false,
                "valid": {},
                "timeValue": "11:30",
                "timeType": "entered",
                "timeOp": 1,
                "timeOpText": "↧ von",
                "offsetValue": "",
                "offsetType": "none",
                "multiplier": 60000,
                "timeDays": "*",
                "timeMonths": "*",
                "timeOnlyEvenDays": false,
                "timeOnlyOddDays": false,
                "timeDateStart": "",
                "timeDateEnd": "",
                "timeMinValue": "",
                "timeMinType": "none",
                "offsetMinValue": "",
                "offsetMinType": "none",
                "multiplierMin": 60000,
                "timeMaxValue": "",
                "timeMaxType": "none",
                "offsetMaxValue": "",
                "offsetMaxType": "none",
                "multiplierMax": 60000,
                "payloadValue": "5",
                "payloadType": "str",
                "payloadOffsetValue": "",
                "payloadOffsetType": "none",
                "payloadOffsetMultiplier": 60000,
                "payloadFormat": 99,
                "topic": "",
                "importance": 0,
                "validOperandAValue": "",
                "validOperandAType": "none",
                "validOperator": "true",
                "validOperatorText": "ist true",
                "validOperandBValue": "",
                "validOperandBType": "num",
                "valid2LogOperator": 0,
                "valid2LogOperatorText": "N/A",
                "valid2OperandAValue": "",
                "valid2OperandAType": "msg",
                "valid2Operator": "true",
                "valid2OperatorText": "ist true",
                "valid2OperandBValue": "",
                "valid2OperandBType": "num",
                "description": "<div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ↧ von <var>11:30</var></div><div><div class=\"indent-payload-text\"><i class=\"fa fa-step-backward\" aria-hidden=\"true\"></i> <span>Payload:</span> <var>\"5\"</var></div></div>",
                "timeMinOp": 0,
                "timeMaxOp": 0
            },
            {
                "index": 3,
                "name": "Nachmittag Absenkung",
                "isValid": false,
                "valid": {},
                "timeValue": "12:30",
                "timeType": "entered",
                "timeOp": 1,
                "timeOpText": "↧ von",
                "offsetValue": "",
                "offsetType": "none",
                "multiplier": 60000,
                "timeDays": "*",
                "timeMonths": "*",
                "timeOnlyEvenDays": false,
                "timeOnlyOddDays": false,
                "timeDateStart": "",
                "timeDateEnd": "",
                "timeMinValue": "",
                "timeMinType": "none",
                "offsetMinValue": "",
                "offsetMinType": "none",
                "multiplierMin": 60000,
                "timeMaxValue": "",
                "timeMaxType": "none",
                "offsetMaxValue": "",
                "offsetMaxType": "none",
                "multiplierMax": 60000,
                "payloadValue": "3",
                "payloadType": "str",
                "payloadOffsetValue": "",
                "payloadOffsetType": "none",
                "payloadOffsetMultiplier": 60000,
                "payloadFormat": 99,
                "topic": "",
                "importance": 0,
                "validOperandAValue": "",
                "validOperandAType": "none",
                "validOperator": "true",
                "validOperatorText": "ist true",
                "validOperandBValue": "",
                "validOperandBType": "num",
                "valid2LogOperator": 0,
                "valid2LogOperatorText": "N/A",
                "valid2OperandAValue": "",
                "valid2OperandAType": "msg",
                "valid2Operator": "true",
                "valid2OperatorText": "ist true",
                "valid2OperandBValue": "",
                "valid2OperandBType": "num",
                "description": "<div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ↧ von <var>12:30</var></div><div><div class=\"indent-payload-text\"><i class=\"fa fa-step-backward\" aria-hidden=\"true\"></i> <span>Payload:</span> <var>\"3\"</var></div></div>",
                "timeMinOp": 0,
                "timeMaxOp": 0
            },
            {
                "index": 4,
                "name": "Abend",
                "isValid": false,
                "valid": {},
                "timeValue": "16:00",
                "timeType": "entered",
                "timeOp": 1,
                "timeOpText": "↧ von",
                "offsetValue": "",
                "offsetType": "none",
                "multiplier": 60000,
                "timeDays": "*",
                "timeMonths": "*",
                "timeOnlyEvenDays": false,
                "timeOnlyOddDays": false,
                "timeDateStart": "",
                "timeDateEnd": "",
                "timeMinValue": "",
                "timeMinType": "none",
                "offsetMinValue": "",
                "offsetMinType": "none",
                "multiplierMin": 60000,
                "timeMaxValue": "",
                "timeMaxType": "none",
                "offsetMaxValue": "",
                "offsetMaxType": "none",
                "multiplierMax": 60000,
                "payloadValue": "4",
                "payloadType": "str",
                "payloadOffsetValue": "",
                "payloadOffsetType": "none",
                "payloadOffsetMultiplier": 60000,
                "payloadFormat": 99,
                "topic": "",
                "importance": 0,
                "validOperandAValue": "",
                "validOperandAType": "none",
                "validOperator": "true",
                "validOperatorText": "ist true",
                "validOperandBValue": "",
                "validOperandBType": "num",
                "valid2LogOperator": 0,
                "valid2LogOperatorText": "N/A",
                "valid2OperandAValue": "",
                "valid2OperandAType": "msg",
                "valid2Operator": "true",
                "valid2OperatorText": "ist true",
                "valid2OperandBValue": "",
                "valid2OperandBType": "num",
                "description": "<div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ↧ von <var>16:00</var></div><div><div class=\"indent-payload-text\"><i class=\"fa fa-step-backward\" aria-hidden=\"true\"></i> <span>Payload:</span> <var>\"4\"</var></div></div>",
                "timeMinOp": 0,
                "timeMaxOp": 0
            },
            {
                "index": 5,
                "name": "Spätabend Intervall",
                "isValid": false,
                "valid": {},
                "timeValue": "22:00",
                "timeType": "entered",
                "timeOp": 1,
                "timeOpText": "↧ von",
                "offsetValue": "",
                "offsetType": "none",
                "multiplier": 60000,
                "timeDays": "*",
                "timeMonths": "*",
                "timeOnlyEvenDays": false,
                "timeOnlyOddDays": false,
                "timeDateStart": "",
                "timeDateEnd": "",
                "timeMinValue": "",
                "timeMinType": "none",
                "offsetMinValue": "",
                "offsetMinType": "none",
                "multiplierMin": 60000,
                "timeMaxValue": "",
                "timeMaxType": "none",
                "offsetMaxValue": "",
                "offsetMaxType": "none",
                "multiplierMax": 60000,
                "payloadValue": "2",
                "payloadType": "str",
                "payloadOffsetValue": "",
                "payloadOffsetType": "none",
                "payloadOffsetMultiplier": 60000,
                "payloadFormat": 99,
                "topic": "",
                "importance": 0,
                "validOperandAValue": "",
                "validOperandAType": "none",
                "validOperator": "true",
                "validOperatorText": "ist true",
                "validOperandBValue": "",
                "validOperandBType": "num",
                "valid2LogOperator": 0,
                "valid2LogOperatorText": "N/A",
                "valid2OperandAValue": "",
                "valid2OperandAType": "msg",
                "valid2Operator": "true",
                "valid2OperatorText": "ist true",
                "valid2OperandBValue": "",
                "valid2OperandBType": "num",
                "description": "<div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ↧ von <var>22:00</var></div><div><div class=\"indent-payload-text\"><i class=\"fa fa-step-backward\" aria-hidden=\"true\"></i> <span>Payload:</span> <var>\"2\"</var></div></div>",
                "timeMinOp": 0,
                "timeMaxOp": 0
            },
            {
                "index": 6,
                "name": "Nachtabschaltung",
                "isValid": false,
                "valid": {},
                "timeValue": "23:30",
                "timeType": "entered",
                "timeOp": 1,
                "timeOpText": "↧ von",
                "offsetValue": "",
                "offsetType": "none",
                "multiplier": 60000,
                "timeDays": "*",
                "timeMonths": "*",
                "timeOnlyEvenDays": false,
                "timeOnlyOddDays": false,
                "timeDateStart": "",
                "timeDateEnd": "",
                "timeMinValue": "",
                "timeMinType": "none",
                "offsetMinValue": "",
                "offsetMinType": "none",
                "multiplierMin": 60000,
                "timeMaxValue": "",
                "timeMaxType": "none",
                "offsetMaxValue": "",
                "offsetMaxType": "none",
                "multiplierMax": 60000,
                "payloadValue": "0",
                "payloadType": "str",
                "payloadOffsetValue": "",
                "payloadOffsetType": "none",
                "payloadOffsetMultiplier": 60000,
                "payloadFormat": 99,
                "topic": "",
                "importance": 0,
                "validOperandAValue": "",
                "validOperandAType": "none",
                "validOperator": "true",
                "validOperatorText": "ist true",
                "validOperandBValue": "",
                "validOperandBType": "num",
                "valid2LogOperator": 0,
                "valid2LogOperatorText": "N/A",
                "valid2OperandAValue": "",
                "valid2OperandAType": "msg",
                "valid2Operator": "true",
                "valid2OperatorText": "ist true",
                "valid2OperandBValue": "",
                "valid2OperandBType": "num",
                "description": "<div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ↧ von <var>23:30</var></div><div><div class=\"indent-payload-text\"><i class=\"fa fa-step-backward\" aria-hidden=\"true\"></i> <span>Payload:</span> <var>\"0\"</var></div></div>",
                "timeMinOp": 0,
                "timeMaxOp": 0
            }
        ],
        "payloadDefault": "",
        "payloadDefaultType": "none",
        "payloadDefaultTimeFormat": 0,
        "payloadDefaultOffset": 0,
        "payloadDefaultOffsetType": "none",
        "payloadDefaultOffsetMultiplier": 60000,
        "x": 120,
        "y": 1020,
        "wires": [
            [
                "8583dd1c.64052",
                "17a551f9.bcd59e"
            ]
        ]
    },
    {
        "id": "8583dd1c.64052",
        "type": "debug",
        "z": "6f61cfd3.3d721",
        "g": "5d7bb23e.6c04ec",
        "name": "Heating Timer",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 320,
        "y": 720,
        "wires": []
    },
    {
        "id": "130dd598.a91e6a",
        "type": "comment",
        "z": "6f61cfd3.3d721",
        "g": "5d7bb23e.6c04ec",
        "name": "Intervall Stufe 1 und 2",
        "info": "Intervall für Stufe 1/2",
        "x": 360,
        "y": 1020,
        "wires": []
    }
]