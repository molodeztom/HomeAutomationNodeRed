[
    {
        "id": "8be0833b.6c16c",
        "type": "tab",
        "label": "HOME",
        "disabled": false,
        "info": ""
    },
    {
        "id": "6f61cfd3.3d721",
        "type": "tab",
        "label": "HomeAutomation Measurements",
        "disabled": false,
        "info": "Receive MQTT messages from sensors through HomeServer and mosquitto on raspberry.\nEach SensorStation has several subtopics for the individual sensor measurements such as temp, humi. \nWhen homeserver founds a measurement erroneous it will send a 1 on topic ERR for that SensorStation.\nThe outgoing MQTT node controls the RemoteDisplay station. It can recieve measurements and will display it (currently fixed to temp and humi)\n\nVersionen:\n20200418    V1.1: geht soweit beginne Umstellung auf Switch in Function statt lauter MQTT Knoten\n"
    },
    {
        "id": "265d3756.5a1d68",
        "type": "tab",
        "label": "Homematic",
        "disabled": false,
        "info": ""
    },
    {
        "id": "511989b1.670cc8",
        "type": "tab",
        "label": "printer",
        "disabled": false,
        "info": ""
    },
    {
        "id": "9963931.9232c7",
        "type": "tab",
        "label": "Power Measurement",
        "disabled": false,
        "info": ""
    },
    {
        "id": "7e5a345d.05161c",
        "type": "tab",
        "label": "Jalousien",
        "disabled": false,
        "info": ""
    },
    {
        "id": "303a8ac7.4ea1c6",
        "type": "tab",
        "label": "Wohnzimmer Beleuchtung",
        "disabled": false,
        "info": ""
    },
    {
        "id": "8c0dc70a.3a1008",
        "type": "tab",
        "label": "Sp√ºlmaschine",
        "disabled": false,
        "info": ""
    },
    {
        "id": "b85baf22.3cc35",
        "type": "tab",
        "label": "Gewittersensor",
        "disabled": false,
        "info": ""
    },
    {
        "id": "b83af794.4bec68",
        "type": "group",
        "z": "9963931.9232c7",
        "name": "Total Hours Counter",
        "style": {
            "label": true,
            "stroke": "#92d04f",
            "fill": "#7fb7df",
            "color": "#ffff00"
        },
        "nodes": [
            "3073af6c.b8faf",
            "eb3968c3.bb5428",
            "da1d5372.6280b",
            "c84605f2.fc07b8",
            "98f49115.c6a88",
            "2464e0ea.8854",
            "aeeace25.46d86",
            "76c727f9.1bd188",
            "4e87f92e.0671f8",
            "48c974e1.caa28c",
            "6c3ad4d5.7c797c",
            "b2c4112c.bc82e",
            "5eb17b01.40f1d4",
            "2d7342af.ce708e",
            "4965a0c.3a0ac6",
            "75749182.28289",
            "3b155418.9a8f0c",
            "6f4763e9.e5576c",
            "532bc566.df7b1c"
        ],
        "x": 14,
        "y": 199
    },
    {
        "id": "7d3411b0.20fc7",
        "type": "group",
        "z": "9963931.9232c7",
        "name": "Power Measurement to Database",
        "style": {
            "stroke": "#ff3f3f",
            "fill": "#ffC000",
            "label": true
        },
        "nodes": [
            "c1e7e0f.1a2202",
            "3a6c508.ebe3cb",
            "f571eda1.7d3f5",
            "1a1c6586.ce182a",
            "2a103049.f6a29"
        ],
        "x": 14,
        "y": 39
    },
    {
        "id": "5d7bb23e.6c04ec",
        "type": "group",
        "z": "6f61cfd3.3d721",
        "name": "Heating Valve Control",
        "style": {
            "label": true,
            "fill": "#c8e7a7"
        },
        "nodes": [
            "17a551f9.bcd59e",
            "da2b6e45.21a05",
            "3c962617.c2f8da",
            "19222942.f62117",
            "7b6ccd29.970414",
            "20ca1b0c.9a8c24",
            "a4e3b9e2.4783a8",
            "a01343a.a42a9c",
            "8583dd1c.64052",
            "97b9ac13.ca45c",
            "cb6213d.83258f",
            "130dd598.a91e6a",
            "3c079b7c.3bb374",
            "a0fe78c.bc5a188",
            "4f746528.3b88cc",
            "8823d2b3.3d2ab",
            "d715f111.57f18",
            "ed0d92d3.e506c",
            "6c8377f8.cdd248"
        ],
        "x": 24,
        "y": 719,
        "w": 842,
        "h": 642
    },
    {
        "id": "584f76f1.996908",
        "type": "group",
        "z": "6f61cfd3.3d721",
        "name": "Measurement Sensor to DB",
        "style": {
            "stroke": "#3f93cf",
            "fill": "#bfbfbf",
            "label": true
        },
        "nodes": [
            "15f6ffc8.eb6d3",
            "481f575d.658e08",
            "d3718c58.f498a",
            "74b1862d.2f15f8",
            "3b080467.ae49dc",
            "89c4be7a.d8218",
            "d47fd123.52af2",
            "3baa2ffa.c917b",
            "1029799b.c92736",
            "e35d7f54.4ad1f",
            "c026e49e.be0588",
            "6a1827c1.d350e8",
            "13346bce.a3e684",
            "9dbc98b8.8f08b8",
            "d0849bc.1c43168",
            "10bda896.f1d857",
            "eced108b.5f3cd",
            "95b11563.82c788",
            "e414ce6.6f20c3",
            "7a71ee5f.b5c6f",
            "3bd8ac1b.081bb4",
            "3ad0e3f6.35a08c",
            "f5d3faae.391998"
        ],
        "x": 14,
        "y": 19,
        "w": 992,
        "h": 482
    },
    {
        "id": "2f27dc68.9ff574",
        "type": "group",
        "z": "6f61cfd3.3d721",
        "name": "Remote Display",
        "style": {
            "stroke": "#ffff3f",
            "fill": "#ffffbf",
            "label": true
        },
        "nodes": [
            "49e2646f.c4941c",
            "3fcd6f25.e487c",
            "ea688e79.cf481",
            "64c76441.d5f36c"
        ],
        "x": 34,
        "y": 559,
        "w": 432,
        "h": 142
    },
    {
        "id": "5c041b39.d836b4",
        "type": "group",
        "z": "511989b1.670cc8",
        "name": "Printer Measurement",
        "style": {
            "label": true,
            "fill": "#dbcbe7"
        },
        "nodes": [
            "818d3c6f.201f2",
            "4b0bda4e.1a1664",
            "d702897a.1cfcf8",
            "966ae8fb.a98fd8",
            "c6ec2928.710c18",
            "1824c144.dfb4ef",
            "d754d650.2a8f18",
            "76804725.6ac1f8",
            "5da76156.34c3f",
            "8c67a965.134088",
            "1a54d5c9.3e5b9a",
            "6b77f023.4e575",
            "63b53cab.0746d4",
            "1b6c236f.f67d4d",
            "7b1463f8.f8e4cc",
            "c4532342.dddc2",
            "ff6b7215.93de5",
            "1dea714a.68511f",
            "a30d9009.4e13b"
        ],
        "x": 34,
        "y": -1,
        "w": 1182,
        "h": 502
    },
    {
        "id": "18ca9346.bdbedd",
        "type": "group",
        "z": "511989b1.670cc8",
        "name": "Timer and Output",
        "style": {
            "stroke": "#ffdf7f",
            "fill": "#ffefbf",
            "label": true
        },
        "nodes": [
            "31b9404d.230c",
            "9bea78c2.290f98",
            "f46b4697.85a528",
            "ab040656.4d62c8",
            "c963b96.8ceb748",
            "29e1d371.ff155c",
            "15937479.cc992c",
            "47ac10c5.af1f3",
            "823d7203.adc6f",
            "c85e3aa6.8a06d8",
            "a781db69.92e528",
            "3b6104fe.71eecc",
            "f065d912.8cec88",
            "c60a1a40.b2a698",
            "87cac91c.8f1ba8",
            "339b0b7.0a49bf4",
            "c0b2e11c.f580f",
            "8224f7c3.a845f8",
            "19c8b5c0.3dcaca",
            "1ffa44ec.2f584b",
            "acfc89f6.5dc368",
            "550eb938.78f938",
            "54087a9f.9d1c24",
            "f665e232.83018",
            "6e793f78.19688",
            "b8c299bc.8c4e18",
            "bb147727.808968",
            "997e000a.2be07"
        ],
        "x": 54,
        "y": 516.5,
        "w": 1632,
        "h": 604.5
    },
    {
        "id": "73d12632.94b388",
        "type": "group",
        "z": "6f61cfd3.3d721",
        "name": "Heating Measurement",
        "style": {
            "stroke": "#9363b7",
            "fill": "#dbcbe7",
            "label": true
        },
        "nodes": [
            "3bb0fb40.e717e4",
            "c772a959.162c98",
            "d5959449.a47808",
            "ecec7acf.215678",
            "9c8627c.7dea4d8",
            "541cf4bd.ec76dc"
        ],
        "x": 494,
        "y": 519,
        "w": 572,
        "h": 182
    },
    {
        "id": "1df9ccb1.d6a403",
        "type": "group",
        "z": "8be0833b.6c16c",
        "name": "Shelly Sample Not in Use",
        "style": {
            "label": true
        },
        "nodes": [
            "f66103f.927b7",
            "3c1d8a68.06ff96",
            "d8c78971.e612f8",
            "9a2c8050.ebe09",
            "1859d091.dd706f",
            "5622f150.ed3d8",
            "f67b9f12.7be84",
            "756412ec.ee1d2c",
            "9d2cfa3.8a5d408",
            "b33c68f6.15ed68",
            "4863a60b.b49858",
            "1048bdd7.1dd462"
        ],
        "x": 34,
        "y": 559
    },
    {
        "id": "875b7fad.bef24",
        "type": "group",
        "z": "303a8ac7.4ea1c6",
        "name": "Regalbeleuchtung",
        "style": {
            "stroke": "#3f93cf",
            "fill": "#ffff7f",
            "label": true
        },
        "nodes": [
            "cc3c23a7.cde0c",
            "6f653dba.45b264",
            "fb5cff5c.b5669",
            "ec444cf1.0f441",
            "4a72d2bb.8a626c",
            "1dc7e978.c48077",
            "b8aa167e.038cf8",
            "8d25df5c.ebd85",
            "114319b2.da6366",
            "8781afa3.b22fa"
        ],
        "x": 34,
        "y": 499
    },
    {
        "id": "1b82c7fb.e55448",
        "type": "group",
        "z": "303a8ac7.4ea1c6",
        "name": "Jalousie Zentralschalter",
        "style": {
            "stroke": "#b797cf",
            "fill": "#ffdf7f",
            "label": true,
            "color": "#001f60"
        },
        "nodes": [
            "70c7fcfe.4a18a4",
            "e5cb0df.5f800f",
            "9d5588be.cd9ff8",
            "90164b1.c8cd0b8",
            "e62cdee5.0ac4a",
            "692cb70c.99c928",
            "89de660e.32b288"
        ],
        "x": 34,
        "y": 299
    },
    {
        "id": "25c55a9c.73b9c6",
        "type": "group",
        "z": "303a8ac7.4ea1c6",
        "name": "Wohnzimmer Deckenlampe",
        "style": {
            "stroke": "#92d04f",
            "fill": "#d1d1d1",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "e093d6cc.660ef8",
            "c4729f96.429f3",
            "e698cc28.6d655",
            "f394341d.b4ebf8",
            "78b4e8db.f77fb8",
            "923ccc32.a66e2",
            "47fa255b.9cef7c",
            "d5fc8000.9e0ab"
        ],
        "x": 34,
        "y": 19
    },
    {
        "id": "b9a71c35.b8ccf",
        "type": "group",
        "z": "265d3756.5a1d68",
        "name": "Heizung Tom",
        "style": {
            "stroke": "#ff3f3f",
            "label": true,
            "color": "#001f60",
            "fill": "#bfdbef"
        },
        "nodes": [
            "b2eaa5c4.14f408",
            "e016da34.64e308",
            "65e988da.f6b958",
            "aa219fc1.1a6e2",
            "3954e69e.21d60a",
            "ae0f7157.7d2e7"
        ],
        "x": 14,
        "y": 559,
        "w": 852,
        "h": 162
    },
    {
        "id": "40936a6d.e4bc64",
        "type": "group",
        "z": "265d3756.5a1d68",
        "name": "Heizung Olga",
        "style": {
            "stroke": "#ffC000",
            "fill": "#c8e7a7",
            "label": true
        },
        "nodes": [
            "5c3137f1.b5ec18",
            "acdf657a.72a3b8",
            "130b2e36.ca9eb2",
            "f05b3b99.e44618",
            "e1622e38.47b46"
        ],
        "x": 14,
        "y": 399,
        "w": 712,
        "h": 142
    },
    {
        "id": "3644af6d.d42f6",
        "type": "group",
        "z": "265d3756.5a1d68",
        "name": "Heizung Wohnzimmer",
        "style": {
            "stroke": "#0070c0",
            "fill": "#ffff7f",
            "label": true
        },
        "nodes": [
            "9ed6a24d.c8feb",
            "8de8f997.bf7e18",
            "c12c999c.1ace08",
            "17d18fc0.b21c7",
            "5734478e.ed65c8",
            "1df28e68.76cf02",
            "c70dc234.9d2b2",
            "e6e8fe31.e3e38",
            "38d7b5c0.b2603a",
            "e38e18ad.3476f8",
            "3d0abac7.6df4e6",
            "7365b52e.c6858c",
            "529c3dd9.9b5374"
        ],
        "x": 14,
        "y": 19,
        "w": 732,
        "h": 362
    },
    {
        "id": "5e94d88a.fb01e8",
        "type": "group",
        "z": "265d3756.5a1d68",
        "name": "Bedarfsberechnung",
        "style": {
            "fill": "#ffcf3f",
            "label": true
        },
        "nodes": [
            "ddb9da78.77be18",
            "2a95bc9b.1c66a4",
            "89c04ca8.7c10c",
            "7fce1939.2cfb98",
            "f0b72f63.75383",
            "77634598.aeeb5c"
        ],
        "x": 14,
        "y": 719,
        "w": 1072,
        "h": 142
    },
    {
        "id": "bec8f6bc.d0d348",
        "type": "group",
        "z": "7e5a345d.05161c",
        "name": "Holiday Calculation",
        "style": {
            "stroke": "#ff0000",
            "fill": "#ff7f7f",
            "label": true
        },
        "nodes": [
            "f2c7f904.d08ef8",
            "6e5f1bdf.1f22e4",
            "73de636f.d668ec",
            "eb31c6ef.67a2f8"
        ],
        "x": 34,
        "y": 59,
        "w": 592,
        "h": 122
    },
    {
        "id": "35db94c.3bef86c",
        "type": "group",
        "z": "7e5a345d.05161c",
        "name": "Test Status",
        "style": {
            "label": true
        },
        "nodes": [
            "58bf6223.bb576c",
            "890df71e.b306e8",
            "fd873bd.c5447c8",
            "1de0c489.49f2fb"
        ],
        "x": 734,
        "y": 59,
        "w": 492,
        "h": 142
    },
    {
        "id": "7ce4548d.b8ed0c",
        "type": "group",
        "z": "7e5a345d.05161c",
        "name": "Rollo Tom",
        "style": {
            "stroke": "#3f5787",
            "fill": "#c8e7a7",
            "fill-opacity": "0.76",
            "label": true
        },
        "nodes": [
            "66335075.9471e",
            "b9f43bc.ca86bc8",
            "833077af.3ad7e8",
            "92d65e6b.520fb",
            "efee2e6a.18bbf",
            "29e92fc.65284d",
            "bc21088d.1042d8"
        ],
        "x": 54,
        "y": 2799,
        "w": 852,
        "h": 282
    },
    {
        "id": "c1953c38.acea1",
        "type": "group",
        "z": "7e5a345d.05161c",
        "name": "Rollo Olga",
        "style": {
            "stroke": "#92d04f",
            "fill": "#ffefbf",
            "label": true
        },
        "nodes": [
            "9541504a.3de58",
            "5f48bf54.11e1a",
            "115b1c5e.ab26e4",
            "fbe2336b.e78ca",
            "e9f25740.8e0928",
            "7fb09d6a.3d4694",
            "5f0f2d7a.f23d34"
        ],
        "x": 54,
        "y": 2499,
        "w": 852,
        "h": 262
    },
    {
        "id": "19cf2a10.f9d4a6",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.178.53/",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": true,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": ""
    },
    {
        "id": "e3f4c3e8.b52ee",
        "type": "influxdb",
        "hostname": "influxdb",
        "port": "8086",
        "protocol": "http",
        "database": "HomeAutomation",
        "name": "HomeAutomation",
        "usetls": false,
        "tls": "",
        "influxdbVersion": "1.x"
    },
    {
        "id": "9a5a8534.25d4d8",
        "type": "position-config",
        "name": "HOME",
        "isValide": "true",
        "longitude": "0",
        "latitude": "0",
        "angleType": "deg",
        "timeZoneOffset": "99",
        "timeZoneDST": "0",
        "stateTimeFormat": "3",
        "stateDateFormat": "12"
    },
    {
        "id": "7f110bbf.a6e474",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "3778d06e.5d445",
        "type": "home-connect-auth",
        "name": "HomeConnectAuth",
        "simulation_mode": false,
        "scope": "Settings",
        "callback_url": "http://192.168.178.53:1880/homeconnect/auth/callback"
    },
    {
        "id": "b735724.619b39",
        "type": "ui_tab",
        "name": "Rollosteuerung",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "8e157408.1ce3a8",
        "type": "ui_group",
        "name": "Wetter",
        "tab": "b735724.619b39",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "5b512b5d.99aec4",
        "type": "ui_group",
        "name": "Heizung",
        "tab": "b735724.619b39",
        "order": 2,
        "disp": true,
        "width": "7",
        "collapse": false
    },
    {
        "id": "d3280bd.1460df8",
        "type": "samsung-tv",
        "name": "Samsung TV",
        "model": "8002",
        "ip": "192.168.178.32",
        "mac": "5C:49:7D:52:36:8A",
        "token": ""
    },
    {
        "id": "13a03688.c43e99",
        "type": "ui_group",
        "name": "Jalousien",
        "tab": "b735724.619b39",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "49e2646f.c4941c",
        "type": "mqtt out",
        "z": "6f61cfd3.3d721",
        "g": "2f27dc68.9ff574",
        "name": "",
        "topic": "Thermo",
        "qos": "",
        "retain": "",
        "broker": "19cf2a10.f9d4a6",
        "x": 380,
        "y": 660,
        "wires": []
    },
    {
        "id": "15f6ffc8.eb6d3",
        "type": "influxdb out",
        "z": "6f61cfd3.3d721",
        "g": "584f76f1.996908",
        "influxdb": "e3f4c3e8.b52ee",
        "name": "SensorLoc HomAut",
        "measurement": "SensorLoc",
        "precision": "",
        "retentionPolicy": "two_month",
        "database": "",
        "retentionPolicyV18Flux": "",
        "org": "",
        "bucket": "",
        "x": 670,
        "y": 60,
        "wires": []
    },
    {
        "id": "481f575d.658e08",
        "type": "mqtt in",
        "z": "6f61cfd3.3d721",
        "g": "584f76f1.996908",
        "name": "",
        "topic": "SensorLoc/+",
        "qos": "0",
        "datatype": "auto",
        "broker": "19cf2a10.f9d4a6",
        "x": 110,
        "y": 61,
        "wires": [
            [
                "6a1827c1.d350e8"
            ]
        ]
    },
    {
        "id": "d3718c58.f498a",
        "type": "mqtt in",
        "z": "6f61cfd3.3d721",
        "g": "584f76f1.996908",
        "name": "",
        "topic": "Sensor1/+",
        "qos": "0",
        "datatype": "auto",
        "broker": "19cf2a10.f9d4a6",
        "x": 100,
        "y": 121,
        "wires": [
            [
                "c026e49e.be0588"
            ]
        ]
    },
    {
        "id": "3fcd6f25.e487c",
        "type": "mqtt in",
        "z": "6f61cfd3.3d721",
        "g": "2f27dc68.9ff574",
        "name": "",
        "topic": "Sensor1/fHumi",
        "qos": "0",
        "datatype": "auto",
        "broker": "19cf2a10.f9d4a6",
        "x": 140,
        "y": 600,
        "wires": [
            [
                "64c76441.d5f36c"
            ]
        ]
    },
    {
        "id": "ea688e79.cf481",
        "type": "mqtt in",
        "z": "6f61cfd3.3d721",
        "g": "2f27dc68.9ff574",
        "name": "",
        "topic": "Sensor1/fTempA",
        "qos": "0",
        "datatype": "auto",
        "broker": "19cf2a10.f9d4a6",
        "x": 140,
        "y": 660,
        "wires": [
            [
                "49e2646f.c4941c"
            ]
        ]
    },
    {
        "id": "74b1862d.2f15f8",
        "type": "mqtt in",
        "z": "6f61cfd3.3d721",
        "g": "584f76f1.996908",
        "name": "",
        "topic": "Sensor2/+",
        "qos": "0",
        "datatype": "auto",
        "broker": "19cf2a10.f9d4a6",
        "x": 100,
        "y": 181,
        "wires": [
            [
                "e35d7f54.4ad1f"
            ]
        ]
    },
    {
        "id": "3b080467.ae49dc",
        "type": "influxdb out",
        "z": "6f61cfd3.3d721",
        "g": "584f76f1.996908",
        "influxdb": "e3f4c3e8.b52ee",
        "name": "sSens1 HomAut",
        "measurement": "sSens1",
        "precision": "",
        "retentionPolicy": "two_month",
        "database": "",
        "retentionPolicyV18Flux": "",
        "org": "",
        "bucket": "",
        "x": 660,
        "y": 121,
        "wires": []
    },
    {
        "id": "89c4be7a.d8218",
        "type": "influxdb out",
        "z": "6f61cfd3.3d721",
        "g": "584f76f1.996908",
        "influxdb": "e3f4c3e8.b52ee",
        "name": "sSens2 HomAut",
        "measurement": "sSens2",
        "precision": "",
        "retentionPolicy": "two_month",
        "database": "",
        "retentionPolicyV18Flux": "",
        "org": "",
        "bucket": "",
        "x": 660,
        "y": 181,
        "wires": []
    },
    {
        "id": "d47fd123.52af2",
        "type": "influxdb out",
        "z": "6f61cfd3.3d721",
        "g": "584f76f1.996908",
        "influxdb": "e3f4c3e8.b52ee",
        "name": "sSens3 HomeAut",
        "measurement": "sSens3",
        "precision": "",
        "retentionPolicy": "two_month",
        "database": "",
        "retentionPolicyV18Flux": "",
        "org": "",
        "bucket": "",
        "x": 670,
        "y": 241,
        "wires": []
    },
    {
        "id": "64c76441.d5f36c",
        "type": "mqtt out",
        "z": "6f61cfd3.3d721",
        "g": "2f27dc68.9ff574",
        "name": "",
        "topic": "Humi",
        "qos": "0",
        "retain": "",
        "broker": "19cf2a10.f9d4a6",
        "x": 370,
        "y": 600,
        "wires": []
    },
    {
        "id": "3baa2ffa.c917b",
        "type": "mqtt in",
        "z": "6f61cfd3.3d721",
        "g": "584f76f1.996908",
        "name": "",
        "topic": "Sensor3/+",
        "qos": "0",
        "datatype": "auto",
        "broker": "19cf2a10.f9d4a6",
        "x": 100,
        "y": 241,
        "wires": [
            [
                "1029799b.c92736"
            ]
        ]
    },
    {
        "id": "1029799b.c92736",
        "type": "function",
        "z": "6f61cfd3.3d721",
        "g": "584f76f1.996908",
        "name": "Sensor3 switch/convert",
        "func": "var topic=msg.topic;\nswitch(topic){\n    case \"Sensor3/fTempA\":\n        msg.payload={\n            fTempA: Number(msg.payload),\n        }\n        \n        return msg;\n    case \"Sensor3/fVolt\":\n        msg.payload={\n            fVolt: Number(msg.payload),\n        }\n        msg.retentionPolicy= \"half_year\"\n        return msg;\n    case \"Sensor3/Err\":\n        msg.payload={\n            Err: Number(msg.payload),\n        }\n        return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 350,
        "y": 241,
        "wires": [
            [
                "d47fd123.52af2"
            ]
        ],
        "info": "Switch je nach Topic \nund dann in Number wandeln "
    },
    {
        "id": "e35d7f54.4ad1f",
        "type": "function",
        "z": "6f61cfd3.3d721",
        "g": "584f76f1.996908",
        "name": "Sensor2 switch/convert",
        "func": "var topic=msg.topic;\nswitch(topic){\n    case \"Sensor2/fTempA\":\n        msg.payload={\n            fTempA: Number(msg.payload),\n        }\n        \n        return msg;\n    case \"Sensor2/fTempB\":\n        msg.payload={\n            fTempB: Number(msg.payload),\n        }\n        return msg;\n    case \"Sensor2/fVolt\":\n        msg.payload={\n            fVolt: Number(msg.payload),\n        }\n        msg.retentionPolicy= \"half_year\"\n        return msg;\n    case \"Sensor2/Err\":\n        msg.payload={\n            Err: Number(msg.payload),\n        }\n        return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 350,
        "y": 181,
        "wires": [
            [
                "89c4be7a.d8218"
            ]
        ]
    },
    {
        "id": "c026e49e.be0588",
        "type": "function",
        "z": "6f61cfd3.3d721",
        "g": "584f76f1.996908",
        "name": "Sensor1 switch/convert",
        "func": "var topic=msg.topic;\nswitch(topic){\n    case \"Sensor1/fTempA\":\n        msg.payload={\n            fTempA: Number(msg.payload) \n            \n        }\n\n        return msg;\n    case \"Sensor1/fTempB\":\n        msg.payload={\n            fTempB: Number(msg.payload),\n        }\n        \n        return msg;\n    case \"Sensor1/fHumi\":\n        msg.payload={\n            fHumi: Number(msg.payload),\n        }\n        return msg;\n    case \"Sensor1/fVolt\":\n        msg.payload={\n            fVolt: Number(msg.payload),\n        }\n        msg.retentionPolicy= \"half_year\"\n        return msg;\n    case \"Sensor1/Err\":\n        msg.payload={\n            Err: Number(msg.payload),\n        }\n        return msg;\n        \n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 350,
        "y": 121,
        "wires": [
            [
                "3b080467.ae49dc"
            ]
        ]
    },
    {
        "id": "6a1827c1.d350e8",
        "type": "function",
        "z": "6f61cfd3.3d721",
        "g": "584f76f1.996908",
        "name": "SensorLoc switch/convert",
        "func": "var topic=msg.topic;\nswitch(topic){\n    case \"SensorLoc/fTempA\":\n        msg.payload={\n            fTempA: Number(msg.payload),\n        }\n         return msg;\n    case \"SensorLoc/fHumi\":\n        msg.payload={\n            fHumi: Number(msg.payload),\n        }\n        return msg;\n    case \"SensorLoc/iLight\":\n        msg.payload={\n            iLight: Number(msg.payload),\n        }\n        return msg;\n    case \"SensorLoc/fAtmo\":\n        msg.payload={\n            fAtmo: Number(msg.payload),\n        }\n        return msg;\n    case \"SensorLoc/Err\":\n        msg.payload={\n            Err: Number(msg.payload),\n        }\n        return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 350,
        "y": 61,
        "wires": [
            [
                "15f6ffc8.eb6d3",
                "e414ce6.6f20c3"
            ]
        ]
    },
    {
        "id": "7a71ee5f.b5c6f",
        "type": "influxdb out",
        "z": "6f61cfd3.3d721",
        "g": "584f76f1.996908",
        "influxdb": "e3f4c3e8.b52ee",
        "name": "Sens1 TempA Reference",
        "measurement": "sSens1",
        "precision": "",
        "retentionPolicy": "",
        "x": 870,
        "y": 140,
        "wires": []
    },
    {
        "id": "13346bce.a3e684",
        "type": "mqtt in",
        "z": "6f61cfd3.3d721",
        "g": "584f76f1.996908",
        "name": "",
        "topic": "Sensor4/+",
        "qos": "0",
        "datatype": "auto",
        "broker": "19cf2a10.f9d4a6",
        "x": 100,
        "y": 321,
        "wires": [
            [
                "9dbc98b8.8f08b8"
            ]
        ]
    },
    {
        "id": "9dbc98b8.8f08b8",
        "type": "function",
        "z": "6f61cfd3.3d721",
        "g": "584f76f1.996908",
        "name": "Sensor4 switch/conver",
        "func": "var topic=msg.topic;\nswitch(topic){\n    case \"Sensor4/fTempA\":\n        msg.payload={\n            fTempA: Number(msg.payload),\n        }\n        \n        return msg;\n    case \"Sensor4/fVolt\":\n        msg.payload={\n            fVolt: Number(msg.payload),\n        }\n        return msg;\n    case \"Sensor4/Err\":\n        msg.payload={\n            Err: Number(msg.payload),\n        }\n        return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 340,
        "y": 321,
        "wires": [
            []
        ]
    },
    {
        "id": "17a551f9.bcd59e",
        "type": "mqtt out",
        "z": "6f61cfd3.3d721",
        "g": "5d7bb23e.6c04ec",
        "name": "",
        "topic": "ValveControl/SetPos",
        "qos": "1",
        "retain": "true",
        "broker": "19cf2a10.f9d4a6",
        "x": 740,
        "y": 1000,
        "wires": []
    },
    {
        "id": "da2b6e45.21a05",
        "type": "inject",
        "z": "6f61cfd3.3d721",
        "g": "5d7bb23e.6c04ec",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "4",
        "payloadType": "num",
        "x": 120,
        "y": 1000,
        "wires": [
            [
                "17a551f9.bcd59e"
            ]
        ]
    },
    {
        "id": "3c962617.c2f8da",
        "type": "inject",
        "z": "6f61cfd3.3d721",
        "g": "5d7bb23e.6c04ec",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "5",
        "payloadType": "num",
        "x": 120,
        "y": 1060,
        "wires": [
            [
                "17a551f9.bcd59e"
            ]
        ]
    },
    {
        "id": "19222942.f62117",
        "type": "inject",
        "z": "6f61cfd3.3d721",
        "g": "5d7bb23e.6c04ec",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "3",
        "payloadType": "num",
        "x": 120,
        "y": 940,
        "wires": [
            [
                "17a551f9.bcd59e"
            ]
        ]
    },
    {
        "id": "7b6ccd29.970414",
        "type": "inject",
        "z": "6f61cfd3.3d721",
        "g": "5d7bb23e.6c04ec",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "ValvPos",
        "payload": "0",
        "payloadType": "str",
        "x": 130,
        "y": 760,
        "wires": [
            [
                "17a551f9.bcd59e"
            ]
        ]
    },
    {
        "id": "20ca1b0c.9a8c24",
        "type": "inject",
        "z": "6f61cfd3.3d721",
        "g": "5d7bb23e.6c04ec",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "2",
        "payloadType": "num",
        "x": 120,
        "y": 880,
        "wires": [
            [
                "17a551f9.bcd59e"
            ]
        ]
    },
    {
        "id": "a4e3b9e2.4783a8",
        "type": "inject",
        "z": "6f61cfd3.3d721",
        "g": "5d7bb23e.6c04ec",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 120,
        "y": 820,
        "wires": [
            [
                "17a551f9.bcd59e"
            ]
        ]
    },
    {
        "id": "d0849bc.1c43168",
        "type": "debug",
        "z": "6f61cfd3.3d721",
        "g": "584f76f1.996908",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 321,
        "wires": []
    },
    {
        "id": "76fa1ec9.8c37",
        "type": "inject",
        "z": "8be0833b.6c16c",
        "name": "",
        "props": [
            {
                "p": "payload",
                "v": "OFF",
                "vt": "str"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "string"
            }
        ],
        "repeat": "",
        "crontab": "00 22 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "OFF",
        "payloadType": "str",
        "x": 430,
        "y": 340,
        "wires": [
            [
                "4e172ef6.80b7a"
            ]
        ]
    },
    {
        "id": "4e172ef6.80b7a",
        "type": "mqtt out",
        "z": "8be0833b.6c16c",
        "name": "",
        "topic": "cmnd/TASMOTA/Power",
        "qos": "1",
        "retain": "",
        "broker": "19cf2a10.f9d4a6",
        "x": 690,
        "y": 260,
        "wires": []
    },
    {
        "id": "3d7a200b.f09e8",
        "type": "mqtt in",
        "z": "8be0833b.6c16c",
        "name": "",
        "topic": "stat/TASMOTA/+",
        "qos": "1",
        "datatype": "utf8",
        "broker": "19cf2a10.f9d4a6",
        "x": 140,
        "y": 220,
        "wires": [
            [
                "18fef629.91877a"
            ]
        ]
    },
    {
        "id": "9bb47e18.c404",
        "type": "clock-timer",
        "z": "8be0833b.6c16c",
        "name": "",
        "topic": "",
        "positionConfig": "9a5a8534.25d4d8",
        "autoTrigger": true,
        "autoTriggerTime": "7200000",
        "startDelayTime": "0",
        "overwriteExpire": "",
        "rules": [
            {
                "index": 0,
                "name": "Abend Schiff Lampe an",
                "isValid": false,
                "valid": {},
                "timeValue": "sunsetStart",
                "timeType": "pdsTime",
                "timeOp": 1,
                "timeOpText": "‚Üß von",
                "offsetValue": "",
                "offsetType": "none",
                "multiplier": 3600000,
                "timeDays": "*",
                "timeMonths": "*",
                "timeOnlyEvenDays": false,
                "timeOnlyOddDays": false,
                "timeDateStart": "",
                "timeDateEnd": "",
                "timeMinValue": "",
                "timeMinType": "none",
                "offsetMinValue": "",
                "offsetMinType": "none",
                "multiplierMin": 60000,
                "timeMaxValue": "",
                "timeMaxType": "none",
                "offsetMaxValue": "",
                "offsetMaxType": "none",
                "multiplierMax": 60000,
                "payloadValue": "ON",
                "payloadType": "str",
                "payloadOffsetValue": "",
                "payloadOffsetType": "none",
                "payloadOffsetMultiplier": 3600000,
                "payloadFormat": 99,
                "topic": "",
                "importance": 0,
                "validOperandAValue": "",
                "validOperandAType": "none",
                "validOperator": "true",
                "validOperatorText": "ist true",
                "validOperandBValue": "",
                "validOperandBType": "num",
                "valid2LogOperator": 0,
                "valid2LogOperatorText": "N/A",
                "valid2OperandAValue": "",
                "valid2OperandAType": "msg",
                "valid2Operator": "true",
                "valid2OperatorText": "ist true",
                "valid2OperandBValue": "",
                "valid2OperandBType": "num",
                "description": "<div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ‚Üß von <var>Sonnenuntergang Begin</var></div><div><div class=\"indent-payload-text\"><i class=\"fa fa-step-backward\" aria-hidden=\"true\"></i> <span>Payload:</span> <var>\"ON\"</var></div></div>",
                "timeMinOp": 0,
                "timeMaxOp": 0
            },
            {
                "index": 1,
                "name": "Off",
                "isValid": false,
                "valid": {},
                "timeValue": "22:45",
                "timeType": "entered",
                "timeOp": 1,
                "timeOpText": "‚Üß von",
                "offsetValue": "",
                "offsetType": "none",
                "multiplier": 60000,
                "timeDays": "*",
                "timeMonths": "*",
                "timeOnlyEvenDays": false,
                "timeOnlyOddDays": false,
                "timeDateStart": "",
                "timeDateEnd": "",
                "timeMinValue": "",
                "timeMinType": "none",
                "offsetMinValue": "",
                "offsetMinType": "none",
                "multiplierMin": 60000,
                "timeMaxValue": "",
                "timeMaxType": "none",
                "offsetMaxValue": "",
                "offsetMaxType": "none",
                "multiplierMax": 60000,
                "payloadValue": "OFF",
                "payloadType": "str",
                "payloadOffsetValue": "",
                "payloadOffsetType": "none",
                "payloadOffsetMultiplier": 60000,
                "payloadFormat": 99,
                "topic": "",
                "importance": 0,
                "validOperandAValue": "",
                "validOperandAType": "none",
                "validOperator": "true",
                "validOperatorText": "ist true",
                "validOperandBValue": "",
                "validOperandBType": "num",
                "valid2LogOperator": 0,
                "valid2LogOperatorText": "N/A",
                "valid2OperandAValue": "",
                "valid2OperandAType": "msg",
                "valid2Operator": "true",
                "valid2OperatorText": "ist true",
                "valid2OperandBValue": "",
                "valid2OperandBType": "num",
                "description": "<div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ‚Üß von <var>22:45</var></div><div><div class=\"indent-payload-text\"><i class=\"fa fa-step-backward\" aria-hidden=\"true\"></i> <span>Payload:</span> <var>\"OFF\"</var></div></div>",
                "timeMinOp": 0,
                "timeMaxOp": 0
            }
        ],
        "payloadDefault": "",
        "payloadDefaultType": "none",
        "payloadDefaultTimeFormat": 0,
        "payloadDefaultOffset": 0,
        "payloadDefaultOffsetType": "none",
        "payloadDefaultOffsetMultiplier": 60000,
        "x": 420,
        "y": 160,
        "wires": [
            [
                "4e172ef6.80b7a"
            ],
            [
                "80382034.4d80c"
            ]
        ]
    },
    {
        "id": "11a74cc.a9950b3",
        "type": "inject",
        "z": "8be0833b.6c16c",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "ON",
        "payloadType": "str",
        "x": 430,
        "y": 380,
        "wires": [
            [
                "4e172ef6.80b7a"
            ]
        ]
    },
    {
        "id": "80382034.4d80c",
        "type": "debug",
        "z": "8be0833b.6c16c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 720,
        "y": 180,
        "wires": []
    },
    {
        "id": "18fef629.91877a",
        "type": "debug",
        "z": "8be0833b.6c16c",
        "name": "SONOFF Status",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 240,
        "y": 120,
        "wires": []
    },
    {
        "id": "a6878b51.4aab48",
        "type": "mqtt in",
        "z": "8be0833b.6c16c",
        "name": "",
        "topic": "SensorLoc/iLight",
        "qos": "1",
        "datatype": "utf8",
        "broker": "19cf2a10.f9d4a6",
        "x": 160,
        "y": 460,
        "wires": [
            [
                "84bc4c5.83a4eb"
            ]
        ]
    },
    {
        "id": "84bc4c5.83a4eb",
        "type": "function",
        "z": "8be0833b.6c16c",
        "name": "",
        "func": "if (msg.payload <= 10)\nmsg.payload = \"ON\"\nelse\nmsg.payload = \"OFF\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 380,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "5865d674.dadeb8",
        "type": "mqtt out",
        "z": "8be0833b.6c16c",
        "name": "",
        "topic": "cmnd/SONOFF4/Power",
        "qos": "",
        "retain": "",
        "broker": "19cf2a10.f9d4a6",
        "x": 1310,
        "y": 80,
        "wires": []
    },
    {
        "id": "a98d4b21.7cfc38",
        "type": "inject",
        "z": "8be0833b.6c16c",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "ON",
        "payloadType": "str",
        "x": 940,
        "y": 100,
        "wires": [
            [
                "5865d674.dadeb8"
            ]
        ]
    },
    {
        "id": "4725486.e4595b8",
        "type": "debug",
        "z": "8be0833b.6c16c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1300,
        "y": 240,
        "wires": []
    },
    {
        "id": "115785e4.3acc0a",
        "type": "inject",
        "z": "8be0833b.6c16c",
        "name": "",
        "repeat": "",
        "crontab": "00 22 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "OFF",
        "payloadType": "str",
        "x": 940,
        "y": 160,
        "wires": [
            [
                "5865d674.dadeb8"
            ]
        ]
    },
    {
        "id": "5fa52f71.0833d",
        "type": "mqtt in",
        "z": "8be0833b.6c16c",
        "name": "",
        "topic": "stat/SONOFF3/+",
        "qos": "1",
        "datatype": "utf8",
        "broker": "19cf2a10.f9d4a6",
        "x": 950,
        "y": 260,
        "wires": [
            [
                "4725486.e4595b8"
            ]
        ]
    },
    {
        "id": "818d3c6f.201f2",
        "type": "mqtt in",
        "z": "511989b1.670cc8",
        "g": "5c041b39.d836b4",
        "name": "",
        "topic": "octoprint/event/PrinterStateChanged",
        "qos": "2",
        "datatype": "json",
        "broker": "19cf2a10.f9d4a6",
        "x": 200,
        "y": 240,
        "wires": [
            [
                "4b0bda4e.1a1664",
                "76804725.6ac1f8"
            ]
        ]
    },
    {
        "id": "4b0bda4e.1a1664",
        "type": "debug",
        "z": "511989b1.670cc8",
        "g": "5c041b39.d836b4",
        "name": "progress printing",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 100,
        "wires": []
    },
    {
        "id": "d702897a.1cfcf8",
        "type": "mqtt in",
        "z": "511989b1.670cc8",
        "g": "5c041b39.d836b4",
        "name": "",
        "topic": "octoprint/progress/printing",
        "qos": "2",
        "datatype": "json",
        "broker": "19cf2a10.f9d4a6",
        "x": 170,
        "y": 100,
        "wires": [
            [
                "4b0bda4e.1a1664"
            ]
        ]
    },
    {
        "id": "966ae8fb.a98fd8",
        "type": "mqtt in",
        "z": "511989b1.670cc8",
        "g": "5c041b39.d836b4",
        "name": "",
        "topic": "octoprint/event/Shutdown",
        "qos": "0",
        "datatype": "auto",
        "broker": "19cf2a10.f9d4a6",
        "x": 170,
        "y": 160,
        "wires": [
            [
                "c6ec2928.710c18",
                "76804725.6ac1f8"
            ]
        ]
    },
    {
        "id": "c6ec2928.710c18",
        "type": "debug",
        "z": "511989b1.670cc8",
        "g": "5c041b39.d836b4",
        "name": "octoprint shutdown",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 160,
        "wires": []
    },
    {
        "id": "10bda896.f1d857",
        "type": "mqtt in",
        "z": "6f61cfd3.3d721",
        "g": "584f76f1.996908",
        "name": "",
        "topic": "Sensor5/+",
        "qos": "2",
        "datatype": "auto",
        "broker": "19cf2a10.f9d4a6",
        "x": 100,
        "y": 401,
        "wires": [
            [
                "eced108b.5f3cd"
            ]
        ]
    },
    {
        "id": "eced108b.5f3cd",
        "type": "function",
        "z": "6f61cfd3.3d721",
        "g": "584f76f1.996908",
        "name": "Sensor5 switch/convert",
        "func": "var topic=msg.topic;\nswitch(topic){\n    case \"Sensor5/fTempA\":\n        msg.payload={\n            fTempA: Number(msg.payload),\n        }\n        \n        return msg;\n    case \"Sensor5/fHumi\":\n        msg.payload={\n            fHumi: Number(msg.payload),\n        }\n        return msg;\n    case \"Sensor5/fVolt\":\n        msg.payload={\n            fVolt: Number(msg.payload),\n        }\n        msg.retentionPolicy= \"half_year\"\n        return msg;\n    case \"Sensor5/Err\":\n        msg.payload={\n            Err: Number(msg.payload),\n        }\n        return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 360,
        "y": 401,
        "wires": [
            [
                "d0849bc.1c43168",
                "95b11563.82c788"
            ]
        ]
    },
    {
        "id": "95b11563.82c788",
        "type": "influxdb out",
        "z": "6f61cfd3.3d721",
        "g": "584f76f1.996908",
        "influxdb": "e3f4c3e8.b52ee",
        "name": "sSens5 HomeAut",
        "measurement": "sSens5",
        "precision": "",
        "retentionPolicy": "two_month",
        "database": "",
        "retentionPolicyV18Flux": "",
        "org": "",
        "bucket": "",
        "x": 670,
        "y": 401,
        "wires": []
    },
    {
        "id": "e414ce6.6f20c3",
        "type": "debug",
        "z": "6f61cfd3.3d721",
        "g": "584f76f1.996908",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 850,
        "y": 80,
        "wires": []
    },
    {
        "id": "1824c144.dfb4ef",
        "type": "mqtt in",
        "z": "511989b1.670cc8",
        "g": "5c041b39.d836b4",
        "name": "",
        "topic": "octoprint/temperature/+",
        "qos": "2",
        "datatype": "auto",
        "broker": "19cf2a10.f9d4a6",
        "x": 160,
        "y": 300,
        "wires": [
            [
                "5da76156.34c3f"
            ]
        ]
    },
    {
        "id": "d754d650.2a8f18",
        "type": "debug",
        "z": "511989b1.670cc8",
        "g": "5c041b39.d836b4",
        "name": "PrintControlOutput",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 850,
        "y": 380,
        "wires": []
    },
    {
        "id": "76804725.6ac1f8",
        "type": "function",
        "z": "511989b1.670cc8",
        "g": "5c041b39.d836b4",
        "name": "Printer Control",
        "func": "//get message topic\n//V1.0\nvar myTopic = msg.topic;\nvar o=msg.payload;\nmsg.topic = \"PrintControl.Command\";\nvar sendmsg = false; \n\n//return topic as payload\n//store status in a variable \nvar myStatus = flow.get(\"status\");\n//((msg._event == \"PrinterStageChanged\")&& myTopic == \"octoprint/PrinterStateChanged\") && \n\nif(myStatus == \"Init\"){\n    node.status({fill:\"green\",shape:\"ring\",text: myStatus});\n}\n\n// on Cancelling go to idle to wait some time because printer will heat up anyway\nif(\n    ((o._event == \"PrinterStateChanged\") \n        && (o.state_id == \"OPERATIONAL\") \n        && ((myStatus == \"Init\") || myStatus == \"ON\")|| (myStatus == \"ERROR\")) ||\n    (msg.payload == \"test plugin startup\") \n    )\n{\n    flow.set(\"status\", \"PrinterIdle\"); //Set wait for new print job timer\n    node.status({fill:\"green\",shape:\"ring\",text: \"Idle\"});\n    sendmsg = true; \n}\n//printer printing or start print, do not react on Printing message when in status cancelling\n/* in some situations when cancel from octoprint and printer goes to Cooldown (printer hot) and then restart with new print it switches off\nif(\n    ((o._event == \"PrinterStateChanged\") &&  ((o.state_id == \"STARTING\") \n        || ((o.state_id == \"PRINTING\") && (myStatus != \"PrinterHot\")))\n    && (myStatus != \"CANCELLING\"))\n    )*/\nif(\n    ((o._event == \"PrinterStateChanged\") &&  ((o.state_id == \"STARTING\") \n        || (o.state_id == \"PRINTING\"))\n    ))\n{\n    flow.set(\"status\", \"Printing\"); //wait for print end or cancel\n        node.status({fill:\"green\",shape:\"ring\",text: \"Printing\"});\n     sendmsg = true; \n}\n\n//printer Error assume it is hot set a longer timer and then shutdown everything\nif((o._event == \"PrinterStateChanged\") \n    &&  (o.state_id == \"ERROR\"))\n{\n    flow.set(\"status\", \"ERROR\"); //set ERROR timer, try reconnect (if possible with mqtt)\n    node.status({fill:\"red\",shape:\"ring\",text: \"Error\"});\n    sendmsg = true; \n}\n\n//printer Cancelling assume it is hot set a longer timer and then shutdown everything\nif ((o._event == \"PrinterStateChanged\") && (o.state_id == \"CANCELLING\") )\n{\n    flow.set(\"status\", \"CANCELLING\"); //set ERROR timer, try reconnect (if possible with mqtt)\n    node.status({fill:\"red\",shape:\"ring\",text: \"Cancelling\"});\n     sendmsg = true; \n}\n\n//print finished  or ERROR and temperatur messages received\n\n\nif( \n    (   ((o._event == \"PrinterStateChanged\") && (o.state_id == \"FINISHING\"))\n    ||  ((myStatus == \"ERROR\") && (myTopic == \"octoprint/temperature/tool0\")) \n    ||  ((myTopic == \"PrintControl.Timer\") && (msg.payload == \"IdleTimeout\") && ((myStatus == \"PrinterIdle\") || (myStatus == \"ON\")))\n    ||  ((myTopic == \"PrintControl.Timer\") && (msg.payload == \"CancelTimer\") && ((myStatus == \"CANCELLING\")))\n    )\n    )\n{\n    flow.set(\"status\", \"PrinterHot\"); //wait for cooldown \n     node.status({fill:\"yellow\",shape:\"ring\",text: \"Wait for cooldown\"});\n    sendmsg = true; \n}\n\n\n//printer idle and hotend over temperature or after ERROR status and reconnect receive a temp value waiting for cooldown\nif (\n    (((myTopic == \"octoprint/temperature/tool0\") && (o.actual <= \"40\")) && ((myStatus == \"PrinterHot\") || (myStatus == \"ERROR\")))\n    ||((myTopic == \"PrintControl.Timer\") && (msg.payload == \"PrinterHotTimeout\"))\n){\n    flow.set(\"status\", \"PrinterCooledDown\"); //Reset ERROR timer, set wait for new print job timer\n    node.status({fill:\"yellow\",shape:\"ring\",text: \"ShutDown Octopi\"});\n    sendmsg = true; \n}\n//octoprint shut down finished\nif (\n    (msg._event == \"ClientClosed\") ||  (o._event == \"Disconnected\") ||  (o._event == \"ClientClosed\") || (msg.payload == \"eOctoprintDown\")\n    )  {\n    flow.set(\"status\", \"OctoprintDown\");\n    node.status({fill:\"red\",shape:\"ring\",text: \"Disconnected\"});\n     sendmsg = true; \n}\n\nif ((myTopic == \"stat/SONOFFI3/POWER\") && (msg.payload == \"OFF\"))\n{\n     flow.set(\"status\", \"OFF\");\n     node.status({fill:\"red\",shape:\"ring\",text: \"OFF\"});\n  \n}\n\nif ((myTopic == \"stat/SONOFFI3/POWER\") && (msg.payload == \"ON\")\n    && (myStatus != \"OctoprintDown\")\n)\n{\n     flow.set(\"status\", \"ON\");\n     node.status({fill:\"green\",shape:\"ring\",text: \"ON\"});\n     sendmsg = true;\n     \n}\n\n\nif (sendmsg == true) \n{\n        msg.payload = flow.get(\"status\");\n        sendmsg = false;\n        return msg;\n}\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is deployed.\nflow.set(\"status\", \"Init\");",
        "finalize": "",
        "x": 560,
        "y": 380,
        "wires": [
            [
                "d754d650.2a8f18",
                "c963b96.8ceb748",
                "823d7203.adc6f",
                "c60a1a40.b2a698",
                "1dea714a.68511f",
                "a30d9009.4e13b"
            ]
        ]
    },
    {
        "id": "31b9404d.230c",
        "type": "change",
        "z": "511989b1.670cc8",
        "g": "18ca9346.bdbedd",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "ShutdownOctopi",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 550,
        "y": 940,
        "wires": [
            [
                "9bea78c2.290f98"
            ]
        ]
    },
    {
        "id": "5da76156.34c3f",
        "type": "json",
        "z": "511989b1.670cc8",
        "g": "5c041b39.d836b4",
        "name": "Convert JSON String to Obj",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 600,
        "y": 280,
        "wires": [
            [
                "76804725.6ac1f8",
                "8c67a965.134088",
                "7b1463f8.f8e4cc"
            ]
        ]
    },
    {
        "id": "8c67a965.134088",
        "type": "debug",
        "z": "511989b1.670cc8",
        "g": "5c041b39.d836b4",
        "name": "Temperature",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 300,
        "wires": []
    },
    {
        "id": "1a54d5c9.3e5b9a",
        "type": "mqtt in",
        "z": "511989b1.670cc8",
        "g": "5c041b39.d836b4",
        "name": "",
        "topic": "stat/SONOFFI3/POWER",
        "qos": "0",
        "datatype": "utf8",
        "broker": "19cf2a10.f9d4a6",
        "x": 170,
        "y": 40,
        "wires": [
            [
                "76804725.6ac1f8"
            ]
        ]
    },
    {
        "id": "54087a9f.9d1c24",
        "type": "mqtt out",
        "z": "511989b1.670cc8",
        "g": "18ca9346.bdbedd",
        "name": "",
        "topic": "cmnd/SONOFFI3/Power",
        "qos": "1",
        "retain": "false",
        "broker": "19cf2a10.f9d4a6",
        "x": 1410,
        "y": 1000,
        "wires": []
    },
    {
        "id": "6b77f023.4e575",
        "type": "inject",
        "z": "511989b1.670cc8",
        "g": "5c041b39.d836b4",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "ON",
        "payloadType": "str",
        "x": 130,
        "y": 440,
        "wires": [
            [
                "54087a9f.9d1c24"
            ]
        ]
    },
    {
        "id": "550eb938.78f938",
        "type": "mqtt out",
        "z": "511989b1.670cc8",
        "g": "18ca9346.bdbedd",
        "name": "Octoprint Shutdown",
        "topic": "",
        "qos": "0",
        "retain": "false",
        "broker": "19cf2a10.f9d4a6",
        "x": 1570,
        "y": 940,
        "wires": []
    },
    {
        "id": "9bea78c2.290f98",
        "type": "switch",
        "z": "511989b1.670cc8",
        "g": "18ca9346.bdbedd",
        "name": "OnOctoprintShutDownRQ",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "ShutdownOctopi",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1110,
        "y": 940,
        "wires": [
            [
                "acfc89f6.5dc368",
                "997e000a.2be07"
            ]
        ]
    },
    {
        "id": "63b53cab.0746d4",
        "type": "inject",
        "z": "511989b1.670cc8",
        "g": "5c041b39.d836b4",
        "name": "Inject some msg",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "PrintControl.Timer",
        "payload": "IdleTimeout",
        "payloadType": "str",
        "x": 160,
        "y": 380,
        "wires": [
            [
                "76804725.6ac1f8"
            ]
        ]
    },
    {
        "id": "f46b4697.85a528",
        "type": "mytimeout",
        "z": "511989b1.670cc8",
        "g": "18ca9346.bdbedd",
        "name": "Idle Delay ",
        "outtopic": "PrintControl.Timer",
        "outsafe": "on",
        "outwarning": "Warning",
        "outunsafe": "off",
        "warning": "5",
        "timer": "3000",
        "debug": false,
        "ndebug": false,
        "ignoreCase": false,
        "repeat": false,
        "again": false,
        "x": 720,
        "y": 600,
        "wires": [
            [
                "15937479.cc992c"
            ],
            []
        ]
    },
    {
        "id": "ab040656.4d62c8",
        "type": "change",
        "z": "511989b1.670cc8",
        "g": "18ca9346.bdbedd",
        "name": "On Idle or ON",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"payload\":\"on\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 560,
        "wires": [
            [
                "f46b4697.85a528"
            ]
        ]
    },
    {
        "id": "c963b96.8ceb748",
        "type": "switch",
        "z": "511989b1.670cc8",
        "g": "18ca9346.bdbedd",
        "name": "Printer Idle ON Printing Hot",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "PrinterIdle",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "ON",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Printing",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "PrinterHot",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "CANCELLING",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 5,
        "x": 220,
        "y": 580,
        "wires": [
            [
                "ab040656.4d62c8"
            ],
            [
                "ab040656.4d62c8"
            ],
            [
                "29e1d371.ff155c"
            ],
            [
                "29e1d371.ff155c"
            ],
            [
                "29e1d371.ff155c"
            ]
        ]
    },
    {
        "id": "29e1d371.ff155c",
        "type": "change",
        "z": "511989b1.670cc8",
        "g": "18ca9346.bdbedd",
        "name": "On Printing or Hot",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"payload\":\"cancel\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 530,
        "y": 600,
        "wires": [
            [
                "f46b4697.85a528"
            ]
        ]
    },
    {
        "id": "15937479.cc992c",
        "type": "change",
        "z": "511989b1.670cc8",
        "g": "18ca9346.bdbedd",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "on",
                "fromt": "str",
                "to": "",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "off",
                "fromt": "str",
                "to": "IdleTimeout",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 920,
        "y": 600,
        "wires": [
            [
                "76804725.6ac1f8"
            ]
        ]
    },
    {
        "id": "47ac10c5.af1f3",
        "type": "mytimeout",
        "z": "511989b1.670cc8",
        "g": "18ca9346.bdbedd",
        "name": "Cooldown Timeout",
        "outtopic": "PrintControl.Timer",
        "outsafe": "on",
        "outwarning": "Warning",
        "outunsafe": "off",
        "warning": "5",
        "timer": "780",
        "debug": false,
        "ndebug": false,
        "ignoreCase": false,
        "repeat": false,
        "again": false,
        "x": 750,
        "y": 680,
        "wires": [
            [
                "3b6104fe.71eecc"
            ],
            []
        ]
    },
    {
        "id": "823d7203.adc6f",
        "type": "switch",
        "z": "511989b1.670cc8",
        "g": "18ca9346.bdbedd",
        "name": "Printer Hot ON Printing Idle Cancelling",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "PrinterHot",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "ON",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Printing",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Idle",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "CANCELLING",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "PrinterCooledDown",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 6,
        "x": 230,
        "y": 700,
        "wires": [
            [
                "c85e3aa6.8a06d8",
                "1ffa44ec.2f584b"
            ],
            [
                "1ffa44ec.2f584b",
                "a781db69.92e528"
            ],
            [
                "1ffa44ec.2f584b",
                "a781db69.92e528"
            ],
            [
                "1ffa44ec.2f584b",
                "a781db69.92e528"
            ],
            [
                "8224f7c3.a845f8",
                "a781db69.92e528"
            ],
            [
                "a781db69.92e528"
            ]
        ]
    },
    {
        "id": "c85e3aa6.8a06d8",
        "type": "change",
        "z": "511989b1.670cc8",
        "g": "18ca9346.bdbedd",
        "name": "On Hot",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"payload\":\"on\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 520,
        "y": 640,
        "wires": [
            [
                "47ac10c5.af1f3"
            ]
        ]
    },
    {
        "id": "a781db69.92e528",
        "type": "change",
        "z": "511989b1.670cc8",
        "g": "18ca9346.bdbedd",
        "name": "On ON Printing Idle",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"payload\":\"cancel\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 550,
        "y": 700,
        "wires": [
            [
                "47ac10c5.af1f3"
            ]
        ]
    },
    {
        "id": "3b6104fe.71eecc",
        "type": "change",
        "z": "511989b1.670cc8",
        "g": "18ca9346.bdbedd",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "on",
                "fromt": "str",
                "to": "",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "off",
                "fromt": "str",
                "to": "PrinterHotTimeout",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 960,
        "y": 680,
        "wires": [
            [
                "76804725.6ac1f8"
            ]
        ]
    },
    {
        "id": "f065d912.8cec88",
        "type": "change",
        "z": "511989b1.670cc8",
        "g": "18ca9346.bdbedd",
        "name": "Send OFF",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "OFF",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 530,
        "y": 1000,
        "wires": [
            [
                "acfc89f6.5dc368",
                "54087a9f.9d1c24"
            ]
        ]
    },
    {
        "id": "c60a1a40.b2a698",
        "type": "switch",
        "z": "511989b1.670cc8",
        "g": "18ca9346.bdbedd",
        "name": "Printer CooledDown Octoprint Down",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "PrinterCooledDown",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "OctoprintDown",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 250,
        "y": 880,
        "wires": [
            [
                "31b9404d.230c",
                "87cac91c.8f1ba8"
            ],
            [
                "f065d912.8cec88"
            ]
        ]
    },
    {
        "id": "87cac91c.8f1ba8",
        "type": "mytimeout",
        "z": "511989b1.670cc8",
        "g": "18ca9346.bdbedd",
        "name": "Octoprint Shutdown Delay",
        "outtopic": "PrintControl.Timer",
        "outsafe": "on",
        "outwarning": "Warning",
        "outunsafe": "off",
        "warning": "0",
        "timer": "120",
        "debug": false,
        "ndebug": false,
        "ignoreCase": false,
        "repeat": false,
        "again": false,
        "x": 770,
        "y": 880,
        "wires": [
            [
                "339b0b7.0a49bf4"
            ],
            []
        ]
    },
    {
        "id": "339b0b7.0a49bf4",
        "type": "change",
        "z": "511989b1.670cc8",
        "g": "18ca9346.bdbedd",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "on",
                "fromt": "str",
                "to": "",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "off",
                "fromt": "str",
                "to": "eOctoprintDown",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1120,
        "y": 880,
        "wires": [
            [
                "76804725.6ac1f8"
            ]
        ]
    },
    {
        "id": "1b6c236f.f67d4d",
        "type": "inject",
        "z": "511989b1.670cc8",
        "g": "5c041b39.d836b4",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "eOctoprintDown",
        "payloadType": "str",
        "x": 330,
        "y": 440,
        "wires": [
            [
                "76804725.6ac1f8"
            ]
        ]
    },
    {
        "id": "c0b2e11c.f580f",
        "type": "mytimeout",
        "z": "511989b1.670cc8",
        "g": "18ca9346.bdbedd",
        "name": "Cancel Timeout",
        "outtopic": "PrintControl.Timer",
        "outsafe": "on",
        "outwarning": "Warning",
        "outunsafe": "off",
        "warning": "5",
        "timer": "360",
        "debug": false,
        "ndebug": false,
        "ignoreCase": false,
        "repeat": false,
        "again": false,
        "x": 740,
        "y": 780,
        "wires": [
            [
                "19c8b5c0.3dcaca"
            ],
            []
        ],
        "info": "Wait 90 sec in cancel the printer still may warm up.\nWe go to cooldown status when it is warmed up. "
    },
    {
        "id": "8224f7c3.a845f8",
        "type": "change",
        "z": "511989b1.670cc8",
        "g": "18ca9346.bdbedd",
        "name": "On Cancelling",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"payload\":\"on\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 520,
        "y": 780,
        "wires": [
            [
                "c0b2e11c.f580f"
            ]
        ]
    },
    {
        "id": "19c8b5c0.3dcaca",
        "type": "change",
        "z": "511989b1.670cc8",
        "g": "18ca9346.bdbedd",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "on",
                "fromt": "str",
                "to": "",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "off",
                "fromt": "str",
                "to": "CancelTimer",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 980,
        "y": 780,
        "wires": [
            [
                "76804725.6ac1f8"
            ]
        ]
    },
    {
        "id": "1ffa44ec.2f584b",
        "type": "change",
        "z": "511989b1.670cc8",
        "g": "18ca9346.bdbedd",
        "name": "On ON Printing Idle",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"payload\":\"cancel\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 530,
        "y": 820,
        "wires": [
            [
                "c0b2e11c.f580f"
            ]
        ]
    },
    {
        "id": "c1e7e0f.1a2202",
        "type": "mqtt in",
        "z": "9963931.9232c7",
        "g": "7d3411b0.20fc7",
        "name": "",
        "topic": "tele/SONOFFI3/SENSOR",
        "qos": "0",
        "datatype": "json",
        "broker": "19cf2a10.f9d4a6",
        "x": 150,
        "y": 80,
        "wires": [
            [
                "1a1c6586.ce182a"
            ]
        ]
    },
    {
        "id": "3a6c508.ebe3cb",
        "type": "debug",
        "z": "9963931.9232c7",
        "g": "7d3411b0.20fc7",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 790,
        "y": 140,
        "wires": []
    },
    {
        "id": "f571eda1.7d3f5",
        "type": "influxdb out",
        "z": "9963931.9232c7",
        "g": "7d3411b0.20fc7",
        "influxdb": "e3f4c3e8.b52ee",
        "name": "AnyI3Power",
        "measurement": "AnyI3Power",
        "precision": "",
        "retentionPolicy": "",
        "database": "",
        "retentionPolicyV18Flux": "",
        "org": "",
        "bucket": "",
        "x": 790,
        "y": 80,
        "wires": []
    },
    {
        "id": "1a1c6586.ce182a",
        "type": "function",
        "z": "9963931.9232c7",
        "g": "7d3411b0.20fc7",
        "name": "Convert Tasmota Pow",
        "func": "obj = msg.payload;\nvar Total = obj[\"ENERGY\"][\"Total\"];\nvar Power = obj[\"ENERGY\"][\"Power\"];\nvar ApparentPower = obj[\"ENERGY\"][\"ApparentPower\"];\n\nmsg.payload = {\n    AnycubicTotal: Number(obj[\"ENERGY\"][\"Total\"]), \n    AnycubicPower: Number(obj[\"ENERGY\"][\"Power\"]),\n    AnycubicAppPower: Number(obj[\"ENERGY\"][\"ApparentPower\"]),\n    AnycubicVolt: Number(obj[\"ENERGY\"][\"Voltage\"]),\n    AnycubicCurrent: Number(obj[\"ENERGY\"][\"Current\"]),\n    AnycubicPowFact: Number(obj[\"ENERGY\"][\"Factor\"])\n}; \nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 460,
        "y": 80,
        "wires": [
            [
                "2a103049.f6a29",
                "f571eda1.7d3f5"
            ]
        ]
    },
    {
        "id": "2a103049.f6a29",
        "type": "switch",
        "z": "9963931.9232c7",
        "g": "7d3411b0.20fc7",
        "name": "",
        "property": "payload.AnycubicVolt",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "20",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 630,
        "y": 140,
        "wires": [
            [
                "3a6c508.ebe3cb"
            ]
        ]
    },
    {
        "id": "acfc89f6.5dc368",
        "type": "debug",
        "z": "511989b1.670cc8",
        "g": "18ca9346.bdbedd",
        "name": "Sonoff OFF / Shutdown",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1400,
        "y": 800,
        "wires": []
    },
    {
        "id": "7b1463f8.f8e4cc",
        "type": "function",
        "z": "511989b1.670cc8",
        "g": "5c041b39.d836b4",
        "name": "Octoprint switch/convert",
        "func": "var topic=msg.topic;\nswitch(topic){\n    case \"octoprint/temperature/tool0\":\n        msg.payload={\n            hotendTemp: Number(msg.payload.actual),\n        }\n         return msg;\n    case \"octoprint/temperature/bed\":\n        msg.payload={\n            bedTemp: Number(msg.payload.actual),\n        }\n        return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 850,
        "y": 240,
        "wires": [
            [
                "c4532342.dddc2",
                "ff6b7215.93de5"
            ]
        ]
    },
    {
        "id": "c4532342.dddc2",
        "type": "debug",
        "z": "511989b1.670cc8",
        "g": "5c041b39.d836b4",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1100,
        "y": 200,
        "wires": []
    },
    {
        "id": "ff6b7215.93de5",
        "type": "influxdb out",
        "z": "511989b1.670cc8",
        "g": "5c041b39.d836b4",
        "influxdb": "e3f4c3e8.b52ee",
        "name": "AnyI3Temp",
        "measurement": "AnyI3Temp",
        "precision": "",
        "retentionPolicy": "",
        "database": "",
        "retentionPolicyV18Flux": "",
        "org": "",
        "bucket": "",
        "x": 1110,
        "y": 260,
        "wires": []
    },
    {
        "id": "1dea714a.68511f",
        "type": "link out",
        "z": "511989b1.670cc8",
        "g": "5c041b39.d836b4",
        "name": "Printer Control",
        "links": [
            "3073af6c.b8faf"
        ],
        "x": 855,
        "y": 420,
        "wires": []
    },
    {
        "id": "3073af6c.b8faf",
        "type": "link in",
        "z": "9963931.9232c7",
        "g": "b83af794.4bec68",
        "name": "Printer Control IN",
        "links": [
            "1dea714a.68511f"
        ],
        "x": 175,
        "y": 260,
        "wires": [
            [
                "98f49115.c6a88"
            ]
        ]
    },
    {
        "id": "eb3968c3.bb5428",
        "type": "inject",
        "z": "9963931.9232c7",
        "g": "b83af794.4bec68",
        "name": "Run",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Printing",
        "payloadType": "str",
        "x": 130,
        "y": 460,
        "wires": [
            [
                "98f49115.c6a88"
            ]
        ]
    },
    {
        "id": "da1d5372.6280b",
        "type": "inject",
        "z": "9963931.9232c7",
        "g": "b83af794.4bec68",
        "name": "Stop",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "stop",
        "payloadType": "str",
        "x": 130,
        "y": 500,
        "wires": [
            [
                "98f49115.c6a88"
            ]
        ]
    },
    {
        "id": "c84605f2.fc07b8",
        "type": "inject",
        "z": "9963931.9232c7",
        "g": "b83af794.4bec68",
        "name": "ResetAll",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "reset",
        "payloadType": "str",
        "x": 140,
        "y": 300,
        "wires": [
            [
                "98f49115.c6a88"
            ]
        ]
    },
    {
        "id": "98f49115.c6a88",
        "type": "function",
        "z": "9963931.9232c7",
        "g": "b83af794.4bec68",
        "name": "TotalOperatingHours Reset",
        "func": "if (msg.payload == \"reset\") {\n     flow.set(\"nozzlecount\",0);\n    flow.set(\"heatbreakcount\",0);\n    flow.set(\"PTFECount\",0);\n    flow.set(\"MaintenanceCount\",0);\n   \n}\n\nif (msg.payload == \"resetNozzle\") {\n      flow.set(\"nozzlecount\",0);\n}\n\nif (msg.payload == \"resetHeatbreak\") {\n      flow.set(\"heatbreakcount\",0);\n}\n\nif (msg.payload == \"resetPTFE\") {\n      flow.set(\"PTFECount\",0);\n}\n\nif (msg.payload == \"resetMaintenanceCount\") {\n      flow.set(\"MaintenanceCount\",0);\n}\n\n\n\n\nif (msg.payload == \"Printing\")\n{\n    flow.set(\"status\",\"run\");\n}\nelse {\n    flow.set(\"status\",\"stop\")\n}\n",
        "outputs": 0,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is deployed.\n// Code added here will be run once\n// whenever the node is deployed.\n",
        "finalize": "",
        "x": 480,
        "y": 400,
        "wires": []
    },
    {
        "id": "2464e0ea.8854",
        "type": "inject",
        "z": "9963931.9232c7",
        "g": "b83af794.4bec68",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 130,
        "y": 560,
        "wires": [
            [
                "aeeace25.46d86"
            ]
        ]
    },
    {
        "id": "aeeace25.46d86",
        "type": "function",
        "z": "9963931.9232c7",
        "g": "b83af794.4bec68",
        "name": "TOHCounter",
        "func": "var status = flow.get(\"status\")  || \"stop\";\nvar nozzlecount  = flow.get(\"nozzlecount\");\nvar heatbreakcount  = flow.get(\"heatbreakcount\") ;\nvar PTFECount  = flow.get(\"PTFECount\") || 0;\nvar MaintenanceCount  = flow.get(\"MaintenanceCount\") || 0;\n\nvar JsonObj;\n\nif (status == \"run\"){\n    nozzlecount = nozzlecount +1;\n    heatbreakcount = heatbreakcount +1;\n    PTFECount = PTFECount +1;\n    MaintenanceCount = MaintenanceCount +1;\n}\n\nflow.set(\"nozzlecount\",nozzlecount);\nflow.set(\"heatbreakcount\",heatbreakcount);\nflow.set(\"PTFECount\",PTFECount);\nflow.set(\"MaintenanceCount\",MaintenanceCount);\n\nmsg.mystatus = status;\n\nmsg.payload = {\n    AnycubicHNozzle: Number(nozzlecount), \n    AnycubicHHeatbreak: Number(heatbreakcount),\n    AnycubicHPTFE: Number(PTFECount),\n    AnycubicMaintenance: Number(MaintenanceCount)\n}; \nnode.status({fill:\"green\",shape:\"ring\",text: status});\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 270,
        "y": 560,
        "wires": [
            [
                "6c3ad4d5.7c797c",
                "5eb17b01.40f1d4"
            ]
        ]
    },
    {
        "id": "76c727f9.1bd188",
        "type": "inject",
        "z": "9963931.9232c7",
        "g": "b83af794.4bec68",
        "name": "Reset Nozzle",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "resetNozzle",
        "payloadType": "str",
        "x": 160,
        "y": 340,
        "wires": [
            [
                "98f49115.c6a88"
            ]
        ]
    },
    {
        "id": "4e87f92e.0671f8",
        "type": "inject",
        "z": "9963931.9232c7",
        "g": "b83af794.4bec68",
        "name": "Reset Heatbreak",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "resetHeatbreak",
        "payloadType": "str",
        "x": 170,
        "y": 380,
        "wires": [
            [
                "98f49115.c6a88"
            ]
        ]
    },
    {
        "id": "48c974e1.caa28c",
        "type": "inject",
        "z": "9963931.9232c7",
        "g": "b83af794.4bec68",
        "name": "Reset PTFE",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "resetPTFE",
        "payloadType": "str",
        "x": 150,
        "y": 420,
        "wires": [
            [
                "98f49115.c6a88"
            ]
        ]
    },
    {
        "id": "6c3ad4d5.7c797c",
        "type": "debug",
        "z": "9963931.9232c7",
        "g": "b83af794.4bec68",
        "name": "CounterDatabaseOutput",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 530,
        "y": 560,
        "wires": []
    },
    {
        "id": "b2c4112c.bc82e",
        "type": "influxdb out",
        "z": "9963931.9232c7",
        "g": "b83af794.4bec68",
        "influxdb": "e3f4c3e8.b52ee",
        "name": "AnyI3Hours",
        "measurement": "AnyI3Hours",
        "precision": "",
        "retentionPolicy": "",
        "x": 730,
        "y": 500,
        "wires": []
    },
    {
        "id": "5eb17b01.40f1d4",
        "type": "delay",
        "z": "9963931.9232c7",
        "g": "b83af794.4bec68",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "5",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "x": 520,
        "y": 500,
        "wires": [
            [
                "b2c4112c.bc82e"
            ]
        ]
    },
    {
        "id": "2d7342af.ce708e",
        "type": "comment",
        "z": "9963931.9232c7",
        "g": "b83af794.4bec68",
        "name": "Printer Total Operating Hours",
        "info": "",
        "x": 500,
        "y": 240,
        "wires": []
    },
    {
        "id": "4965a0c.3a0ac6",
        "type": "inject",
        "z": "9963931.9232c7",
        "g": "b83af794.4bec68",
        "name": "reset Maintenance",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "resetMaintenanceCount",
        "payloadType": "str",
        "x": 390,
        "y": 300,
        "wires": [
            [
                "98f49115.c6a88"
            ]
        ]
    },
    {
        "id": "3b155418.9a8f0c",
        "type": "influxdb in",
        "z": "9963931.9232c7",
        "g": "b83af794.4bec68",
        "influxdb": "e3f4c3e8.b52ee",
        "name": "Read From DB",
        "query": "select max(*) FROM autogen.AnyI3Hours",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "",
        "x": 420,
        "y": 660,
        "wires": [
            [
                "6f4763e9.e5576c",
                "532bc566.df7b1c"
            ]
        ]
    },
    {
        "id": "75749182.28289",
        "type": "inject",
        "z": "9963931.9232c7",
        "g": "b83af794.4bec68",
        "name": "Read Values From DB",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 660,
        "wires": [
            [
                "3b155418.9a8f0c"
            ]
        ]
    },
    {
        "id": "6f4763e9.e5576c",
        "type": "function",
        "z": "9963931.9232c7",
        "g": "b83af794.4bec68",
        "name": "Set Flow Values",
        "func": "    flow.set(\"nozzlecount\",msg.payload[0].max_AnycubicHNozzle);\n    flow.set(\"heatbreakcount\",msg.payload[0].max_AnycubicHHeatbreak);\n    flow.set(\"PTFECount\",msg.payload[0].max_AnycubicHPTFE);\n    flow.set(\"MaintenanceCount\",msg.payload[0].max_AnycubicMaintenance);\n   \n",
        "outputs": 0,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is deployed.\n// Code added here will be run once\n// whenever the node is deployed.\n",
        "finalize": "",
        "x": 640,
        "y": 660,
        "wires": []
    },
    {
        "id": "532bc566.df7b1c",
        "type": "debug",
        "z": "9963931.9232c7",
        "g": "b83af794.4bec68",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 620,
        "wires": []
    },
    {
        "id": "f665e232.83018",
        "type": "inject",
        "z": "511989b1.670cc8",
        "g": "18ca9346.bdbedd",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "OFF",
        "payloadType": "str",
        "x": 160,
        "y": 960,
        "wires": [
            [
                "54087a9f.9d1c24"
            ]
        ]
    },
    {
        "id": "6e793f78.19688",
        "type": "inject",
        "z": "511989b1.670cc8",
        "g": "18ca9346.bdbedd",
        "name": "Set Bedtemp",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "octoprint/bedtemp",
        "payload": "{\"temp\":30}",
        "payloadType": "json",
        "x": 960,
        "y": 1080,
        "wires": [
            [
                "550eb938.78f938"
            ]
        ]
    },
    {
        "id": "c772a959.162c98",
        "type": "mqtt in",
        "z": "6f61cfd3.3d721",
        "g": "73d12632.94b388",
        "name": "",
        "topic": "ValveControl/+",
        "qos": "0",
        "datatype": "auto",
        "broker": "19cf2a10.f9d4a6",
        "x": 600,
        "y": 560,
        "wires": [
            [
                "3bb0fb40.e717e4",
                "d5959449.a47808"
            ]
        ]
    },
    {
        "id": "3bb0fb40.e717e4",
        "type": "debug",
        "z": "6f61cfd3.3d721",
        "g": "73d12632.94b388",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 950,
        "y": 600,
        "wires": []
    },
    {
        "id": "cb6213d.83258f",
        "type": "mqtt out",
        "z": "6f61cfd3.3d721",
        "g": "5d7bb23e.6c04ec",
        "name": "",
        "topic": "ValveControl/SetInt",
        "qos": "0",
        "retain": "",
        "broker": "19cf2a10.f9d4a6",
        "x": 370,
        "y": 1280,
        "wires": []
    },
    {
        "id": "97b9ac13.ca45c",
        "type": "inject",
        "z": "6f61cfd3.3d721",
        "g": "5d7bb23e.6c04ec",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "3",
        "payloadType": "num",
        "x": 130,
        "y": 1280,
        "wires": [
            [
                "cb6213d.83258f"
            ]
        ]
    },
    {
        "id": "d5959449.a47808",
        "type": "function",
        "z": "6f61cfd3.3d721",
        "g": "73d12632.94b388",
        "name": "",
        "func": "var topic=msg.topic;\nswitch(topic){\n    case \"ValveControl/TempIn\":\n        msg.payload={\n            TempIn: Number(msg.payload),\n        }\n        \n        return msg;\n    case \"ValveControl/TempOut\":\n        msg.payload={\n            TempOut: Number(msg.payload),\n        }\n        \n        return msg;\n    case \"ValveControl/ActPos\":\n        msg.payload={\n            ValveVolt: Number(msg.payload),\n        }\n        return msg;\n    case \"ValveControl/Mode\":\n        msg.payload={\n            ValveMode: Number(msg.payload),\n        }\n        return msg;\n    case \"ValveControl/ManAuto\":\n        msg.payload={\n            ValveControl: msg.payload,\n        }\n        return msg;\n    case \"ValveControl/Light\":\n        msg.payload={\n            WVLight: Number(msg.payload),\n        }\n        return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 800,
        "y": 560,
        "wires": [
            [
                "ecec7acf.215678"
            ]
        ]
    },
    {
        "id": "ecec7acf.215678",
        "type": "influxdb out",
        "z": "6f61cfd3.3d721",
        "g": "73d12632.94b388",
        "influxdb": "e3f4c3e8.b52ee",
        "name": "ValveControl",
        "measurement": "ValveControl",
        "precision": "",
        "retentionPolicy": "two_month",
        "database": "",
        "retentionPolicyV18Flux": "",
        "org": "",
        "bucket": "",
        "x": 970,
        "y": 560,
        "wires": []
    },
    {
        "id": "a01343a.a42a9c",
        "type": "clock-timer",
        "z": "6f61cfd3.3d721",
        "g": "5d7bb23e.6c04ec",
        "name": "Clock ",
        "topic": "ValvPos",
        "addIdType": "none",
        "addId": "",
        "positionConfig": "9a5a8534.25d4d8",
        "autoTrigger": true,
        "autoTriggerTime": "120000",
        "startDelayTime": 10000,
        "contextStore": "",
        "results": [
            {
                "p": "",
                "pt": "msgTopic",
                "v": "",
                "vt": "topic"
            },
            {
                "p": "",
                "pt": "msgPayload",
                "v": "",
                "vt": "payload"
            },
            {
                "p": "timeCtrl",
                "pt": "msg",
                "v": "",
                "vt": "ctrlObj"
            }
        ],
        "overwriteExpire": "",
        "rules": [
            {
                "index": 0,
                "name": "Fr√ºh Aufheizen",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [],
                "payload": {
                    "type": "str",
                    "value": "4",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000,
                    "format": ""
                },
                "topic": "ClockValvePos",
                "importance": 0,
                "resetOverwrite": false,
                "time": {
                    "type": "entered",
                    "value": "6:15",
                    "operator": 1,
                    "operatorText": "‚Üß von",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000,
                    "days": "*",
                    "months": "*"
                },
                "description": "<div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ‚Üß von <var>6:15</var></div><div><div class=\"indent-payload-text\"><i class=\"fa fa-step-backward\" aria-hidden=\"true\"></i> <span>Payload:</span> <var>\"4\"</var></div><div class=\"indent-topic-text\"> <i class=\"fa fa-tasks\" aria-hidden=\"true\"></i><span>Topic: </span> <var>ClockValvePos</var></div></div>"
            },
            {
                "index": 1,
                "name": "Tag Absenkung ",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [],
                "payload": {
                    "type": "str",
                    "value": "3",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000,
                    "format": ""
                },
                "topic": "ClockValvePos",
                "importance": 0,
                "resetOverwrite": false,
                "time": {
                    "type": "entered",
                    "value": "9:30",
                    "operator": 1,
                    "operatorText": "‚Üß von",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000,
                    "days": "*",
                    "months": "*"
                },
                "description": "<div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ‚Üß von <var>9:30</var></div><div><div class=\"indent-payload-text\"><i class=\"fa fa-step-backward\" aria-hidden=\"true\"></i> <span>Payload:</span> <var>\"3\"</var></div><div class=\"indent-topic-text\"> <i class=\"fa fa-tasks\" aria-hidden=\"true\"></i><span>Topic: </span> <var>ClockValvePos</var></div></div>"
            },
            {
                "index": 2,
                "name": "Mittag Aufheizen",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [],
                "payload": {
                    "type": "str",
                    "value": "4",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000,
                    "format": ""
                },
                "topic": "ClockValvePos",
                "importance": 0,
                "resetOverwrite": false,
                "time": {
                    "type": "entered",
                    "value": "11:30",
                    "operator": 1,
                    "operatorText": "‚Üß von",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000,
                    "days": "*",
                    "months": "*"
                },
                "description": "<div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ‚Üß von <var>11:30</var></div><div><div class=\"indent-payload-text\"><i class=\"fa fa-step-backward\" aria-hidden=\"true\"></i> <span>Payload:</span> <var>\"4\"</var></div><div class=\"indent-topic-text\"> <i class=\"fa fa-tasks\" aria-hidden=\"true\"></i><span>Topic: </span> <var>ClockValvePos</var></div></div>"
            },
            {
                "index": 3,
                "name": "Nachmittag Absenkung",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [],
                "payload": {
                    "type": "str",
                    "value": "3",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000,
                    "format": ""
                },
                "topic": "ClockValvePos",
                "importance": 0,
                "resetOverwrite": false,
                "time": {
                    "type": "entered",
                    "value": "12:30",
                    "operator": 1,
                    "operatorText": "‚Üß von",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000,
                    "days": "*",
                    "months": "*"
                },
                "description": "<div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ‚Üß von <var>12:30</var></div><div><div class=\"indent-payload-text\"><i class=\"fa fa-step-backward\" aria-hidden=\"true\"></i> <span>Payload:</span> <var>\"3\"</var></div><div class=\"indent-topic-text\"> <i class=\"fa fa-tasks\" aria-hidden=\"true\"></i><span>Topic: </span> <var>ClockValvePos</var></div></div>"
            },
            {
                "index": 4,
                "name": "Abend",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [],
                "payload": {
                    "type": "str",
                    "value": "4",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000,
                    "format": ""
                },
                "topic": "ClockValvePos",
                "importance": 0,
                "resetOverwrite": false,
                "time": {
                    "type": "entered",
                    "value": "15:45",
                    "operator": 1,
                    "operatorText": "‚Üß von",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000,
                    "days": "*",
                    "months": "*"
                },
                "description": "<div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ‚Üß von <var>15:45</var></div><div><div class=\"indent-payload-text\"><i class=\"fa fa-step-backward\" aria-hidden=\"true\"></i> <span>Payload:</span> <var>\"4\"</var></div><div class=\"indent-topic-text\"> <i class=\"fa fa-tasks\" aria-hidden=\"true\"></i><span>Topic: </span> <var>ClockValvePos</var></div></div>"
            },
            {
                "index": 5,
                "name": "Sp√§tabend Intervall",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [],
                "payload": {
                    "type": "str",
                    "value": "2",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000,
                    "format": ""
                },
                "topic": "ClockValvePos",
                "importance": 0,
                "resetOverwrite": false,
                "time": {
                    "type": "entered",
                    "value": "22:00",
                    "operator": 1,
                    "operatorText": "‚Üß von",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000,
                    "days": "*",
                    "months": "*"
                },
                "description": "<div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ‚Üß von <var>22:00</var></div><div><div class=\"indent-payload-text\"><i class=\"fa fa-step-backward\" aria-hidden=\"true\"></i> <span>Payload:</span> <var>\"2\"</var></div><div class=\"indent-topic-text\"> <i class=\"fa fa-tasks\" aria-hidden=\"true\"></i><span>Topic: </span> <var>ClockValvePos</var></div></div>"
            },
            {
                "index": 6,
                "name": "Nachtabschaltung",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [],
                "payload": {
                    "type": "str",
                    "value": "0",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000,
                    "format": ""
                },
                "topic": "ClockValvePos",
                "importance": 0,
                "resetOverwrite": false,
                "time": {
                    "type": "entered",
                    "value": "23:30",
                    "operator": 1,
                    "operatorText": "‚Üß von",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000,
                    "days": "*",
                    "months": "*"
                },
                "description": "<div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ‚Üß von <var>23:30</var></div><div><div class=\"indent-payload-text\"><i class=\"fa fa-step-backward\" aria-hidden=\"true\"></i> <span>Payload:</span> <var>\"0\"</var></div><div class=\"indent-topic-text\"> <i class=\"fa fa-tasks\" aria-hidden=\"true\"></i><span>Topic: </span> <var>ClockValvePos</var></div></div>"
            }
        ],
        "payloadDefault": "",
        "payloadDefaultType": "none",
        "payloadDefaultTimeFormat": 0,
        "payloadDefaultOffset": 0,
        "payloadDefaultOffsetType": "none",
        "payloadDefaultOffsetMultiplier": 60000,
        "x": 120,
        "y": 1160,
        "wires": [
            [
                "8583dd1c.64052",
                "3c079b7c.3bb374"
            ],
            []
        ]
    },
    {
        "id": "8583dd1c.64052",
        "type": "debug",
        "z": "6f61cfd3.3d721",
        "g": "5d7bb23e.6c04ec",
        "name": "Heating Timer",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 720,
        "y": 1060,
        "wires": []
    },
    {
        "id": "130dd598.a91e6a",
        "type": "comment",
        "z": "6f61cfd3.3d721",
        "g": "5d7bb23e.6c04ec",
        "name": "Intervall Stufe 1 und 2",
        "info": "Intervall f√ºr Stufe 1/2",
        "x": 520,
        "y": 820,
        "wires": []
    },
    {
        "id": "f66103f.927b7",
        "type": "inject",
        "z": "8be0833b.6c16c",
        "g": "1df9ccb1.d6a403",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "10",
        "payloadType": "str",
        "x": 130,
        "y": 600,
        "wires": [
            [
                "f67b9f12.7be84"
            ]
        ]
    },
    {
        "id": "3c1d8a68.06ff96",
        "type": "inject",
        "z": "8be0833b.6c16c",
        "g": "1df9ccb1.d6a403",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "40",
        "payloadType": "num",
        "x": 130,
        "y": 640,
        "wires": [
            [
                "f67b9f12.7be84"
            ]
        ]
    },
    {
        "id": "d8c78971.e612f8",
        "type": "inject",
        "z": "8be0833b.6c16c",
        "g": "1df9ccb1.d6a403",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "100",
        "payloadType": "num",
        "x": 130,
        "y": 680,
        "wires": [
            [
                "f67b9f12.7be84"
            ]
        ]
    },
    {
        "id": "9a2c8050.ebe09",
        "type": "mqtt in",
        "z": "8be0833b.6c16c",
        "g": "1df9ccb1.d6a403",
        "name": "EssTischShelly",
        "topic": "shellies/ EsstischRollo/temperature",
        "qos": "2",
        "datatype": "utf8",
        "broker": "19cf2a10.f9d4a6",
        "x": 140,
        "y": 740,
        "wires": [
            [
                "1859d091.dd706f"
            ]
        ]
    },
    {
        "id": "aa74dbbf.f1ef68",
        "type": "mqtt out",
        "z": "8be0833b.6c16c",
        "name": "",
        "topic": "shellies/ EsstischRollo/command",
        "qos": "",
        "retain": "",
        "broker": "19cf2a10.f9d4a6",
        "x": 400,
        "y": 1140,
        "wires": []
    },
    {
        "id": "1d13965b.7a97ca",
        "type": "inject",
        "z": "8be0833b.6c16c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "announce",
        "payloadType": "str",
        "x": 100,
        "y": 1120,
        "wires": [
            [
                "aa74dbbf.f1ef68"
            ]
        ]
    },
    {
        "id": "1859d091.dd706f",
        "type": "debug",
        "z": "8be0833b.6c16c",
        "g": "1df9ccb1.d6a403",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 450,
        "y": 740,
        "wires": []
    },
    {
        "id": "c5905697.f8b928",
        "type": "inject",
        "z": "8be0833b.6c16c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "open",
        "payloadType": "str",
        "x": 90,
        "y": 1180,
        "wires": [
            [
                "87fc4589.65abc8"
            ]
        ]
    },
    {
        "id": "87fc4589.65abc8",
        "type": "mqtt out",
        "z": "8be0833b.6c16c",
        "name": "",
        "topic": "shellies/ EsstischRollo/roller/0/command",
        "qos": "1",
        "retain": "false",
        "broker": "19cf2a10.f9d4a6",
        "x": 420,
        "y": 1220,
        "wires": []
    },
    {
        "id": "5622f150.ed3d8",
        "type": "mqtt in",
        "z": "8be0833b.6c16c",
        "g": "1df9ccb1.d6a403",
        "name": "",
        "topic": "shellies/ EsstischRollo/roller/0/pos",
        "qos": "2",
        "datatype": "utf8",
        "broker": "19cf2a10.f9d4a6",
        "x": 200,
        "y": 800,
        "wires": [
            [
                "b33c68f6.15ed68"
            ]
        ]
    },
    {
        "id": "5ba85d7b.d81d14",
        "type": "inject",
        "z": "8be0833b.6c16c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "stop",
        "payloadType": "str",
        "x": 70,
        "y": 1220,
        "wires": [
            [
                "87fc4589.65abc8"
            ]
        ]
    },
    {
        "id": "55231e98.8fbd5",
        "type": "inject",
        "z": "8be0833b.6c16c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "close",
        "payloadType": "str",
        "x": 90,
        "y": 1260,
        "wires": [
            [
                "87fc4589.65abc8"
            ]
        ]
    },
    {
        "id": "f67b9f12.7be84",
        "type": "mqtt out",
        "z": "8be0833b.6c16c",
        "g": "1df9ccb1.d6a403",
        "name": "",
        "topic": "shellies/ EsstischRollo/roller/0/command/pos",
        "qos": "",
        "retain": "",
        "broker": "19cf2a10.f9d4a6",
        "x": 510,
        "y": 640,
        "wires": []
    },
    {
        "id": "756412ec.ee1d2c",
        "type": "mqtt in",
        "z": "8be0833b.6c16c",
        "g": "1df9ccb1.d6a403",
        "name": "",
        "topic": "shellies/ EsstischRollo/roller/0/energy",
        "qos": "2",
        "datatype": "json",
        "broker": "19cf2a10.f9d4a6",
        "x": 210,
        "y": 860,
        "wires": [
            [
                "4863a60b.b49858"
            ]
        ]
    },
    {
        "id": "9d2cfa3.8a5d408",
        "type": "mqtt in",
        "z": "8be0833b.6c16c",
        "g": "1df9ccb1.d6a403",
        "name": "",
        "topic": "shellies/ EsstischRollo/settings/roller/0",
        "qos": "2",
        "datatype": "json",
        "broker": "19cf2a10.f9d4a6",
        "x": 210,
        "y": 920,
        "wires": [
            [
                "1048bdd7.1dd462"
            ]
        ]
    },
    {
        "id": "b33c68f6.15ed68",
        "type": "debug",
        "z": "8be0833b.6c16c",
        "g": "1df9ccb1.d6a403",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 450,
        "y": 800,
        "wires": []
    },
    {
        "id": "4863a60b.b49858",
        "type": "debug",
        "z": "8be0833b.6c16c",
        "g": "1df9ccb1.d6a403",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 450,
        "y": 860,
        "wires": []
    },
    {
        "id": "1048bdd7.1dd462",
        "type": "debug",
        "z": "8be0833b.6c16c",
        "g": "1df9ccb1.d6a403",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 450,
        "y": 920,
        "wires": []
    },
    {
        "id": "b20b772d.b858d8",
        "type": "home-connect-request",
        "z": "8c0dc70a.3a1008",
        "auth": "3778d06e.5d445",
        "name": "Sp√ºlmaschine",
        "tag": "settings",
        "operationId": "get_settings",
        "haid": "011010386568004449",
        "body": "",
        "optionkey": "",
        "programkey": "",
        "settingkey": "",
        "statuskey": "BSH.Common.Status.RemoteControlStartAllowed",
        "imagekey": "",
        "x": 340,
        "y": 80,
        "wires": [
            [
                "4dd95472.f323ec"
            ]
        ]
    },
    {
        "id": "4dd95472.f323ec",
        "type": "debug",
        "z": "8c0dc70a.3a1008",
        "name": "Sp√ºlmaschine",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 120,
        "wires": []
    },
    {
        "id": "e4dabaed.0bac08",
        "type": "inject",
        "z": "8c0dc70a.3a1008",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 150,
        "y": 100,
        "wires": [
            [
                "b20b772d.b858d8"
            ]
        ]
    },
    {
        "id": "dec25022.30146",
        "type": "debug",
        "z": "8c0dc70a.3a1008",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 760,
        "y": 240,
        "wires": []
    },
    {
        "id": "541926fd.840d58",
        "type": "home-connect-request",
        "z": "8c0dc70a.3a1008",
        "auth": "3778d06e.5d445",
        "name": "",
        "tag": "default",
        "operationId": "get_home_appliances",
        "haid": "",
        "body": "",
        "optionkey": "",
        "programkey": "",
        "settingkey": "",
        "statuskey": "",
        "imagekey": "",
        "x": 250,
        "y": 300,
        "wires": [
            [
                "dec25022.30146"
            ]
        ]
    },
    {
        "id": "5eac9c57.76c314",
        "type": "mqtt out",
        "z": "7e5a345d.05161c",
        "name": "ShutterPosition",
        "topic": "cmnd/RolloEsstisch/ShutterPosition",
        "qos": "",
        "retain": "",
        "broker": "19cf2a10.f9d4a6",
        "x": 940,
        "y": 740,
        "wires": []
    },
    {
        "id": "58bf6223.bb576c",
        "type": "mqtt in",
        "z": "7e5a345d.05161c",
        "g": "35db94c.3bef86c",
        "name": "",
        "topic": "stat/RolloEsstisch/+",
        "qos": "0",
        "datatype": "utf8",
        "broker": "19cf2a10.f9d4a6",
        "x": 850,
        "y": 100,
        "wires": [
            [
                "890df71e.b306e8"
            ]
        ]
    },
    {
        "id": "890df71e.b306e8",
        "type": "debug",
        "z": "7e5a345d.05161c",
        "g": "35db94c.3bef86c",
        "name": "RolloEsstisch Status",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1080,
        "y": 100,
        "wires": []
    },
    {
        "id": "fd873bd.c5447c8",
        "type": "mqtt in",
        "z": "7e5a345d.05161c",
        "g": "35db94c.3bef86c",
        "name": "",
        "topic": "tele/RolloEsstisch/+",
        "qos": "1",
        "datatype": "auto",
        "broker": "19cf2a10.f9d4a6",
        "x": 850,
        "y": 160,
        "wires": [
            [
                "1de0c489.49f2fb"
            ]
        ]
    },
    {
        "id": "200ebf4e.96e24",
        "type": "mqtt out",
        "z": "7e5a345d.05161c",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "broker": "19cf2a10.f9d4a6",
        "x": 810,
        "y": 340,
        "wires": []
    },
    {
        "id": "6ac2e536.abb7ec",
        "type": "blind-control",
        "z": "7e5a345d.05161c",
        "name": "RolloEsstisch",
        "topic": "",
        "addIdType": "none",
        "addId": "",
        "positionConfig": "9a5a8534.25d4d8",
        "autoTrigger": true,
        "autoTriggerTime": "600000",
        "startDelayTime": 10000,
        "contextStore": "",
        "results": [
            {
                "p": "",
                "pt": "msgTopic",
                "v": "",
                "vt": "topic"
            },
            {
                "p": "",
                "pt": "msgPayload",
                "v": "",
                "vt": "level"
            },
            {
                "p": "slat",
                "pt": "msg",
                "v": "",
                "vt": "slat"
            },
            {
                "p": "blindCtrl",
                "pt": "msg",
                "v": "",
                "vt": "ctrlObj"
            }
        ],
        "blindIncrement": "1",
        "blindOpenPos": "100",
        "blindClosedPos": "0",
        "blindPosReverse": false,
        "blindPosDefault": "open (max)",
        "blindPosDefaultType": "levelFixed",
        "slatPosDefault": "",
        "slatPosDefaultType": "none",
        "overwriteExpire": "1800000",
        "rules": [
            {
                "index": 0,
                "name": "HolidayWeekend",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [
                    {
                        "valueType": "global",
                        "value": "day.today.isWeekendOrHoliday",
                        "operator": "true",
                        "operatorText": "ist true",
                        "thresholdType": "num",
                        "threshold": "0"
                    }
                ],
                "level": {
                    "type": "levelFixed",
                    "value": "closed (min)",
                    "operator": 0,
                    "operatorText": "‚Üï  Absolut"
                },
                "slat": {
                    "type": "none",
                    "value": ""
                },
                "topic": "",
                "resetOverwrite": false,
                "importance": 0,
                "time": {
                    "type": "entered",
                    "value": "7:45",
                    "operator": 0,
                    "operatorText": "‚Ü• bis",
                    "offsetType": "num",
                    "offset": "1",
                    "multiplier": 60000,
                    "days": "*",
                    "months": "*"
                },
                "description": "<div><i class=\"fa fa-code-fork\" aria-hidden=\"true\"></i> <var>global.day.today.isWeekendOrHoliday</var> ist true</div><div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ‚Ü• bis <var>7:45</var> + 00:01</div><div><div class=\"indent-level-text\"> <i class=\"fa fa-angle-down\" aria-hidden=\"true\"></i><span>Rollladenposition: </span> ‚Üï  Absolut <var>geschlossen (min)</var></div></div>"
            },
            {
                "index": 1,
                "name": "SonAufgAuf ",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [],
                "level": {
                    "type": "levelFixed",
                    "value": "closed (min)",
                    "operator": 0,
                    "operatorText": "‚Üï  Absolut"
                },
                "slat": {
                    "type": "none",
                    "value": ""
                },
                "topic": "",
                "resetOverwrite": false,
                "importance": 0,
                "time": {
                    "type": "pdsTime",
                    "value": "sunriseStart",
                    "operator": 0,
                    "operatorText": "‚Ü• bis",
                    "offsetType": "num",
                    "offset": "10",
                    "multiplier": 60000,
                    "days": "*",
                    "months": "*"
                },
                "timeMin": {
                    "type": "entered",
                    "value": "7:00",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000
                },
                "timeMax": {
                    "type": "entered",
                    "value": "9:00",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000
                },
                "description": "<div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ‚Ü• bis <var>Sonnenaufgang Beginn</var> + 00:10<div class=\"indent-time-text\"><i class=\"fa fa-step-backward\" aria-hidden=\"true\"></i> <span>fr√ºhestens (min)</span> <var>7:00</var></div><div class=\"indent-time-text\"><i class=\"fa fa-step-forward\" aria-hidden=\"true\"></i> <span>sp√§testens (max)</span> <var>9:00</var></div></div><div><div class=\"indent-level-text\"> <i class=\"fa fa-angle-down\" aria-hidden=\"true\"></i><span>Rollladenposition: </span> ‚Üï  Absolut <var>geschlossen (min)</var></div></div>"
            },
            {
                "index": 2,
                "name": "Wetter Regen",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [
                    {
                        "valueType": "msg",
                        "value": "WeatherID",
                        "operator": "gte",
                        "operatorText": ">=",
                        "thresholdType": "num",
                        "threshold": "502"
                    },
                    {
                        "condition": 2,
                        "conditionText": "und",
                        "valueType": "msg",
                        "value": "WeatherID",
                        "operator": "lt",
                        "operatorText": "<",
                        "thresholdType": "num",
                        "threshold": "600"
                    }
                ],
                "level": {
                    "type": "levelFixed",
                    "value": "33%",
                    "operator": 0,
                    "operatorText": "‚Üï  Absolut"
                },
                "slat": {
                    "type": "none",
                    "value": ""
                },
                "topic": "Weather Rain Condition",
                "resetOverwrite": false,
                "importance": 0,
                "description": "<div><i class=\"fa fa-code-fork\" aria-hidden=\"true\"></i> <var>msg.WeatherID</var> >= 502&nbsp;<strong>und</strong><br/><span class=\"indent-enh-text\" >&nbsp;</span><var>msg.WeatherID</var> < 600</div><div><div class=\"indent-level-text\"> <i class=\"fa fa-angle-down\" aria-hidden=\"true\"></i><span>Rollladenposition: </span> ‚Üï  Absolut <var>33%</var></div><div class=\"indent-topic-text\"> <i class=\"fa fa-tasks\" aria-hidden=\"true\"></i><span>Topic: </span> <var>Weather Rain Condition</var></div></div>"
            },
            {
                "index": 3,
                "name": "Wetter Gewitter",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [
                    {
                        "valueType": "msg",
                        "value": "WeatherID",
                        "operator": "gte",
                        "operatorText": ">=",
                        "thresholdType": "num",
                        "threshold": "201"
                    },
                    {
                        "condition": 2,
                        "conditionText": "und",
                        "valueType": "msg",
                        "value": "WeatherID",
                        "operator": "lt",
                        "operatorText": "<",
                        "thresholdType": "num",
                        "threshold": "235"
                    }
                ],
                "level": {
                    "type": "levelFixed",
                    "value": "25%",
                    "operator": 0,
                    "operatorText": "‚Üï  Absolut"
                },
                "slat": {
                    "type": "none",
                    "value": ""
                },
                "topic": "Weather Thunderstorm Condition",
                "resetOverwrite": false,
                "importance": 0,
                "description": "<div><i class=\"fa fa-code-fork\" aria-hidden=\"true\"></i> <var>msg.WeatherID</var> >= 201&nbsp;<strong>und</strong><br/><span class=\"indent-enh-text\" >&nbsp;</span><var>msg.WeatherID</var> < 235</div><div><div class=\"indent-level-text\"> <i class=\"fa fa-angle-down\" aria-hidden=\"true\"></i><span>Rollladenposition: </span> ‚Üï  Absolut <var>25%</var></div><div class=\"indent-topic-text\"> <i class=\"fa fa-tasks\" aria-hidden=\"true\"></i><span>Topic: </span> <var>Weather Thunderstorm Condition</var></div></div>"
            },
            {
                "index": 4,
                "name": "Wetter Schnee",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [
                    {
                        "valueType": "msg",
                        "value": "WeatherID",
                        "operator": "gte",
                        "operatorText": ">=",
                        "thresholdType": "num",
                        "threshold": "602"
                    },
                    {
                        "condition": 2,
                        "conditionText": "und",
                        "valueType": "msg",
                        "value": "WeatherID",
                        "operator": "lt",
                        "operatorText": "<",
                        "thresholdType": "num",
                        "threshold": "700"
                    }
                ],
                "level": {
                    "type": "levelFixed",
                    "value": "50%",
                    "operator": 0,
                    "operatorText": "‚Üï  Absolut"
                },
                "slat": {
                    "type": "none",
                    "value": ""
                },
                "topic": "Weather Snow Condition",
                "resetOverwrite": false,
                "importance": 0,
                "description": "<div><i class=\"fa fa-code-fork\" aria-hidden=\"true\"></i> <var>msg.WeatherID</var> >= 602&nbsp;<strong>und</strong><br/><span class=\"indent-enh-text\" >&nbsp;</span><var>msg.WeatherID</var> < 700</div><div><div class=\"indent-level-text\"> <i class=\"fa fa-angle-down\" aria-hidden=\"true\"></i><span>Rollladenposition: </span> ‚Üï  Absolut <var>50%</var></div><div class=\"indent-topic-text\"> <i class=\"fa fa-tasks\" aria-hidden=\"true\"></i><span>Topic: </span> <var>Weather Snow Condition</var></div></div>"
            },
            {
                "index": 5,
                "name": "AbendsFastZu",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [],
                "level": {
                    "type": "levelFixed",
                    "value": "33%",
                    "operator": 0,
                    "operatorText": "‚Üï  Absolut"
                },
                "slat": {
                    "type": "none",
                    "value": ""
                },
                "topic": "",
                "resetOverwrite": false,
                "importance": 0,
                "time": {
                    "type": "pdsTime",
                    "value": "sunsetStart",
                    "operator": 1,
                    "operatorText": "‚Üß von",
                    "offsetType": "num",
                    "offset": "20",
                    "multiplier": 60000,
                    "days": "*",
                    "months": "*"
                },
                "timeMin": {
                    "type": "entered",
                    "value": "15:30",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000
                },
                "description": "<div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ‚Üß von <var>Sonnenuntergang Beginn</var> + 00:20<div class=\"indent-time-text\"><i class=\"fa fa-step-backward\" aria-hidden=\"true\"></i> <span>fr√ºhestens (min)</span> <var>15:30</var></div></div><div><div class=\"indent-level-text\"> <i class=\"fa fa-angle-down\" aria-hidden=\"true\"></i><span>Rollladenposition: </span> ‚Üï  Absolut <var>33%</var></div></div>"
            },
            {
                "index": 6,
                "name": "SonnenuntergangZu",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [],
                "level": {
                    "type": "levelFixed",
                    "value": "closed (min)",
                    "operator": 0,
                    "operatorText": "‚Üï  Absolut"
                },
                "slat": {
                    "type": "none",
                    "value": ""
                },
                "topic": "",
                "resetOverwrite": false,
                "importance": 0,
                "time": {
                    "type": "pdsTime",
                    "value": "sunsetEnd",
                    "operator": 1,
                    "operatorText": "‚Üß von",
                    "offsetType": "num",
                    "offset": "30",
                    "multiplier": 60000,
                    "days": "*",
                    "months": "*"
                },
                "timeMin": {
                    "type": "entered",
                    "value": "16:30",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000
                },
                "timeMax": {
                    "type": "entered",
                    "value": "22:00",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000
                },
                "description": "<div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ‚Üß von <var>Sonnenuntergang Ende</var> + 00:30<div class=\"indent-time-text\"><i class=\"fa fa-step-backward\" aria-hidden=\"true\"></i> <span>fr√ºhestens (min)</span> <var>16:30</var></div><div class=\"indent-time-text\"><i class=\"fa fa-step-forward\" aria-hidden=\"true\"></i> <span>sp√§testens (max)</span> <var>22:00</var></div></div><div><div class=\"indent-level-text\"> <i class=\"fa fa-angle-down\" aria-hidden=\"true\"></i><span>Rollladenposition: </span> ‚Üï  Absolut <var>geschlossen (min)</var></div></div>"
            }
        ],
        "sunControlMode": 16,
        "sunFloorLengthType": "num",
        "sunFloorLength": "180",
        "sunMinDelta": "5",
        "blindPosMin": "15",
        "blindPosMinType": "num",
        "blindPosMax": "open (max)",
        "blindPosMaxType": "levelFixed",
        "blindOpenPosOffset": "",
        "blindClosedPosOffset": "",
        "sunSlat": "",
        "sunSlatType": "none",
        "smoothTime": "",
        "sunTopic": "SunShading",
        "windowTopType": "num",
        "windowTop": "205",
        "windowBottomType": "num",
        "windowBottom": "100",
        "windowAzimuthStartType": "numAzimuth",
        "windowAzimuthStart": "204",
        "windowAzimuthEndType": "numAzimuth",
        "windowAzimuthEnd": "274",
        "oversteers": [
            {
                "mode": 0,
                "valueType": "global",
                "value": "TempOut",
                "operator": "lt",
                "operatorText": "<",
                "thresholdType": "num",
                "threshold": "18",
                "onlySunInWindow": true,
                "blindPos": {
                    "type": "levelFixed",
                    "value": "open (max)"
                },
                "slatPos": {
                    "type": "none",
                    "value": ""
                }
            },
            {
                "mode": 1,
                "valueType": "pdsCalcElevation",
                "value": "",
                "operator": "lt",
                "operatorText": "<",
                "thresholdType": "numAltitude",
                "threshold": "5",
                "onlySunInWindow": true,
                "blindPos": {
                    "type": "levelFixed",
                    "value": "open (max)"
                },
                "slatPos": {
                    "type": "none",
                    "value": ""
                }
            },
            {
                "mode": 0,
                "valueType": "msg",
                "value": "clouds",
                "operator": "gte",
                "operatorText": ">=",
                "thresholdType": "num",
                "threshold": "25",
                "onlySunInWindow": true,
                "blindPos": {
                    "type": "levelFixed",
                    "value": "open (max)"
                },
                "slatPos": {
                    "type": "none",
                    "value": ""
                }
            }
        ],
        "oversteerTopic": "CloudsOverwrite",
        "x": 600,
        "y": 740,
        "wires": [
            [
                "5eac9c57.76c314",
                "302bd89a.fafcc8",
                "3c0c4256.7b9c2e",
                "938edda3.2a1e5"
            ],
            []
        ]
    },
    {
        "id": "1de0c489.49f2fb",
        "type": "debug",
        "z": "7e5a345d.05161c",
        "g": "35db94c.3bef86c",
        "name": "RolloEsstisch Tele",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1070,
        "y": 160,
        "wires": []
    },
    {
        "id": "73de636f.d668ec",
        "type": "german-holidays",
        "z": "7e5a345d.05161c",
        "g": "bec8f6bc.d0d348",
        "name": "",
        "topic": "",
        "region": "",
        "holidays": [
            {
                "id": "NEUJAHRSTAG",
                "name": "Neujahrstag",
                "nameAlt": "",
                "character": 2,
                "month": 1,
                "day": 1,
                "nth": 0,
                "dow": 1,
                "plType": "none",
                "plValue": ""
            },
            {
                "id": "HEILIGEDREIKOENIGE",
                "name": "Heilige Drei K√∂nige",
                "nameAlt": "Epiphanias",
                "character": 2,
                "month": 1,
                "day": 6,
                "nth": 0,
                "dow": 6,
                "plType": "none",
                "plValue": ""
            },
            {
                "id": "KARFREITAG",
                "name": "Karfreitag",
                "nameAlt": "",
                "character": 2,
                "month": -1,
                "day": -2,
                "nth": 0,
                "dow": -2,
                "plType": "none",
                "plValue": ""
            },
            {
                "id": "OSTERMONTAG",
                "name": "Ostermontag",
                "nameAlt": "",
                "character": 2,
                "month": -1,
                "day": 1,
                "nth": 0,
                "dow": 1,
                "plType": "none",
                "plValue": ""
            },
            {
                "id": "TAG_DER_ARBEIT",
                "name": "Maifeiertag",
                "nameAlt": "Tag der Arbeit",
                "character": 256,
                "month": 5,
                "day": 1,
                "nth": 0,
                "dow": 1,
                "plType": "none",
                "plValue": ""
            },
            {
                "id": "CHRISTIHIMMELFAHRT",
                "name": "Christi Himmelfahrt",
                "nameAlt": "Vatertag",
                "character": 2,
                "month": -1,
                "day": 39,
                "nth": 5,
                "dow": 4,
                "plType": "none",
                "plValue": ""
            },
            {
                "id": "PFINGSTMONTAG",
                "name": "Pfingstmontag",
                "nameAlt": "",
                "character": 2,
                "month": -1,
                "day": 50,
                "nth": 7,
                "dow": 1,
                "plType": "none",
                "plValue": ""
            },
            {
                "id": "FRONLEICHNAM",
                "name": "Fronleichnam",
                "nameAlt": "",
                "character": 2,
                "month": -1,
                "day": 60,
                "nth": 8,
                "dow": 4,
                "plType": "none",
                "plValue": ""
            },
            {
                "id": "MARIAHIMMELFAHRT",
                "name": "Mari√§ Himmelfahrt",
                "nameAlt": "",
                "character": 1024,
                "month": 8,
                "day": 15,
                "nth": 2,
                "dow": 1,
                "plType": "none",
                "plValue": ""
            },
            {
                "id": "DEUTSCHEEINHEIT",
                "name": "Tag der Deutschen Einheit",
                "nameAlt": "",
                "character": 4,
                "month": 10,
                "day": 3,
                "nth": 0,
                "dow": 3,
                "plType": "none",
                "plValue": ""
            },
            {
                "id": "ALLERHEILIGEN",
                "name": "Allerheiligen",
                "nameAlt": "",
                "character": 2,
                "month": 11,
                "day": 1,
                "nth": 0,
                "dow": 1,
                "plType": "none",
                "plValue": ""
            },
            {
                "id": "ERSTERWEIHNACHTSFEIERTAG",
                "name": "1. Weihnachtstag",
                "nameAlt": "Christtag",
                "character": 2,
                "month": 12,
                "day": 25,
                "nth": 3,
                "dow": 4,
                "plType": "none",
                "plValue": ""
            },
            {
                "id": "ZWEITERWEIHNACHTSFEIERTAG",
                "name": "2. Weihnachtstag",
                "nameAlt": "Stefanitag",
                "character": 2,
                "month": 12,
                "day": 26,
                "nth": 3,
                "dow": 5,
                "plType": "none",
                "plValue": ""
            }
        ],
        "specialdays": [
            {
                "id": "",
                "name": "Geburtstag",
                "nameAlt": "",
                "character": 8,
                "month": 1,
                "day": 12,
                "nth": 1,
                "dow": 5,
                "plType": "none",
                "plValue": ""
            }
        ],
        "x": 340,
        "y": 100,
        "wires": [
            [
                "eb31c6ef.67a2f8"
            ]
        ]
    },
    {
        "id": "f2c7f904.d08ef8",
        "type": "inject",
        "z": "7e5a345d.05161c",
        "g": "bec8f6bc.d0d348",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "10 00 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 100,
        "wires": [
            [
                "73de636f.d668ec"
            ]
        ]
    },
    {
        "id": "6e5f1bdf.1f22e4",
        "type": "inject",
        "z": "7e5a345d.05161c",
        "g": "bec8f6bc.d0d348",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 140,
        "wires": [
            [
                "73de636f.d668ec"
            ]
        ]
    },
    {
        "id": "eb31c6ef.67a2f8",
        "type": "change",
        "z": "7e5a345d.05161c",
        "g": "bec8f6bc.d0d348",
        "name": "Set Global Day",
        "rules": [
            {
                "t": "set",
                "p": "day",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 520,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "302bd89a.fafcc8",
        "type": "debug",
        "z": "7e5a345d.05161c",
        "name": "Esstisch Steuerung Output",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 620,
        "wires": []
    },
    {
        "id": "ceb59201.0651d",
        "type": "openweathermap in",
        "z": "7e5a345d.05161c",
        "name": "Home Weather",
        "wtype": "current",
        "lon": "11.061859",
        "lat": "49.460983",
        "city": "",
        "country": "",
        "language": "de",
        "x": 100,
        "y": 460,
        "wires": [
            [
                "b907c2ad.b1417",
                "e5d7026a.0a239",
                "fd0a15dc.298558"
            ]
        ]
    },
    {
        "id": "54ec2f51.f58c5",
        "type": "debug",
        "z": "7e5a345d.05161c",
        "name": "Nur Clouds",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 460,
        "wires": []
    },
    {
        "id": "b907c2ad.b1417",
        "type": "change",
        "z": "7e5a345d.05161c",
        "name": "Only Clouds",
        "rules": [
            {
                "t": "move",
                "p": "payload.clouds",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 350,
        "y": 460,
        "wires": [
            [
                "54ec2f51.f58c5"
            ]
        ]
    },
    {
        "id": "e5d7026a.0a239",
        "type": "change",
        "z": "7e5a345d.05161c",
        "name": "WeatherID",
        "rules": [
            {
                "t": "move",
                "p": "payload.id",
                "pt": "msg",
                "to": "WeatherID",
                "tot": "msg"
            },
            {
                "t": "move",
                "p": "payload.clouds",
                "pt": "msg",
                "to": "clouds",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 350,
        "y": 500,
        "wires": [
            [
                "48947d58.eae5c4",
                "6ac2e536.abb7ec",
                "d26a7c85.ed299",
                "f69a51fd.3a899"
            ]
        ]
    },
    {
        "id": "48947d58.eae5c4",
        "type": "debug",
        "z": "7e5a345d.05161c",
        "name": "WeatherID",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "WeatherID",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 500,
        "wires": []
    },
    {
        "id": "4fbc55c0.c9f85c",
        "type": "ui_slider",
        "z": "7e5a345d.05161c",
        "name": "RolloEsstischPos",
        "label": "Esstisch",
        "tooltip": "",
        "group": "13a03688.c43e99",
        "order": 3,
        "width": "6",
        "height": "2",
        "passthru": true,
        "outs": "end",
        "topic": "cmnd/RolloEsstisch/ShutterPosition",
        "topicType": "str",
        "min": 0,
        "max": "100",
        "step": 1,
        "x": 490,
        "y": 340,
        "wires": [
            [
                "200ebf4e.96e24"
            ]
        ]
    },
    {
        "id": "7bd02856.8f5288",
        "type": "mqtt in",
        "z": "7e5a345d.05161c",
        "name": "",
        "topic": "stat/RolloEsstisch/SHUTTER1",
        "qos": "2",
        "datatype": "auto",
        "broker": "19cf2a10.f9d4a6",
        "x": 160,
        "y": 340,
        "wires": [
            [
                "4fbc55c0.c9f85c"
            ]
        ]
    },
    {
        "id": "fd0a15dc.298558",
        "type": "ui_text",
        "z": "7e5a345d.05161c",
        "group": "8e157408.1ce3a8",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Wetter",
        "format": "{{msg.payload.detail}}",
        "layout": "row-spread",
        "x": 330,
        "y": 540,
        "wires": []
    },
    {
        "id": "3c0c4256.7b9c2e",
        "type": "ui_text",
        "z": "7e5a345d.05161c",
        "group": "13a03688.c43e99",
        "order": 4,
        "width": "6",
        "height": "1",
        "name": "",
        "label": "Status Esstisch",
        "format": "{{msg.blindCtrl.reason.description}}",
        "layout": "row-spread",
        "x": 940,
        "y": 700,
        "wires": []
    },
    {
        "id": "938edda3.2a1e5",
        "type": "debug",
        "z": "7e5a345d.05161c",
        "name": "EsstischReason",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "blindCtrl.reason.description",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 940,
        "y": 660,
        "wires": []
    },
    {
        "id": "1f1a9b31.1e6da5",
        "type": "inject",
        "z": "7e5a345d.05161c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "setSunDataMinAltitude",
        "payload": "50",
        "payloadType": "num",
        "x": 150,
        "y": 780,
        "wires": [
            [
                "6ac2e536.abb7ec"
            ]
        ]
    },
    {
        "id": "b71e2911.a2d248",
        "type": "inject",
        "z": "7e5a345d.05161c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "setSunDataMinAltitude",
        "payload": "5",
        "payloadType": "num",
        "x": 150,
        "y": 700,
        "wires": [
            [
                "6ac2e536.abb7ec"
            ]
        ]
    },
    {
        "id": "967f00fa.1ae43",
        "type": "inject",
        "z": "7e5a345d.05161c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "setSunDataMinAltitude",
        "payload": "30",
        "payloadType": "num",
        "x": 150,
        "y": 740,
        "wires": [
            [
                "6ac2e536.abb7ec"
            ]
        ]
    },
    {
        "id": "719dd77e.126428",
        "type": "mqtt out",
        "z": "7e5a345d.05161c",
        "name": "ShutterPosition",
        "topic": "cmnd/RolloWohnzimmer/ShutterPosition",
        "qos": "",
        "retain": "",
        "broker": "19cf2a10.f9d4a6",
        "x": 820,
        "y": 1100,
        "wires": []
    },
    {
        "id": "7c0e361f.f82ce8",
        "type": "blind-control",
        "z": "7e5a345d.05161c",
        "name": "RolloWohnzimmer",
        "topic": "",
        "addIdType": "none",
        "addId": "",
        "positionConfig": "9a5a8534.25d4d8",
        "autoTrigger": true,
        "autoTriggerTime": "600000",
        "startDelayTime": 10000,
        "contextStore": "",
        "results": [
            {
                "p": "",
                "pt": "msgTopic",
                "v": "",
                "vt": "topic"
            },
            {
                "p": "",
                "pt": "msgPayload",
                "v": "",
                "vt": "level"
            },
            {
                "p": "slat",
                "pt": "msg",
                "v": "",
                "vt": "slat"
            },
            {
                "p": "blindCtrl",
                "pt": "msg",
                "v": "",
                "vt": "ctrlObj"
            }
        ],
        "blindIncrement": "1",
        "blindOpenPos": "100",
        "blindClosedPos": "0",
        "blindPosReverse": false,
        "blindPosDefault": "open (max)",
        "blindPosDefaultType": "levelFixed",
        "slatPosDefault": "",
        "slatPosDefaultType": "none",
        "overwriteExpire": "",
        "rules": [
            {
                "index": 0,
                "name": "HolidayWeekend",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [
                    {
                        "valueType": "global",
                        "value": "day.today.isWeekendOrHoliday",
                        "operator": "true",
                        "operatorText": "ist true",
                        "thresholdType": "num",
                        "threshold": "0"
                    }
                ],
                "level": {
                    "type": "levelFixed",
                    "value": "closed (min)",
                    "operator": 0,
                    "operatorText": "‚Üï  Absolut"
                },
                "slat": {
                    "type": "none",
                    "value": ""
                },
                "topic": "",
                "resetOverwrite": false,
                "importance": 0,
                "time": {
                    "type": "entered",
                    "value": "7:45",
                    "operator": 0,
                    "operatorText": "‚Ü• bis",
                    "offsetType": "num",
                    "offset": "1",
                    "multiplier": 60000,
                    "days": "*",
                    "months": "*"
                },
                "description": "<div><i class=\"fa fa-code-fork\" aria-hidden=\"true\"></i> <var>global.day.today.isWeekendOrHoliday</var> ist true</div><div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ‚Ü• bis <var>7:45</var> + 00:01</div><div><div class=\"indent-level-text\"> <i class=\"fa fa-angle-down\" aria-hidden=\"true\"></i><span>Rollladenposition: </span> ‚Üï  Absolut <var>geschlossen (min)</var></div></div>"
            },
            {
                "index": 1,
                "name": "SonAufgAuf ",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [],
                "level": {
                    "type": "levelFixed",
                    "value": "closed (min)",
                    "operator": 0,
                    "operatorText": "‚Üï  Absolut"
                },
                "slat": {
                    "type": "none",
                    "value": ""
                },
                "topic": "",
                "resetOverwrite": false,
                "importance": 0,
                "time": {
                    "type": "pdsTime",
                    "value": "sunriseStart",
                    "operator": 0,
                    "operatorText": "‚Ü• bis",
                    "offsetType": "num",
                    "offset": "10",
                    "multiplier": 60000,
                    "days": "*",
                    "months": "*"
                },
                "timeMin": {
                    "type": "entered",
                    "value": "7:00",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000
                },
                "timeMax": {
                    "type": "entered",
                    "value": "9:00",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000
                },
                "description": "<div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ‚Ü• bis <var>Sonnenaufgang Beginn</var> + 00:10<div class=\"indent-time-text\"><i class=\"fa fa-step-backward\" aria-hidden=\"true\"></i> <span>fr√ºhestens (min)</span> <var>7:00</var></div><div class=\"indent-time-text\"><i class=\"fa fa-step-forward\" aria-hidden=\"true\"></i> <span>sp√§testens (max)</span> <var>9:00</var></div></div><div><div class=\"indent-level-text\"> <i class=\"fa fa-angle-down\" aria-hidden=\"true\"></i><span>Rollladenposition: </span> ‚Üï  Absolut <var>geschlossen (min)</var></div></div>"
            },
            {
                "index": 2,
                "name": "Wetter Regen",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [
                    {
                        "valueType": "msg",
                        "value": "WeatherID",
                        "operator": "gte",
                        "operatorText": ">=",
                        "thresholdType": "num",
                        "threshold": "502"
                    },
                    {
                        "condition": 2,
                        "conditionText": "und",
                        "valueType": "msg",
                        "value": "WeatherID",
                        "operator": "lt",
                        "operatorText": "<",
                        "thresholdType": "num",
                        "threshold": "600"
                    }
                ],
                "level": {
                    "type": "levelFixed",
                    "value": "33%",
                    "operator": 0,
                    "operatorText": "‚Üï  Absolut"
                },
                "slat": {
                    "type": "none",
                    "value": ""
                },
                "topic": "Weather Rain Condition",
                "resetOverwrite": false,
                "importance": 0,
                "description": "<div><i class=\"fa fa-code-fork\" aria-hidden=\"true\"></i> <var>msg.WeatherID</var> >= 502&nbsp;<strong>und</strong><br/><span class=\"indent-enh-text\" >&nbsp;</span><var>msg.WeatherID</var> < 600</div><div><div class=\"indent-level-text\"> <i class=\"fa fa-angle-down\" aria-hidden=\"true\"></i><span>Rollladenposition: </span> ‚Üï  Absolut <var>33%</var></div><div class=\"indent-topic-text\"> <i class=\"fa fa-tasks\" aria-hidden=\"true\"></i><span>Topic: </span> <var>Weather Rain Condition</var></div></div>"
            },
            {
                "index": 3,
                "name": "Wetter Gewitter",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [
                    {
                        "valueType": "msg",
                        "value": "WeatherID",
                        "operator": "gte",
                        "operatorText": ">=",
                        "thresholdType": "num",
                        "threshold": "201"
                    },
                    {
                        "condition": 2,
                        "conditionText": "und",
                        "valueType": "msg",
                        "value": "WeatherID",
                        "operator": "lt",
                        "operatorText": "<",
                        "thresholdType": "num",
                        "threshold": "230"
                    }
                ],
                "level": {
                    "type": "levelFixed",
                    "value": "25%",
                    "operator": 0,
                    "operatorText": "‚Üï  Absolut"
                },
                "slat": {
                    "type": "none",
                    "value": ""
                },
                "topic": "Weather Thunderstorm Condition",
                "resetOverwrite": false,
                "importance": 0,
                "description": "<div><i class=\"fa fa-code-fork\" aria-hidden=\"true\"></i> <var>msg.WeatherID</var> >= 201&nbsp;<strong>und</strong><br/><span class=\"indent-enh-text\" >&nbsp;</span><var>msg.WeatherID</var> < 230</div><div><div class=\"indent-level-text\"> <i class=\"fa fa-angle-down\" aria-hidden=\"true\"></i><span>Rollladenposition: </span> ‚Üï  Absolut <var>25%</var></div><div class=\"indent-topic-text\"> <i class=\"fa fa-tasks\" aria-hidden=\"true\"></i><span>Topic: </span> <var>Weather Thunderstorm Condition</var></div></div>"
            },
            {
                "index": 4,
                "name": "Wetter Schnee",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [
                    {
                        "valueType": "msg",
                        "value": "WeatherID",
                        "operator": "gte",
                        "operatorText": ">=",
                        "thresholdType": "num",
                        "threshold": "602"
                    },
                    {
                        "condition": 2,
                        "conditionText": "und",
                        "valueType": "msg",
                        "value": "WeatherID",
                        "operator": "lt",
                        "operatorText": "<",
                        "thresholdType": "num",
                        "threshold": "700"
                    }
                ],
                "level": {
                    "type": "levelFixed",
                    "value": "50%",
                    "operator": 0,
                    "operatorText": "‚Üï  Absolut"
                },
                "slat": {
                    "type": "none",
                    "value": ""
                },
                "topic": "Weather Snow Condition",
                "resetOverwrite": false,
                "importance": 0,
                "description": "<div><i class=\"fa fa-code-fork\" aria-hidden=\"true\"></i> <var>msg.WeatherID</var> >= 602&nbsp;<strong>und</strong><br/><span class=\"indent-enh-text\" >&nbsp;</span><var>msg.WeatherID</var> < 700</div><div><div class=\"indent-level-text\"> <i class=\"fa fa-angle-down\" aria-hidden=\"true\"></i><span>Rollladenposition: </span> ‚Üï  Absolut <var>50%</var></div><div class=\"indent-topic-text\"> <i class=\"fa fa-tasks\" aria-hidden=\"true\"></i><span>Topic: </span> <var>Weather Snow Condition</var></div></div>"
            },
            {
                "index": 5,
                "name": "AbendsFastZu",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [],
                "level": {
                    "type": "levelFixed",
                    "value": "33%",
                    "operator": 0,
                    "operatorText": "‚Üï  Absolut"
                },
                "slat": {
                    "type": "none",
                    "value": ""
                },
                "topic": "",
                "resetOverwrite": false,
                "importance": 0,
                "time": {
                    "type": "pdsTime",
                    "value": "sunsetStart",
                    "operator": 1,
                    "operatorText": "‚Üß von",
                    "offsetType": "num",
                    "offset": "10",
                    "multiplier": 60000,
                    "days": "*",
                    "months": "*"
                },
                "timeMin": {
                    "type": "entered",
                    "value": "15:30",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000
                },
                "description": "<div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ‚Üß von <var>Sonnenuntergang Beginn</var> + 00:10<div class=\"indent-time-text\"><i class=\"fa fa-step-backward\" aria-hidden=\"true\"></i> <span>fr√ºhestens (min)</span> <var>15:30</var></div></div><div><div class=\"indent-level-text\"> <i class=\"fa fa-angle-down\" aria-hidden=\"true\"></i><span>Rollladenposition: </span> ‚Üï  Absolut <var>33%</var></div></div>"
            },
            {
                "index": 6,
                "name": "SonnenuntergangZu",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [],
                "level": {
                    "type": "levelFixed",
                    "value": "closed (min)",
                    "operator": 0,
                    "operatorText": "‚Üï  Absolut"
                },
                "slat": {
                    "type": "none",
                    "value": ""
                },
                "topic": "",
                "resetOverwrite": false,
                "importance": 0,
                "time": {
                    "type": "pdsTime",
                    "value": "sunsetEnd",
                    "operator": 1,
                    "operatorText": "‚Üß von",
                    "offsetType": "num",
                    "offset": "30",
                    "multiplier": 60000,
                    "days": "*",
                    "months": "*"
                },
                "timeMin": {
                    "type": "entered",
                    "value": "16:30",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000
                },
                "timeMax": {
                    "type": "entered",
                    "value": "22:00",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000
                },
                "description": "<div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ‚Üß von <var>Sonnenuntergang Ende</var> + 00:30<div class=\"indent-time-text\"><i class=\"fa fa-step-backward\" aria-hidden=\"true\"></i> <span>fr√ºhestens (min)</span> <var>16:30</var></div><div class=\"indent-time-text\"><i class=\"fa fa-step-forward\" aria-hidden=\"true\"></i> <span>sp√§testens (max)</span> <var>22:00</var></div></div><div><div class=\"indent-level-text\"> <i class=\"fa fa-angle-down\" aria-hidden=\"true\"></i><span>Rollladenposition: </span> ‚Üï  Absolut <var>geschlossen (min)</var></div></div>"
            }
        ],
        "sunControlMode": 16,
        "sunFloorLengthType": "num",
        "sunFloorLength": "200",
        "sunMinDelta": "5",
        "blindPosMin": "10%",
        "blindPosMinType": "levelFixed",
        "blindPosMax": "open (max)",
        "blindPosMaxType": "levelFixed",
        "blindOpenPosOffset": "",
        "blindClosedPosOffset": "",
        "sunSlat": "",
        "sunSlatType": "none",
        "smoothTime": "",
        "sunTopic": "SunShading",
        "windowTopType": "num",
        "windowTop": "205",
        "windowBottomType": "num",
        "windowBottom": "100",
        "windowAzimuthStartType": "numAzimuth",
        "windowAzimuthStart": "153",
        "windowAzimuthEndType": "numAzimuth",
        "windowAzimuthEnd": "210",
        "oversteers": [
            {
                "mode": 0,
                "valueType": "global",
                "value": "TempOut",
                "operator": "lt",
                "operatorText": "<",
                "thresholdType": "num",
                "threshold": "15",
                "onlySunInWindow": true,
                "blindPos": {
                    "type": "levelFixed",
                    "value": "open (max)"
                },
                "slatPos": {
                    "type": "none",
                    "value": ""
                }
            },
            {
                "mode": 0,
                "valueType": "pdsCalcElevation",
                "value": "",
                "operator": "lt",
                "operatorText": "<",
                "thresholdType": "numAltitude",
                "threshold": "15",
                "onlySunInWindow": true,
                "blindPos": {
                    "type": "levelFixed",
                    "value": "open (max)"
                },
                "slatPos": {
                    "type": "none",
                    "value": ""
                }
            },
            {
                "mode": 0,
                "valueType": "msg",
                "value": "clouds",
                "operator": "gte",
                "operatorText": ">=",
                "thresholdType": "num",
                "threshold": "25",
                "onlySunInWindow": true,
                "blindPos": {
                    "type": "levelFixed",
                    "value": "open (max)"
                },
                "slatPos": {
                    "type": "none",
                    "value": ""
                }
            }
        ],
        "oversteerTopic": "CloudsOverwrite",
        "x": 610,
        "y": 860,
        "wires": [
            [
                "7ca250e2.e6cc5",
                "4e597d09.2aedb4",
                "1d3825cc.3067ba",
                "719dd77e.126428"
            ],
            []
        ]
    },
    {
        "id": "7ca250e2.e6cc5",
        "type": "debug",
        "z": "7e5a345d.05161c",
        "name": "Wohnz Rolladensteuerung Output",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 820,
        "y": 1180,
        "wires": []
    },
    {
        "id": "4e597d09.2aedb4",
        "type": "ui_text",
        "z": "7e5a345d.05161c",
        "group": "13a03688.c43e99",
        "order": 6,
        "width": "6",
        "height": "1",
        "name": "",
        "label": "Status Fenster",
        "format": "{{msg.blindCtrl.reason.description}}",
        "layout": "row-center",
        "x": 780,
        "y": 1240,
        "wires": []
    },
    {
        "id": "1d3825cc.3067ba",
        "type": "debug",
        "z": "7e5a345d.05161c",
        "name": "WohnzReason",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "blindCtrl.reason.description",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 760,
        "y": 1340,
        "wires": []
    },
    {
        "id": "18b04498.89bb7b",
        "type": "inject",
        "z": "7e5a345d.05161c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "setSunDataMinAltitude",
        "payload": "40",
        "payloadType": "num",
        "x": 170,
        "y": 1100,
        "wires": [
            [
                "7c0e361f.f82ce8"
            ]
        ]
    },
    {
        "id": "55fe76a1.962bf8",
        "type": "inject",
        "z": "7e5a345d.05161c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "setSunDataMinAltitude",
        "payload": "5",
        "payloadType": "num",
        "x": 170,
        "y": 1140,
        "wires": [
            [
                "7c0e361f.f82ce8"
            ]
        ]
    },
    {
        "id": "ac11dbc3.138ca8",
        "type": "inject",
        "z": "7e5a345d.05161c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "setSunDataMinAltitude",
        "payload": "20",
        "payloadType": "num",
        "x": 160,
        "y": 1180,
        "wires": [
            [
                "7c0e361f.f82ce8"
            ]
        ]
    },
    {
        "id": "631e7cf3.cc1784",
        "type": "inject",
        "z": "7e5a345d.05161c",
        "name": "20",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "cmnd/RolloEsstisch/ShutterPosition",
        "payload": "20",
        "payloadType": "num",
        "x": 150,
        "y": 1240,
        "wires": [
            [
                "719dd77e.126428"
            ]
        ]
    },
    {
        "id": "42ea334b.231bcc",
        "type": "inject",
        "z": "7e5a345d.05161c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "cmnd/RolloEsstisch/ShutterPosition",
        "payload": "40",
        "payloadType": "num",
        "x": 150,
        "y": 1280,
        "wires": [
            [
                "719dd77e.126428"
            ]
        ]
    },
    {
        "id": "1eb0396c.c17e47",
        "type": "inject",
        "z": "7e5a345d.05161c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "cmnd/RolloEsstisch/ShutterPosition",
        "payload": "50",
        "payloadType": "str",
        "x": 150,
        "y": 1320,
        "wires": [
            [
                "719dd77e.126428"
            ]
        ]
    },
    {
        "id": "8853f5a8.8b4f48",
        "type": "inject",
        "z": "7e5a345d.05161c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "cmnd/RolloEsstisch/ShutterPosition",
        "payload": "80",
        "payloadType": "str",
        "x": 150,
        "y": 1360,
        "wires": [
            [
                "719dd77e.126428"
            ]
        ]
    },
    {
        "id": "709d5bcd.8d1b54",
        "type": "inject",
        "z": "7e5a345d.05161c",
        "name": "Open",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "cmnd/RolloEsstisch/ShutterPosition",
        "payload": "100",
        "payloadType": "str",
        "x": 150,
        "y": 1400,
        "wires": [
            [
                "719dd77e.126428"
            ]
        ]
    },
    {
        "id": "9691e1aa.10ca5",
        "type": "mqtt in",
        "z": "7e5a345d.05161c",
        "name": "",
        "topic": "stat/RolloWohnzimmer/SHUTTER1",
        "qos": "2",
        "datatype": "auto",
        "broker": "19cf2a10.f9d4a6",
        "x": 500,
        "y": 1420,
        "wires": [
            [
                "bfcba13f.cd988"
            ]
        ]
    },
    {
        "id": "bfcba13f.cd988",
        "type": "debug",
        "z": "7e5a345d.05161c",
        "name": "RolloWohnzimmerStatus",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 820,
        "y": 1440,
        "wires": []
    },
    {
        "id": "cd81506e.47c21",
        "type": "mqtt out",
        "z": "7e5a345d.05161c",
        "name": "",
        "topic": "cmnd/RolloWohnzimmer/ShutterPosition",
        "qos": "",
        "retain": "",
        "broker": "19cf2a10.f9d4a6",
        "x": 540,
        "y": 1580,
        "wires": []
    },
    {
        "id": "a1e19928.f8da38",
        "type": "inject",
        "z": "7e5a345d.05161c",
        "name": "20",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "20",
        "payloadType": "num",
        "x": 130,
        "y": 1540,
        "wires": [
            []
        ]
    },
    {
        "id": "ae596784.c4d848",
        "type": "inject",
        "z": "7e5a345d.05161c",
        "name": "Open",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "100",
        "payloadType": "str",
        "x": 130,
        "y": 1700,
        "wires": [
            []
        ]
    },
    {
        "id": "216e065e.8c8ffa",
        "type": "inject",
        "z": "7e5a345d.05161c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "cmnd/RolloEsstisch/ShutterChange",
        "payload": "-30",
        "payloadType": "num",
        "x": 130,
        "y": 1760,
        "wires": [
            []
        ]
    },
    {
        "id": "630153d9.09e9cc",
        "type": "inject",
        "z": "7e5a345d.05161c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "40",
        "payloadType": "num",
        "x": 130,
        "y": 1580,
        "wires": [
            []
        ]
    },
    {
        "id": "37bcbeec.6fd7c2",
        "type": "inject",
        "z": "7e5a345d.05161c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "50",
        "payloadType": "str",
        "x": 130,
        "y": 1620,
        "wires": [
            []
        ]
    },
    {
        "id": "fb2b775f.3234f8",
        "type": "inject",
        "z": "7e5a345d.05161c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "80",
        "payloadType": "str",
        "x": 130,
        "y": 1660,
        "wires": [
            []
        ]
    },
    {
        "id": "542c8b32.221d54",
        "type": "inject",
        "z": "7e5a345d.05161c",
        "name": "Closed",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 130,
        "y": 1500,
        "wires": [
            []
        ]
    },
    {
        "id": "97695071.468dc",
        "type": "ui_slider",
        "z": "7e5a345d.05161c",
        "name": "RolloWohnzimmerPosition",
        "label": "Wohnz Fenster",
        "tooltip": "",
        "group": "13a03688.c43e99",
        "order": 5,
        "width": "6",
        "height": "2",
        "passthru": true,
        "outs": "end",
        "topic": "cmnd/RolloWohnzimmer/ShutterPosition",
        "topicType": "str",
        "min": 0,
        "max": "100",
        "step": 1,
        "x": 740,
        "y": 1780,
        "wires": [
            [
                "cd81506e.47c21"
            ]
        ]
    },
    {
        "id": "ced3fe1b.5db5b",
        "type": "mqtt in",
        "z": "7e5a345d.05161c",
        "name": "",
        "topic": "stat/RolloWohnzimmer/SHUTTER1",
        "qos": "2",
        "datatype": "auto",
        "broker": "19cf2a10.f9d4a6",
        "x": 400,
        "y": 1780,
        "wires": [
            [
                "97695071.468dc"
            ]
        ]
    },
    {
        "id": "d26a7c85.ed299",
        "type": "ui_text",
        "z": "7e5a345d.05161c",
        "group": "8e157408.1ce3a8",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Wolken",
        "format": "{{msg.clouds}}",
        "layout": "row-spread",
        "x": 560,
        "y": 540,
        "wires": []
    },
    {
        "id": "b0373bec.1ade48",
        "type": "blind-control",
        "z": "7e5a345d.05161c",
        "name": "RolloT√ºre",
        "topic": "",
        "addIdType": "none",
        "addId": "",
        "positionConfig": "9a5a8534.25d4d8",
        "autoTrigger": true,
        "autoTriggerTime": "600000",
        "startDelayTime": 10000,
        "contextStore": "",
        "results": [
            {
                "p": "",
                "pt": "msgTopic",
                "v": "",
                "vt": "topic"
            },
            {
                "p": "",
                "pt": "msgPayload",
                "v": "",
                "vt": "level"
            },
            {
                "p": "slat",
                "pt": "msg",
                "v": "",
                "vt": "slat"
            },
            {
                "p": "blindCtrl",
                "pt": "msg",
                "v": "",
                "vt": "ctrlObj"
            }
        ],
        "blindIncrement": "1",
        "blindOpenPos": "100",
        "blindClosedPos": "0",
        "blindPosReverse": false,
        "blindPosDefault": "open (max)",
        "blindPosDefaultType": "levelFixed",
        "slatPosDefault": "",
        "slatPosDefaultType": "none",
        "overwriteExpire": "300000",
        "rules": [
            {
                "index": 0,
                "name": "T√ºre Offen Auf",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [
                    {
                        "valueType": "global",
                        "value": "BalkonOffen",
                        "operator": "equal",
                        "operatorText": "=",
                        "thresholdType": "str",
                        "threshold": "true"
                    }
                ],
                "level": {
                    "type": "levelFixed",
                    "value": "open (max)",
                    "operator": 0,
                    "operatorText": "‚Üï  Absolut"
                },
                "slat": {
                    "type": "none",
                    "value": ""
                },
                "topic": "",
                "resetOverwrite": false,
                "importance": 0,
                "description": "<div><i class=\"fa fa-code-fork\" aria-hidden=\"true\"></i> <var>global.BalkonOffen</var> = \"true\"</div><div><div class=\"indent-level-text\"> <i class=\"fa fa-angle-down\" aria-hidden=\"true\"></i><span>Rollladenposition: </span> ‚Üï  Absolut <var>offen (max)</var></div></div>"
            },
            {
                "index": 1,
                "name": "HolidayWeekend",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [
                    {
                        "valueType": "global",
                        "value": "day.today.isWeekendOrHoliday",
                        "operator": "true",
                        "operatorText": "ist true",
                        "thresholdType": "num",
                        "threshold": 0
                    }
                ],
                "level": {
                    "type": "levelFixed",
                    "value": "closed (min)",
                    "operator": 0,
                    "operatorText": "‚Üï  Absolut"
                },
                "slat": {
                    "type": "none",
                    "value": ""
                },
                "topic": "",
                "resetOverwrite": false,
                "importance": 0,
                "time": {
                    "type": "entered",
                    "value": "7:45",
                    "operator": 0,
                    "operatorText": "‚Ü• bis",
                    "offsetType": "num",
                    "offset": "1",
                    "multiplier": 60000,
                    "days": "*",
                    "months": "*"
                },
                "description": "<div><i class=\"fa fa-code-fork\" aria-hidden=\"true\"></i> <var>global.day.today.isWeekendOrHoliday</var> ist true</div><div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ‚Ü• bis <var>7:45</var> + 00:01</div><div><div class=\"indent-level-text\"> <i class=\"fa fa-angle-down\" aria-hidden=\"true\"></i><span>Rollladenposition: </span> ‚Üï  Absolut <var>geschlossen (min)</var></div></div>"
            },
            {
                "index": 2,
                "name": "SonAufgAuf ",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [],
                "level": {
                    "type": "levelFixed",
                    "value": "closed (min)",
                    "operator": 0,
                    "operatorText": "‚Üï  Absolut"
                },
                "slat": {
                    "type": "none",
                    "value": ""
                },
                "topic": "",
                "resetOverwrite": false,
                "importance": 0,
                "time": {
                    "type": "pdsTime",
                    "value": "sunriseStart",
                    "operator": 0,
                    "operatorText": "‚Ü• bis",
                    "offsetType": "num",
                    "offset": "10",
                    "multiplier": 60000,
                    "days": "*",
                    "months": "*"
                },
                "timeMin": {
                    "type": "entered",
                    "value": "7:00",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000
                },
                "timeMax": {
                    "type": "entered",
                    "value": "9:00",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000
                },
                "description": "<div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ‚Ü• bis <var>Sonnenaufgang Beginn</var> + 00:10<div class=\"indent-time-text\"><i class=\"fa fa-step-backward\" aria-hidden=\"true\"></i> <span>fr√ºhestens (min)</span> <var>7:00</var></div><div class=\"indent-time-text\"><i class=\"fa fa-step-forward\" aria-hidden=\"true\"></i> <span>sp√§testens (max)</span> <var>9:00</var></div></div><div><div class=\"indent-level-text\"> <i class=\"fa fa-angle-down\" aria-hidden=\"true\"></i><span>Rollladenposition: </span> ‚Üï  Absolut <var>geschlossen (min)</var></div></div>"
            },
            {
                "index": 3,
                "name": "SonnenuntergangZu",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [],
                "level": {
                    "type": "levelFixed",
                    "value": "33%",
                    "operator": 0,
                    "operatorText": "‚Üï  Absolut"
                },
                "slat": {
                    "type": "none",
                    "value": ""
                },
                "topic": "",
                "resetOverwrite": false,
                "importance": 0,
                "time": {
                    "type": "pdsTime",
                    "value": "sunsetEnd",
                    "operator": 1,
                    "operatorText": "‚Üß von",
                    "offsetType": "num",
                    "offset": "10",
                    "multiplier": 60000,
                    "days": "*",
                    "months": "*"
                },
                "timeMin": {
                    "type": "entered",
                    "value": "16:30",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000
                },
                "timeMax": {
                    "type": "entered",
                    "value": "21:00",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000
                },
                "description": "<div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ‚Üß von <var>Sonnenuntergang Ende</var> + 00:10<div class=\"indent-time-text\"><i class=\"fa fa-step-backward\" aria-hidden=\"true\"></i> <span>fr√ºhestens (min)</span> <var>16:30</var></div><div class=\"indent-time-text\"><i class=\"fa fa-step-forward\" aria-hidden=\"true\"></i> <span>sp√§testens (max)</span> <var>21:00</var></div></div><div><div class=\"indent-level-text\"> <i class=\"fa fa-angle-down\" aria-hidden=\"true\"></i><span>Rollladenposition: </span> ‚Üï  Absolut <var>33%</var></div></div>"
            },
            {
                "index": 4,
                "name": "WochenendeGeschlossen",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [
                    {
                        "valueType": "global",
                        "value": "day.today.isWeekendOrHoliday",
                        "operator": "true",
                        "operatorText": "ist true",
                        "thresholdType": "num",
                        "threshold": 0
                    }
                ],
                "level": {
                    "type": "levelFixed",
                    "value": "closed (min)",
                    "operator": 0,
                    "operatorText": "‚Üï  Absolut"
                },
                "slat": {
                    "type": "none",
                    "value": ""
                },
                "topic": "",
                "resetOverwrite": false,
                "importance": 0,
                "time": {
                    "type": "entered",
                    "value": "22:00",
                    "operator": 1,
                    "operatorText": "‚Üß von",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000,
                    "days": "*",
                    "months": "*"
                },
                "description": "<div><i class=\"fa fa-code-fork\" aria-hidden=\"true\"></i> <var>global.day.today.isWeekendOrHoliday</var> ist true</div><div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ‚Üß von <var>22:00</var></div><div><div class=\"indent-level-text\"> <i class=\"fa fa-angle-down\" aria-hidden=\"true\"></i><span>Rollladenposition: </span> ‚Üï  Absolut <var>geschlossen (min)</var></div></div>"
            },
            {
                "index": 5,
                "name": "WochentagGeschlossen",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [],
                "level": {
                    "type": "levelFixed",
                    "value": "closed (min)",
                    "operator": 0,
                    "operatorText": "‚Üï  Absolut"
                },
                "slat": {
                    "type": "none",
                    "value": ""
                },
                "topic": "",
                "resetOverwrite": false,
                "importance": 0,
                "time": {
                    "type": "entered",
                    "value": "21:45",
                    "operator": 1,
                    "operatorText": "‚Üß von",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000,
                    "days": "*",
                    "months": "*"
                },
                "description": "<div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ‚Üß von <var>21:45</var></div><div><div class=\"indent-level-text\"> <i class=\"fa fa-angle-down\" aria-hidden=\"true\"></i><span>Rollladenposition: </span> ‚Üï  Absolut <var>geschlossen (min)</var></div></div>"
            }
        ],
        "sunControlMode": "0",
        "sunFloorLengthType": "num",
        "sunFloorLength": "500",
        "sunMinDelta": "5",
        "blindPosMin": "25%",
        "blindPosMinType": "levelFixed",
        "blindPosMax": "open (max)",
        "blindPosMaxType": "levelFixed",
        "blindOpenPosOffset": "",
        "blindClosedPosOffset": "",
        "sunSlat": "",
        "sunSlatType": "none",
        "smoothTime": "",
        "sunTopic": "SunShading",
        "windowTopType": "num",
        "windowTop": "205",
        "windowBottomType": "num",
        "windowBottom": "100",
        "windowAzimuthStartType": "numAzimuth",
        "windowAzimuthStart": "118",
        "windowAzimuthEndType": "numAzimuth",
        "windowAzimuthEnd": "230",
        "oversteers": [
            {
                "mode": 2,
                "valueType": "pdsCalcElevation",
                "value": "",
                "operator": "lt",
                "operatorText": "<",
                "thresholdType": "numAltitude",
                "threshold": "15",
                "onlySunInWindow": true,
                "blindPos": {
                    "type": "levelFixed",
                    "value": "open (max)"
                },
                "slatPos": {
                    "type": "none",
                    "value": ""
                }
            },
            {
                "mode": 0,
                "valueType": "msg",
                "value": "clouds",
                "operator": "gte",
                "operatorText": ">=",
                "thresholdType": "num",
                "threshold": "40",
                "onlySunInWindow": true,
                "blindPos": {
                    "type": "levelFixed",
                    "value": "open (max)"
                },
                "slatPos": {
                    "type": "none",
                    "value": ""
                }
            }
        ],
        "oversteerTopic": "CloudsOverwrite",
        "x": 410,
        "y": 1840,
        "wires": [
            [
                "ff3966aa.bbc898",
                "31ef75a9.d9e27a",
                "c64a6a11.71f278",
                "1a538972.87cf07"
            ],
            []
        ]
    },
    {
        "id": "1a538972.87cf07",
        "type": "mqtt out",
        "z": "7e5a345d.05161c",
        "name": "ShutterPosition",
        "topic": "cmnd/RolloTuere/ShutterPosition",
        "qos": "",
        "retain": "",
        "broker": "19cf2a10.f9d4a6",
        "x": 780,
        "y": 1940,
        "wires": []
    },
    {
        "id": "ff3966aa.bbc898",
        "type": "debug",
        "z": "7e5a345d.05161c",
        "name": "Wohnz Rolladensteuerung Output",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 780,
        "y": 2020,
        "wires": []
    },
    {
        "id": "31ef75a9.d9e27a",
        "type": "ui_text",
        "z": "7e5a345d.05161c",
        "group": "13a03688.c43e99",
        "order": 2,
        "width": "6",
        "height": "1",
        "name": "",
        "label": "Status T√ºre",
        "format": "{{msg.blindCtrl.reason.description}}",
        "layout": "row-center",
        "x": 750,
        "y": 2100,
        "wires": []
    },
    {
        "id": "c64a6a11.71f278",
        "type": "debug",
        "z": "7e5a345d.05161c",
        "name": "WohnzReason",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "blindCtrl.reason.description",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 720,
        "y": 2180,
        "wires": []
    },
    {
        "id": "5ff98951.59e088",
        "type": "inject",
        "z": "7e5a345d.05161c",
        "name": "20",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "cmnd/RolloEsstisch/ShutterPosition",
        "payload": "20",
        "payloadType": "num",
        "x": 110,
        "y": 2080,
        "wires": [
            [
                "1a538972.87cf07"
            ]
        ]
    },
    {
        "id": "81558e32.4aede",
        "type": "inject",
        "z": "7e5a345d.05161c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "cmnd/RolloEsstisch/ShutterPosition",
        "payload": "40",
        "payloadType": "num",
        "x": 110,
        "y": 2120,
        "wires": [
            [
                "1a538972.87cf07"
            ]
        ]
    },
    {
        "id": "8e4390a2.51add",
        "type": "inject",
        "z": "7e5a345d.05161c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "cmnd/RolloEsstisch/ShutterPosition",
        "payload": "50",
        "payloadType": "str",
        "x": 110,
        "y": 2160,
        "wires": [
            [
                "1a538972.87cf07"
            ]
        ]
    },
    {
        "id": "ce2fc08.dce774",
        "type": "inject",
        "z": "7e5a345d.05161c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "cmnd/RolloEsstisch/ShutterPosition",
        "payload": "80",
        "payloadType": "str",
        "x": 110,
        "y": 2200,
        "wires": [
            [
                "1a538972.87cf07"
            ]
        ]
    },
    {
        "id": "cfcad29b.0834",
        "type": "inject",
        "z": "7e5a345d.05161c",
        "name": "Open",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "cmnd/RolloEsstisch/ShutterPosition",
        "payload": "100",
        "payloadType": "str",
        "x": 110,
        "y": 2240,
        "wires": [
            [
                "1a538972.87cf07"
            ]
        ]
    },
    {
        "id": "a74fc78c.af3c88",
        "type": "mqtt in",
        "z": "7e5a345d.05161c",
        "name": "",
        "topic": "stat/RolloTuere/SHUTTER1",
        "qos": "2",
        "datatype": "auto",
        "broker": "19cf2a10.f9d4a6",
        "x": 160,
        "y": 2320,
        "wires": [
            [
                "fb2be545.fa3808"
            ]
        ]
    },
    {
        "id": "fb2be545.fa3808",
        "type": "ui_slider",
        "z": "7e5a345d.05161c",
        "name": "RolloT√ºrePosition",
        "label": "Wohnz T√ºre",
        "tooltip": "",
        "group": "13a03688.c43e99",
        "order": 1,
        "width": "6",
        "height": "2",
        "passthru": true,
        "outs": "end",
        "topic": "cmnd/RolloTuere/ShutterPosition",
        "topicType": "str",
        "min": 0,
        "max": "100",
        "step": 1,
        "x": 490,
        "y": 2320,
        "wires": [
            [
                "1a538972.87cf07"
            ]
        ]
    },
    {
        "id": "9541504a.3de58",
        "type": "mqtt out",
        "z": "7e5a345d.05161c",
        "g": "c1953c38.acea1",
        "name": "",
        "topic": "cmnd/RolloOlga/ShutterPosition",
        "qos": "",
        "retain": "",
        "broker": "19cf2a10.f9d4a6",
        "x": 750,
        "y": 2540,
        "wires": []
    },
    {
        "id": "5f48bf54.11e1a",
        "type": "inject",
        "z": "7e5a345d.05161c",
        "g": "c1953c38.acea1",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 410,
        "y": 2640,
        "wires": [
            [
                "9541504a.3de58"
            ]
        ]
    },
    {
        "id": "115b1c5e.ab26e4",
        "type": "inject",
        "z": "7e5a345d.05161c",
        "g": "c1953c38.acea1",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "50",
        "payloadType": "num",
        "x": 410,
        "y": 2680,
        "wires": [
            [
                "9541504a.3de58"
            ]
        ]
    },
    {
        "id": "fbe2336b.e78ca",
        "type": "inject",
        "z": "7e5a345d.05161c",
        "g": "c1953c38.acea1",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "100",
        "payloadType": "num",
        "x": 410,
        "y": 2720,
        "wires": [
            [
                "9541504a.3de58"
            ]
        ]
    },
    {
        "id": "e9f25740.8e0928",
        "type": "blind-control",
        "z": "7e5a345d.05161c",
        "g": "c1953c38.acea1",
        "name": "RolloOlga",
        "topic": "",
        "addIdType": "none",
        "addId": "",
        "positionConfig": "9a5a8534.25d4d8",
        "autoTrigger": true,
        "autoTriggerTime": "600000",
        "startDelayTime": 10000,
        "contextStore": "",
        "results": [
            {
                "p": "",
                "pt": "msgTopic",
                "v": "",
                "vt": "topic"
            },
            {
                "p": "",
                "pt": "msgPayload",
                "v": "",
                "vt": "level"
            },
            {
                "p": "slat",
                "pt": "msg",
                "v": "",
                "vt": "slat"
            },
            {
                "p": "blindCtrl",
                "pt": "msg",
                "v": "",
                "vt": "ctrlObj"
            }
        ],
        "blindIncrement": "1",
        "blindOpenPos": "100",
        "blindClosedPos": 0,
        "blindPosReverse": false,
        "blindPosDefault": "open (max)",
        "blindPosDefaultType": "levelFixed",
        "slatPosDefault": "",
        "slatPosDefaultType": "none",
        "overwriteExpire": "1200000",
        "rules": [
            {
                "index": 0,
                "name": "HolidayWeekend",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [
                    {
                        "valueType": "global",
                        "value": "day.today.isWeekendOrHoliday",
                        "operator": "true",
                        "operatorText": "ist true",
                        "thresholdType": "num",
                        "threshold": 0
                    }
                ],
                "level": {
                    "type": "levelFixed",
                    "value": "closed (min)",
                    "operator": 0,
                    "operatorText": "‚Üï  Absolut"
                },
                "slat": {
                    "type": "none",
                    "value": ""
                },
                "topic": "",
                "resetOverwrite": false,
                "importance": 0,
                "time": {
                    "type": "entered",
                    "value": "7:45",
                    "operator": 0,
                    "operatorText": "‚Ü• bis",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000,
                    "days": "*",
                    "months": "*"
                },
                "description": "<div><i class=\"fa fa-code-fork\" aria-hidden=\"true\"></i> <var>global.day.today.isWeekendOrHoliday</var> ist true</div><div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ‚Ü• bis <var>7:45</var></div><div><div class=\"indent-level-text\"> <i class=\"fa fa-angle-down\" aria-hidden=\"true\"></i><span>Rollladenposition: </span> ‚Üï  Absolut <var>geschlossen (min)</var></div></div>"
            },
            {
                "index": 1,
                "name": "SonAufAuf",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [],
                "level": {
                    "type": "levelFixed",
                    "value": "closed (min)",
                    "operator": 0,
                    "operatorText": "‚Üï  Absolut"
                },
                "slat": {
                    "type": "none",
                    "value": ""
                },
                "topic": "",
                "resetOverwrite": false,
                "importance": 0,
                "time": {
                    "type": "pdsTime",
                    "value": "sunriseStart",
                    "operator": 0,
                    "operatorText": "‚Ü• bis",
                    "offsetType": "num",
                    "offset": "10",
                    "multiplier": 60000,
                    "days": "*",
                    "months": "*"
                },
                "timeMin": {
                    "type": "entered",
                    "value": "6:00",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000
                },
                "timeMax": {
                    "type": "entered",
                    "value": "6:45",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000
                },
                "description": "<div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ‚Ü• bis <var>Sonnenaufgang Beginn</var> + 00:10<div class=\"indent-time-text\"><i class=\"fa fa-step-backward\" aria-hidden=\"true\"></i> <span>fr√ºhestens (min)</span> <var>6:00</var></div><div class=\"indent-time-text\"><i class=\"fa fa-step-forward\" aria-hidden=\"true\"></i> <span>sp√§testens (max)</span> <var>6:45</var></div></div><div><div class=\"indent-level-text\"> <i class=\"fa fa-angle-down\" aria-hidden=\"true\"></i><span>Rollladenposition: </span> ‚Üï  Absolut <var>geschlossen (min)</var></div></div>"
            },
            {
                "index": 2,
                "name": "SonnenuntergangZu",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [],
                "level": {
                    "type": "levelFixed",
                    "value": "50%",
                    "operator": 0,
                    "operatorText": "‚Üï  Absolut"
                },
                "slat": {
                    "type": "none",
                    "value": ""
                },
                "topic": "",
                "resetOverwrite": false,
                "importance": 0,
                "time": {
                    "type": "pdsTime",
                    "value": "sunsetEnd",
                    "operator": 1,
                    "operatorText": "‚Üß von",
                    "offsetType": "num",
                    "offset": "15",
                    "multiplier": 60000,
                    "days": "*",
                    "months": "*"
                },
                "timeMax": {
                    "type": "entered",
                    "value": "21:00",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000
                },
                "description": "<div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ‚Üß von <var>Sonnenuntergang Ende</var> + 00:15<div class=\"indent-time-text\"><i class=\"fa fa-step-forward\" aria-hidden=\"true\"></i> <span>sp√§testens (max)</span> <var>21:00</var></div></div><div><div class=\"indent-level-text\"> <i class=\"fa fa-angle-down\" aria-hidden=\"true\"></i><span>Rollladenposition: </span> ‚Üï  Absolut <var>50%</var></div></div>"
            },
            {
                "index": 3,
                "name": "WochenendeGeschlossen",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [
                    {
                        "valueType": "global",
                        "value": "day.today.isWeekendOrHoliday",
                        "operator": "true",
                        "operatorText": "ist true",
                        "thresholdType": "num",
                        "threshold": 0
                    }
                ],
                "level": {
                    "type": "levelFixed",
                    "value": "closed (min)",
                    "operator": 0,
                    "operatorText": "‚Üï  Absolut"
                },
                "slat": {
                    "type": "none",
                    "value": ""
                },
                "topic": "",
                "resetOverwrite": false,
                "importance": 0,
                "time": {
                    "type": "entered",
                    "value": "22:00",
                    "operator": 1,
                    "operatorText": "‚Üß von",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000,
                    "days": "*",
                    "months": "*"
                },
                "description": "<div><i class=\"fa fa-code-fork\" aria-hidden=\"true\"></i> <var>global.day.today.isWeekendOrHoliday</var> ist true</div><div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ‚Üß von <var>22:00</var></div><div><div class=\"indent-level-text\"> <i class=\"fa fa-angle-down\" aria-hidden=\"true\"></i><span>Rollladenposition: </span> ‚Üï  Absolut <var>geschlossen (min)</var></div></div>"
            },
            {
                "index": 4,
                "name": "WochentagGeschlossen",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [],
                "level": {
                    "type": "levelFixed",
                    "value": "closed (min)",
                    "operator": 0,
                    "operatorText": "‚Üï  Absolut"
                },
                "slat": {
                    "type": "none",
                    "value": ""
                },
                "topic": "",
                "resetOverwrite": false,
                "importance": 0,
                "time": {
                    "type": "entered",
                    "value": "21:45",
                    "operator": 1,
                    "operatorText": "‚Üß von",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000,
                    "days": "*",
                    "months": "*"
                },
                "description": "<div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ‚Üß von <var>21:45</var></div><div><div class=\"indent-level-text\"> <i class=\"fa fa-angle-down\" aria-hidden=\"true\"></i><span>Rollladenposition: </span> ‚Üï  Absolut <var>geschlossen (min)</var></div></div>"
            }
        ],
        "sunControlMode": "0",
        "sunFloorLengthType": "num",
        "sunFloorLength": "",
        "sunMinDelta": "",
        "blindPosMin": "closed (min)",
        "blindPosMinType": "levelFixed",
        "blindPosMax": "open (max)",
        "blindPosMaxType": "levelFixed",
        "blindOpenPosOffset": "",
        "blindClosedPosOffset": "",
        "sunSlat": "",
        "sunSlatType": "none",
        "smoothTime": "",
        "sunTopic": "",
        "windowTopType": "num",
        "windowTop": "",
        "windowBottomType": "num",
        "windowBottom": "",
        "windowAzimuthStartType": "numAzimuth",
        "windowAzimuthStart": "",
        "windowAzimuthEndType": "numAzimuth",
        "windowAzimuthEnd": "",
        "oversteers": [],
        "oversteerTopic": "",
        "x": 400,
        "y": 2580,
        "wires": [
            [
                "9541504a.3de58"
            ],
            []
        ]
    },
    {
        "id": "a30d9009.4e13b",
        "type": "file",
        "z": "511989b1.670cc8",
        "g": "5c041b39.d836b4",
        "name": "Printerlog",
        "filename": "PrinterLog",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 910,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "9579ffbb.2b15d",
        "type": "mqtt in",
        "z": "b85baf22.3cc35",
        "name": "Lightning",
        "topic": "sensors/+",
        "qos": "0",
        "datatype": "auto",
        "broker": "19cf2a10.f9d4a6",
        "x": 160,
        "y": 140,
        "wires": [
            [
                "e0aff261.64836",
                "62736dfc.b3d2f4"
            ]
        ]
    },
    {
        "id": "e0aff261.64836",
        "type": "debug",
        "z": "b85baf22.3cc35",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 480,
        "y": 140,
        "wires": []
    },
    {
        "id": "e691064e.2845e8",
        "type": "debug",
        "z": "b85baf22.3cc35",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload.energy",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 790,
        "y": 360,
        "wires": []
    },
    {
        "id": "62736dfc.b3d2f4",
        "type": "json",
        "z": "b85baf22.3cc35",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 520,
        "y": 460,
        "wires": [
            [
                "e691064e.2845e8",
                "c4c24f29.e1186",
                "693e04ee.1819cc",
                "31962824.976f98"
            ]
        ]
    },
    {
        "id": "c4c24f29.e1186",
        "type": "influxdb out",
        "z": "b85baf22.3cc35",
        "influxdb": "e3f4c3e8.b52ee",
        "name": "Lightning Energy",
        "measurement": "LightningEnergy",
        "precision": "",
        "retentionPolicy": "two_month",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 800,
        "y": 200,
        "wires": []
    },
    {
        "id": "693e04ee.1819cc",
        "type": "debug",
        "z": "b85baf22.3cc35",
        "name": "LightningDistance",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload.distance",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 790,
        "y": 460,
        "wires": []
    },
    {
        "id": "31962824.976f98",
        "type": "influxdb out",
        "z": "b85baf22.3cc35",
        "influxdb": "e3f4c3e8.b52ee",
        "name": "LightningDistance",
        "measurement": " distance",
        "precision": "",
        "retentionPolicy": "two_month",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 820,
        "y": 280,
        "wires": []
    },
    {
        "id": "3c079b7c.3bb374",
        "type": "function",
        "z": "6f61cfd3.3d721",
        "g": "5d7bb23e.6c04ec",
        "name": "ValveCalculation",
        "func": "var TempOut = 11;\nvar ClockPos = 0;\nvar fTemp = 0;\nvar payload;\nvar o=msg.payload;\n\nswitch (msg.topic){\n    case \"ClockValvePos\":\n        ClockPos = msg.payload;\n        global.set(\"HeaterVentPos\",ClockPos);\n        if(ClockPos == 0) msg.payload  = '0'\n        else return 0;\n        break;\n    case \"Sensor1/fTempA\":\n        TempOut = msg.payload;\n        fTemp = Number(TempOut);\n        global.set(\"TempOut\",fTemp);\n        return 0;\n    case \"HeaterNeeded\":\n        if (msg.payload == \"false\") msg.payload = '0'\n        else msg.payload = global.get(\"HeaterVentPos\");\n        if (global.get(\"HeaterVentPos\") == '0' ) msg.payload = 0; \n         break;\n    default:\n    break;\n}\n/*\n    if (global.get(\"TempOut\") <= '14'){\n      msg.payload = ClockPos ;\n    }    \n    else\n    {\n    msg.payload = '0';\n    }\n    */\n    return msg;\n ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 510,
        "y": 1120,
        "wires": [
            [
                "4f746528.3b88cc",
                "17a551f9.bcd59e"
            ]
        ]
    },
    {
        "id": "a0fe78c.bc5a188",
        "type": "mqtt in",
        "z": "6f61cfd3.3d721",
        "g": "5d7bb23e.6c04ec",
        "name": "",
        "topic": "Sensor1/fTempA",
        "qos": "0",
        "datatype": "auto",
        "broker": "19cf2a10.f9d4a6",
        "x": 140,
        "y": 1220,
        "wires": [
            [
                "8823d2b3.3d2ab"
            ]
        ]
    },
    {
        "id": "4f746528.3b88cc",
        "type": "debug",
        "z": "6f61cfd3.3d721",
        "g": "5d7bb23e.6c04ec",
        "name": "TestCalc",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 700,
        "y": 1120,
        "wires": []
    },
    {
        "id": "8823d2b3.3d2ab",
        "type": "json",
        "z": "6f61cfd3.3d721",
        "g": "5d7bb23e.6c04ec",
        "name": "fTempA",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 320,
        "y": 1220,
        "wires": [
            [
                "3c079b7c.3bb374",
                "d715f111.57f18"
            ]
        ]
    },
    {
        "id": "d715f111.57f18",
        "type": "debug",
        "z": "6f61cfd3.3d721",
        "g": "5d7bb23e.6c04ec",
        "name": "TestJsonConvOut",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 730,
        "y": 1180,
        "wires": []
    },
    {
        "id": "ed0d92d3.e506c",
        "type": "inject",
        "z": "6f61cfd3.3d721",
        "g": "5d7bb23e.6c04ec",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 130,
        "y": 1320,
        "wires": [
            [
                "cb6213d.83258f"
            ]
        ]
    },
    {
        "id": "b8c299bc.8c4e18",
        "type": "inject",
        "z": "511989b1.670cc8",
        "g": "18ca9346.bdbedd",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "octoprint/system",
        "payload": "ShutdownOctopi",
        "payloadType": "str",
        "x": 1470,
        "y": 860,
        "wires": [
            [
                "550eb938.78f938",
                "acfc89f6.5dc368"
            ]
        ]
    },
    {
        "id": "9c8627c.7dea4d8",
        "type": "mqtt in",
        "z": "6f61cfd3.3d721",
        "g": "73d12632.94b388",
        "name": "Error Text",
        "topic": "ValveControl/Err",
        "qos": "2",
        "datatype": "auto",
        "broker": "19cf2a10.f9d4a6",
        "x": 580,
        "y": 640,
        "wires": [
            [
                "541cf4bd.ec76dc"
            ]
        ]
    },
    {
        "id": "541cf4bd.ec76dc",
        "type": "debug",
        "z": "6f61cfd3.3d721",
        "g": "73d12632.94b388",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 950,
        "y": 660,
        "wires": []
    },
    {
        "id": "fd62f2d7.c32f7",
        "type": "link in",
        "z": "7e5a345d.05161c",
        "name": "Rollo Esstisch",
        "links": [
            "89de660e.32b288"
        ],
        "x": 95,
        "y": 1460,
        "wires": [
            [
                "719dd77e.126428",
                "1a538972.87cf07"
            ]
        ]
    },
    {
        "id": "e093d6cc.660ef8",
        "type": "mqtt out",
        "z": "303a8ac7.4ea1c6",
        "g": "25c55a9c.73b9c6",
        "name": "Wohnzimmerlampe",
        "topic": "shellies/Wohnzimmerlampe/light/0/set",
        "qos": "",
        "retain": "",
        "broker": "19cf2a10.f9d4a6",
        "x": 330,
        "y": 60,
        "wires": []
    },
    {
        "id": "c4729f96.429f3",
        "type": "mqtt in",
        "z": "303a8ac7.4ea1c6",
        "g": "25c55a9c.73b9c6",
        "name": "Wohnzimmerlampe Status",
        "topic": "shellies/Wohnzimmerlampe/light/0/status",
        "qos": "2",
        "datatype": "auto",
        "broker": "19cf2a10.f9d4a6",
        "x": 350,
        "y": 120,
        "wires": [
            [
                "e698cc28.6d655"
            ]
        ]
    },
    {
        "id": "e698cc28.6d655",
        "type": "debug",
        "z": "303a8ac7.4ea1c6",
        "g": "25c55a9c.73b9c6",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 60,
        "wires": []
    },
    {
        "id": "f394341d.b4ebf8",
        "type": "inject",
        "z": "303a8ac7.4ea1c6",
        "g": "25c55a9c.73b9c6",
        "name": "OFF",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"brightness\":100,\"turn\":\"off\"}",
        "payloadType": "json",
        "x": 130,
        "y": 60,
        "wires": [
            [
                "e093d6cc.660ef8"
            ]
        ]
    },
    {
        "id": "78b4e8db.f77fb8",
        "type": "inject",
        "z": "303a8ac7.4ea1c6",
        "g": "25c55a9c.73b9c6",
        "name": "ON",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"brightness\":100,\"turn\":\"on\"}",
        "payloadType": "json",
        "x": 130,
        "y": 120,
        "wires": [
            [
                "e093d6cc.660ef8"
            ]
        ]
    },
    {
        "id": "923ccc32.a66e2",
        "type": "inject",
        "z": "303a8ac7.4ea1c6",
        "g": "25c55a9c.73b9c6",
        "name": "30%",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"brightness\":30,\"turn\":\"on\"}",
        "payloadType": "json",
        "x": 130,
        "y": 180,
        "wires": [
            [
                "e093d6cc.660ef8"
            ]
        ]
    },
    {
        "id": "47fa255b.9cef7c",
        "type": "inject",
        "z": "303a8ac7.4ea1c6",
        "g": "25c55a9c.73b9c6",
        "name": "80%",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"brightness\":80,\"turn\":\"on\",\"transition\":5000}",
        "payloadType": "json",
        "x": 130,
        "y": 240,
        "wires": [
            [
                "e093d6cc.660ef8"
            ]
        ]
    },
    {
        "id": "d5fc8000.9e0ab",
        "type": "mqtt in",
        "z": "303a8ac7.4ea1c6",
        "g": "25c55a9c.73b9c6",
        "name": "",
        "topic": "shellies/Wohnzimmerlampe/light/0/power",
        "qos": "2",
        "datatype": "auto",
        "broker": "19cf2a10.f9d4a6",
        "x": 400,
        "y": 180,
        "wires": [
            [
                "e698cc28.6d655"
            ]
        ]
    },
    {
        "id": "70c7fcfe.4a18a4",
        "type": "debug",
        "z": "303a8ac7.4ea1c6",
        "g": "1b82c7fb.e55448",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 490,
        "y": 340,
        "wires": []
    },
    {
        "id": "e5cb0df.5f800f",
        "type": "mqtt in",
        "z": "303a8ac7.4ea1c6",
        "g": "1b82c7fb.e55448",
        "name": "",
        "topic": "shellies/Wohnzimmerschalter/input_event/0",
        "qos": "2",
        "datatype": "auto",
        "broker": "19cf2a10.f9d4a6",
        "x": 220,
        "y": 420,
        "wires": [
            [
                "70c7fcfe.4a18a4",
                "9d5588be.cd9ff8"
            ]
        ]
    },
    {
        "id": "cc3c23a7.cde0c",
        "type": "mqtt in",
        "z": "303a8ac7.4ea1c6",
        "g": "875b7fad.bef24",
        "name": "",
        "topic": "shellies/Wohnzimmerschalter/input_event/2",
        "qos": "2",
        "datatype": "auto",
        "broker": "19cf2a10.f9d4a6",
        "x": 220,
        "y": 620,
        "wires": [
            [
                "b8aa167e.038cf8"
            ]
        ]
    },
    {
        "id": "9d5588be.cd9ff8",
        "type": "json",
        "z": "303a8ac7.4ea1c6",
        "g": "1b82c7fb.e55448",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 470,
        "y": 420,
        "wires": [
            [
                "90164b1.c8cd0b8",
                "e62cdee5.0ac4a"
            ]
        ]
    },
    {
        "id": "90164b1.c8cd0b8",
        "type": "debug",
        "z": "303a8ac7.4ea1c6",
        "g": "1b82c7fb.e55448",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 340,
        "wires": []
    },
    {
        "id": "e62cdee5.0ac4a",
        "type": "function",
        "z": "303a8ac7.4ea1c6",
        "g": "1b82c7fb.e55448",
        "name": "",
        "func": "switch (msg.payload.event){\n    case \"S\":\n        msg.payload = \"0\";\n        break;\n    case \"SS\":\n        msg.payload = \"50\";\n        break;\n    case \"SSS\":\n        msg.payload = \"100\";\n        break;\n    default:\n        msg.payload = \"anderes event\"\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 640,
        "y": 420,
        "wires": [
            [
                "692cb70c.99c928",
                "89de660e.32b288"
            ]
        ]
    },
    {
        "id": "692cb70c.99c928",
        "type": "debug",
        "z": "303a8ac7.4ea1c6",
        "g": "1b82c7fb.e55448",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 340,
        "wires": []
    },
    {
        "id": "89de660e.32b288",
        "type": "link out",
        "z": "303a8ac7.4ea1c6",
        "g": "1b82c7fb.e55448",
        "name": "Schalter Out",
        "links": [
            "fd62f2d7.c32f7",
            "e1e1185c.2c8d88"
        ],
        "x": 815,
        "y": 420,
        "wires": []
    },
    {
        "id": "6f653dba.45b264",
        "type": "mqtt out",
        "z": "303a8ac7.4ea1c6",
        "g": "875b7fad.bef24",
        "name": "Regal Wohnzimmer Ein Aus",
        "topic": "shellies/Regalbeleuchtung/color/0/command",
        "qos": "",
        "retain": "",
        "broker": "19cf2a10.f9d4a6",
        "x": 360,
        "y": 680,
        "wires": []
    },
    {
        "id": "fb5cff5c.b5669",
        "type": "inject",
        "z": "303a8ac7.4ea1c6",
        "g": "875b7fad.bef24",
        "name": "ON",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "on",
        "payloadType": "str",
        "x": 130,
        "y": 680,
        "wires": [
            [
                "6f653dba.45b264"
            ]
        ]
    },
    {
        "id": "ec444cf1.0f441",
        "type": "inject",
        "z": "303a8ac7.4ea1c6",
        "g": "875b7fad.bef24",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "off",
        "payloadType": "str",
        "x": 130,
        "y": 740,
        "wires": [
            [
                "6f653dba.45b264"
            ]
        ]
    },
    {
        "id": "4a72d2bb.8a626c",
        "type": "inject",
        "z": "303a8ac7.4ea1c6",
        "g": "875b7fad.bef24",
        "name": "Regalbeleuchtung JSON",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"mode\":\"color\",\"red\":255,\"green\":255,\"blue\":255,\"gain\":100,\"white\":0,\"effect\":0,\"turn\":\"on\",\"transition\":500}",
        "payloadType": "json",
        "x": 550,
        "y": 540,
        "wires": [
            [
                "1dc7e978.c48077"
            ]
        ]
    },
    {
        "id": "1dc7e978.c48077",
        "type": "mqtt out",
        "z": "303a8ac7.4ea1c6",
        "g": "875b7fad.bef24",
        "name": "Regalbeleuchtung Set",
        "topic": "shellies/Regalbeleuchtung/color/0/set",
        "qos": "",
        "retain": "",
        "broker": "19cf2a10.f9d4a6",
        "x": 820,
        "y": 620,
        "wires": []
    },
    {
        "id": "b8aa167e.038cf8",
        "type": "json",
        "z": "303a8ac7.4ea1c6",
        "g": "875b7fad.bef24",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 470,
        "y": 620,
        "wires": [
            [
                "8d25df5c.ebd85"
            ]
        ]
    },
    {
        "id": "8d25df5c.ebd85",
        "type": "function",
        "z": "303a8ac7.4ea1c6",
        "g": "875b7fad.bef24",
        "name": "",
        "func": "switch (msg.payload.event){\n    case \"S\":\n        msg.payload = \n        {\n    \"mode\": \"color\",\n    \"red\": 255,\n    \"green\": 255,\n    \"blue\": 255,\n    \"gain\": 100,\n    \"turn\": \"toggle\",\n    \"transition\": 500\n}\n        break;\n    case \"SS\":\n        msg.payload = \n                {\n    \"mode\": \"color\",\n    \"red\": 80,\n    \"green\": 255,\n    \"blue\": 255,\n    \"gain\": 50,\n    \"turn\": \"on\",\n    \"transition\": 500\n                }\n        break;\n    case \"SSS\":\n        msg.payload = \n                {\n    \"mode\": \"color\",\n    \"red\": 255,\n    \"green\": 255,\n    \"blue\": 255,\n    \"gain\": 100,\n    \"turn\": \"on\",\n    \"transition\": 100\n}\n        break;\n    default:\n        msg.payload = \"anderes event\"\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 620,
        "y": 620,
        "wires": [
            [
                "1dc7e978.c48077",
                "114319b2.da6366"
            ]
        ]
    },
    {
        "id": "114319b2.da6366",
        "type": "debug",
        "z": "303a8ac7.4ea1c6",
        "g": "875b7fad.bef24",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 790,
        "y": 580,
        "wires": []
    },
    {
        "id": "404dde09.449bf",
        "type": "mqtt out",
        "z": "265d3756.5a1d68",
        "name": "Homematic Command Out",
        "topic": "",
        "qos": "",
        "retain": "",
        "broker": "19cf2a10.f9d4a6",
        "x": 1040,
        "y": 360,
        "wires": []
    },
    {
        "id": "5c3137f1.b5ec18",
        "type": "mqtt in",
        "z": "265d3756.5a1d68",
        "g": "40936a6d.e4bc64",
        "name": "",
        "topic": "Hom/stat/Olga/+",
        "qos": "0",
        "datatype": "auto",
        "broker": "19cf2a10.f9d4a6",
        "x": 120,
        "y": 440,
        "wires": [
            [
                "acdf657a.72a3b8",
                "130b2e36.ca9eb2"
            ]
        ]
    },
    {
        "id": "acdf657a.72a3b8",
        "type": "function",
        "z": "265d3756.5a1d68",
        "g": "40936a6d.e4bc64",
        "name": "",
        "func": "var topic=msg.topic;\nvar iVentValue = 0;\nswitch(topic){\n    case \"Hom/stat/Olga/iVent\":\n        iVentValue = Number(msg.payload) \n        flow.set(\"iVentOlga\", iVentValue)\n        msg.payload={\n            iVent: iVentValue\n            }\n        return msg;\n   case \"Hom/stat/Olga/iSetTemp\":\n        msg.payload={\n            iSetTemp: Number(msg.payload) \n            \n        }\n        return msg;\n\n   \n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 380,
        "y": 440,
        "wires": [
            [
                "e1622e38.47b46"
            ]
        ]
    },
    {
        "id": "e1622e38.47b46",
        "type": "influxdb out",
        "z": "265d3756.5a1d68",
        "g": "40936a6d.e4bc64",
        "influxdb": "e3f4c3e8.b52ee",
        "name": "HomeMatic Olga",
        "measurement": "Olga",
        "precision": "",
        "retentionPolicy": "two_month",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 610,
        "y": 440,
        "wires": []
    },
    {
        "id": "3bd8ac1b.081bb4",
        "type": "mqtt in",
        "z": "6f61cfd3.3d721",
        "g": "584f76f1.996908",
        "name": "",
        "topic": "Hom/stat/Olga/iActTemp",
        "qos": "0",
        "datatype": "auto",
        "broker": "19cf2a10.f9d4a6",
        "x": 150,
        "y": 460,
        "wires": [
            [
                "3ad0e3f6.35a08c"
            ]
        ]
    },
    {
        "id": "3ad0e3f6.35a08c",
        "type": "function",
        "z": "6f61cfd3.3d721",
        "g": "584f76f1.996908",
        "name": "Hom Olga switch/convert",
        "func": "var topic=msg.topic;\nswitch(topic){\n    case \"Hom/stat/Olga/iActTemp\":\n        msg.payload={\n            iActTemp: Number(msg.payload) \n            \n        }\n        return msg;\n\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 390,
        "y": 460,
        "wires": [
            [
                "f5d3faae.391998",
                "d0849bc.1c43168"
            ]
        ]
    },
    {
        "id": "f5d3faae.391998",
        "type": "influxdb out",
        "z": "6f61cfd3.3d721",
        "g": "584f76f1.996908",
        "influxdb": "e3f4c3e8.b52ee",
        "name": "Olga",
        "measurement": "Olga",
        "precision": "",
        "retentionPolicy": "two_month",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 640,
        "y": 460,
        "wires": []
    },
    {
        "id": "f05b3b99.e44618",
        "type": "ui_slider",
        "z": "265d3756.5a1d68",
        "g": "40936a6d.e4bc64",
        "name": "OlgaSetTemp",
        "label": "Olga",
        "tooltip": "",
        "group": "5b512b5d.99aec4",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "outs": "end",
        "topic": "Hom/cmd/Olga/iSetTemp",
        "topicType": "str",
        "min": "15",
        "max": "30",
        "step": "0.5",
        "x": 600,
        "y": 500,
        "wires": [
            [
                "404dde09.449bf"
            ]
        ]
    },
    {
        "id": "6693313c.9b041",
        "type": "samsung-tv-send",
        "z": "8c0dc70a.3a1008",
        "device": "d3280bd.1460df8",
        "name": "",
        "key": "KEY_VOLDOWN",
        "x": 260,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "be3398e9.139348",
        "type": "samsung-tv-token",
        "z": "8c0dc70a.3a1008",
        "device": "d3280bd.1460df8",
        "name": "Samsung Fernseher",
        "x": 310,
        "y": 540,
        "wires": [
            [
                "ec60b9ae.61c308"
            ]
        ]
    },
    {
        "id": "ec60b9ae.61c308",
        "type": "debug",
        "z": "8c0dc70a.3a1008",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 620,
        "y": 560,
        "wires": []
    },
    {
        "id": "b621889a.7a8198",
        "type": "inject",
        "z": "8c0dc70a.3a1008",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 620,
        "wires": [
            [
                "be3398e9.139348"
            ]
        ]
    },
    {
        "id": "dbb3fcbb.281df",
        "type": "samsung-tv-isalive",
        "z": "8c0dc70a.3a1008",
        "device": "d3280bd.1460df8",
        "name": "",
        "x": 550,
        "y": 420,
        "wires": [
            [
                "11294d5a.bc9e03"
            ],
            [
                "efc18443.e7a378"
            ]
        ]
    },
    {
        "id": "11294d5a.bc9e03",
        "type": "debug",
        "z": "8c0dc70a.3a1008",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 780,
        "y": 400,
        "wires": []
    },
    {
        "id": "efc18443.e7a378",
        "type": "debug",
        "z": "8c0dc70a.3a1008",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 800,
        "y": 460,
        "wires": []
    },
    {
        "id": "ddee4222.dcb21",
        "type": "inject",
        "z": "8c0dc70a.3a1008",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 90,
        "y": 400,
        "wires": [
            [
                "6693313c.9b041"
            ]
        ]
    },
    {
        "id": "130b2e36.ca9eb2",
        "type": "switch",
        "z": "265d3756.5a1d68",
        "g": "40936a6d.e4bc64",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Hom/stat/Olga/iSetTemp",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 370,
        "y": 500,
        "wires": [
            [
                "f05b3b99.e44618"
            ]
        ]
    },
    {
        "id": "d9f1bf04.de446",
        "type": "newSamsungTV",
        "z": "8c0dc70a.3a1008",
        "ip": "192.168.178.32",
        "command": "KEY_VOLUP",
        "name": "",
        "x": 280,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "733737d6.42bfc8",
        "type": "new-samsung-tv-isalive",
        "z": "8c0dc70a.3a1008",
        "ip": "192.168.178.32",
        "name": "",
        "x": 550,
        "y": 760,
        "wires": [
            [
                "1dee6c7f.98aac4"
            ],
            [
                "e1ffda1f.f1e228"
            ]
        ]
    },
    {
        "id": "e6457d9b.d82c8",
        "type": "inject",
        "z": "8c0dc70a.3a1008",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 90,
        "y": 800,
        "wires": [
            [
                "d9f1bf04.de446"
            ]
        ]
    },
    {
        "id": "1dee6c7f.98aac4",
        "type": "debug",
        "z": "8c0dc70a.3a1008",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 740,
        "y": 760,
        "wires": []
    },
    {
        "id": "e1ffda1f.f1e228",
        "type": "debug",
        "z": "8c0dc70a.3a1008",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 760,
        "y": 840,
        "wires": []
    },
    {
        "id": "e35749e2.bdfdd8",
        "type": "new-samsung-tv-isalive",
        "z": "303a8ac7.4ea1c6",
        "ip": "192.168.178.32",
        "name": "Samsung TV On",
        "x": 160,
        "y": 900,
        "wires": [
            [
                "8f2949e8.868d18"
            ],
            [
                "a3233a67.d08488"
            ]
        ]
    },
    {
        "id": "8f2949e8.868d18",
        "type": "change",
        "z": "303a8ac7.4ea1c6",
        "name": "Full Light",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"mode\":\"color\",\"red\":255,\"green\":255,\"blue\":255,\"gain\":100,\"turn\":\"toggle\",\"transition\":500}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 880,
        "wires": [
            [
                "1dc7e978.c48077"
            ]
        ]
    },
    {
        "id": "a3233a67.d08488",
        "type": "change",
        "z": "303a8ac7.4ea1c6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"mode\":\"color\",\"red\":80,\"green\":255,\"blue\":255,\"gain\":50,\"turn\":\"on\",\"transition\":500}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 920,
        "wires": [
            [
                "1dc7e978.c48077"
            ]
        ]
    },
    {
        "id": "9742d791.e68298",
        "type": "inject",
        "z": "8c0dc70a.3a1008",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 410,
        "y": 820,
        "wires": [
            [
                "733737d6.42bfc8"
            ]
        ]
    },
    {
        "id": "b2eaa5c4.14f408",
        "type": "mqtt in",
        "z": "265d3756.5a1d68",
        "g": "b9a71c35.b8ccf",
        "name": "",
        "topic": "Hom/stat/Tom/+",
        "qos": "0",
        "datatype": "auto",
        "broker": "19cf2a10.f9d4a6",
        "x": 120,
        "y": 600,
        "wires": [
            [
                "e016da34.64e308",
                "aa219fc1.1a6e2"
            ]
        ]
    },
    {
        "id": "e016da34.64e308",
        "type": "function",
        "z": "265d3756.5a1d68",
        "g": "b9a71c35.b8ccf",
        "name": "",
        "func": "var topic=msg.topic;\nvar i = 0;\nswitch(topic){\n    case \"Hom/stat/Tom/iVent\":\n        i = Number(msg.payload);\n        msg.payload={\n            iVent: Number(msg.payload) }\n            flow.set(\"iVentTom\",i)\n   \n       \n        return msg;\n   case \"Hom/stat/Tom/iSetTemp\":\n        msg.payload={\n            iSetTemp: Number(msg.payload) \n            \n        }\n        return msg;\n\n   \n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 380,
        "y": 600,
        "wires": [
            [
                "65e988da.f6b958"
            ]
        ]
    },
    {
        "id": "65e988da.f6b958",
        "type": "influxdb out",
        "z": "265d3756.5a1d68",
        "g": "b9a71c35.b8ccf",
        "influxdb": "e3f4c3e8.b52ee",
        "name": "HomeMatic Tom",
        "measurement": "Tom",
        "precision": "",
        "retentionPolicy": "two_month",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 590,
        "y": 600,
        "wires": []
    },
    {
        "id": "aa219fc1.1a6e2",
        "type": "switch",
        "z": "265d3756.5a1d68",
        "g": "b9a71c35.b8ccf",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Hom/stat/Tom/iSetTemp",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 350,
        "y": 680,
        "wires": [
            [
                "3954e69e.21d60a"
            ]
        ]
    },
    {
        "id": "3954e69e.21d60a",
        "type": "ui_slider",
        "z": "265d3756.5a1d68",
        "g": "b9a71c35.b8ccf",
        "name": "TomSetTemp",
        "label": "Tom",
        "tooltip": "",
        "group": "5b512b5d.99aec4",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "outs": "end",
        "topic": "Hom/cmd/Tom/iSetTemp",
        "topicType": "str",
        "min": "15",
        "max": "30",
        "step": "0.5",
        "x": 580,
        "y": 680,
        "wires": [
            [
                "404dde09.449bf",
                "ae0f7157.7d2e7"
            ]
        ]
    },
    {
        "id": "ae0f7157.7d2e7",
        "type": "debug",
        "z": "265d3756.5a1d68",
        "g": "b9a71c35.b8ccf",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 770,
        "y": 680,
        "wires": []
    },
    {
        "id": "9ed6a24d.c8feb",
        "type": "mqtt in",
        "z": "265d3756.5a1d68",
        "g": "3644af6d.d42f6",
        "name": "",
        "topic": "Hom/stat/Wohnz/+",
        "qos": "0",
        "datatype": "auto",
        "broker": "19cf2a10.f9d4a6",
        "x": 130,
        "y": 60,
        "wires": [
            [
                "c12c999c.1ace08",
                "8de8f997.bf7e18",
                "3d0abac7.6df4e6"
            ]
        ]
    },
    {
        "id": "8de8f997.bf7e18",
        "type": "switch",
        "z": "265d3756.5a1d68",
        "g": "3644af6d.d42f6",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Hom/stat/Wohnz/bBalkont√ºreAuf",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 250,
        "y": 120,
        "wires": [
            [
                "38d7b5c0.b2603a"
            ]
        ]
    },
    {
        "id": "c12c999c.1ace08",
        "type": "function",
        "z": "265d3756.5a1d68",
        "g": "3644af6d.d42f6",
        "name": "",
        "func": "var topic=msg.topic;\nvar iVentValue;\nswitch(topic){\n    case \"Hom/stat/Wohnz/iVentEck\":\n        iVentValue = Number(msg.payload)\n        flow.set(\"iVentEck\", iVentValue)\n         msg.payload={\n            iVentEck:  iVentValue\n         }\n        return msg;\n   case \"Hom/stat/Wohnz/iVentEss\":\n        iVentValue = Number(msg.payload)\n        flow.set(\"iVentEss\", iVentValue)\n         msg.payload={\n            iVentEss:  iVentValue\n         }\n        return msg;\n    case \"Hom/stat/Wohnz/iSetTemp\":\n        msg.payload={\n            iSetTemp: Number(msg.payload) \n            \n        }\n        return msg;\n    case \"Hom/stat/Wohnz/iActTemp\":\n        msg.payload={\n            iActTemp: Number(msg.payload) \n            \n        }\n        return msg;\n   \n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 360,
        "y": 60,
        "wires": [
            [
                "17d18fc0.b21c7",
                "7365b52e.c6858c"
            ]
        ]
    },
    {
        "id": "17d18fc0.b21c7",
        "type": "influxdb out",
        "z": "265d3756.5a1d68",
        "g": "3644af6d.d42f6",
        "influxdb": "e3f4c3e8.b52ee",
        "name": "Homematic Wohnzimmer",
        "measurement": "Wohnz",
        "precision": "",
        "retentionPolicy": "two_month",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 610,
        "y": 60,
        "wires": []
    },
    {
        "id": "5734478e.ed65c8",
        "type": "clock-timer",
        "z": "265d3756.5a1d68",
        "g": "3644af6d.d42f6",
        "name": "",
        "topic": "Hom/cmd/Wohnz/iSetTemp",
        "addIdType": "none",
        "addId": "",
        "positionConfig": "9a5a8534.25d4d8",
        "autoTrigger": true,
        "autoTriggerTime": "600000",
        "startDelayTime": 10000,
        "contextStore": "",
        "results": [
            {
                "p": "",
                "pt": "msgTopic",
                "v": "",
                "vt": "topic"
            },
            {
                "p": "",
                "pt": "msgPayload",
                "v": "",
                "vt": "payload"
            },
            {
                "p": "timeCtrl",
                "pt": "msg",
                "v": "",
                "vt": "ctrlObj"
            }
        ],
        "overwriteExpire": "1200000",
        "rules": [
            {
                "index": 0,
                "name": "WE 8:30 20.5 Grad",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [],
                "payload": {
                    "type": "str",
                    "value": "20.5",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000,
                    "format": ""
                },
                "topic": "Hom/cmd/Wohnz/iSetTemp",
                "importance": 0,
                "resetOverwrite": false,
                "time": {
                    "type": "entered",
                    "value": "8:30",
                    "operator": 1,
                    "operatorText": "‚Üß von",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000,
                    "days": "6,0",
                    "months": "*"
                },
                "description": "<div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ‚Üß von <var>8:30</var><div class=\"indent-time-days\"><i class=\"fa fa-calendar-o\" aria-hidden=\"true\"></i> <span>nur an folgenden Tagen</span> <var>Sa und So</var></div></div><div><div class=\"indent-payload-text\"><i class=\"fa fa-step-backward\" aria-hidden=\"true\"></i> <span>Payload:</span> <var>\"20.5\"</var></div><div class=\"indent-topic-text\"> <i class=\"fa fa-tasks\" aria-hidden=\"true\"></i><span>Topic: </span> <var>Hom/cmd/Wohnz/iSetTemp</var></div></div>"
            },
            {
                "index": 1,
                "name": "11:30 20.5 Grad",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [],
                "payload": {
                    "type": "str",
                    "value": "20.5",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000,
                    "format": ""
                },
                "topic": "Hom/cmd/Wohnz/iSetTemp",
                "importance": 0,
                "resetOverwrite": false,
                "time": {
                    "type": "entered",
                    "value": "11:40",
                    "operator": 1,
                    "operatorText": "‚Üß von",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000,
                    "days": "1,2,3,4,5",
                    "months": "*"
                },
                "description": "<div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ‚Üß von <var>11:40</var><div class=\"indent-time-days\"><i class=\"fa fa-calendar-o\" aria-hidden=\"true\"></i> <span>nur an folgenden Tagen</span> <var>Mo-Fr</var></div></div><div><div class=\"indent-payload-text\"><i class=\"fa fa-step-backward\" aria-hidden=\"true\"></i> <span>Payload:</span> <var>\"20.5\"</var></div><div class=\"indent-topic-text\"> <i class=\"fa fa-tasks\" aria-hidden=\"true\"></i><span>Topic: </span> <var>Hom/cmd/Wohnz/iSetTemp</var></div></div>"
            },
            {
                "index": 2,
                "name": "13:00 19 Grad",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [],
                "payload": {
                    "type": "str",
                    "value": "19",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000,
                    "format": ""
                },
                "topic": "Hom/cmd/Wohnz/iSetTemp",
                "importance": 0,
                "resetOverwrite": false,
                "time": {
                    "type": "entered",
                    "value": "13:00",
                    "operator": 1,
                    "operatorText": "‚Üß von",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000,
                    "days": "1,2,3,4,5",
                    "months": "*"
                },
                "description": "<div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ‚Üß von <var>13:00</var><div class=\"indent-time-days\"><i class=\"fa fa-calendar-o\" aria-hidden=\"true\"></i> <span>nur an folgenden Tagen</span> <var>Mo-Fr</var></div></div><div><div class=\"indent-payload-text\"><i class=\"fa fa-step-backward\" aria-hidden=\"true\"></i> <span>Payload:</span> <var>\"19\"</var></div><div class=\"indent-topic-text\"> <i class=\"fa fa-tasks\" aria-hidden=\"true\"></i><span>Topic: </span> <var>Hom/cmd/Wohnz/iSetTemp</var></div></div>"
            },
            {
                "index": 3,
                "name": "16:00 20 Grad",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [],
                "payload": {
                    "type": "str",
                    "value": "20.5",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000,
                    "format": ""
                },
                "topic": "Hom/cmd/Wohnz/iSetTemp",
                "importance": 0,
                "resetOverwrite": false,
                "time": {
                    "type": "entered",
                    "value": "16:00",
                    "operator": 1,
                    "operatorText": "‚Üß von",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000,
                    "days": "1,2,3,4,5",
                    "months": "*"
                },
                "description": "<div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ‚Üß von <var>16:00</var><div class=\"indent-time-days\"><i class=\"fa fa-calendar-o\" aria-hidden=\"true\"></i> <span>nur an folgenden Tagen</span> <var>Mo-Fr</var></div></div><div><div class=\"indent-payload-text\"><i class=\"fa fa-step-backward\" aria-hidden=\"true\"></i> <span>Payload:</span> <var>\"20.5\"</var></div><div class=\"indent-topic-text\"> <i class=\"fa fa-tasks\" aria-hidden=\"true\"></i><span>Topic: </span> <var>Hom/cmd/Wohnz/iSetTemp</var></div></div>"
            },
            {
                "index": 4,
                "name": "20:00 21 Grad",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [],
                "payload": {
                    "type": "str",
                    "value": "21",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000,
                    "format": ""
                },
                "topic": "Hom/cmd/Wohnz/iSetTemp",
                "importance": 0,
                "resetOverwrite": false,
                "time": {
                    "type": "entered",
                    "value": "20:00",
                    "operator": 1,
                    "operatorText": "‚Üß von",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000,
                    "days": "*",
                    "months": "*"
                },
                "description": "<div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ‚Üß von <var>20:00</var></div><div><div class=\"indent-payload-text\"><i class=\"fa fa-step-backward\" aria-hidden=\"true\"></i> <span>Payload:</span> <var>\"21\"</var></div><div class=\"indent-topic-text\"> <i class=\"fa fa-tasks\" aria-hidden=\"true\"></i><span>Topic: </span> <var>Hom/cmd/Wohnz/iSetTemp</var></div></div>"
            },
            {
                "index": 5,
                "name": "22:00 18 Grad",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [],
                "payload": {
                    "type": "str",
                    "value": "18",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000,
                    "format": ""
                },
                "topic": "Hom/cmd/Wohnz/iSetTemp",
                "importance": 0,
                "resetOverwrite": false,
                "time": {
                    "type": "entered",
                    "value": "22:00",
                    "operator": 1,
                    "operatorText": "‚Üß von",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000,
                    "days": "*",
                    "months": "*"
                },
                "description": "<div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ‚Üß von <var>22:00</var></div><div><div class=\"indent-payload-text\"><i class=\"fa fa-step-backward\" aria-hidden=\"true\"></i> <span>Payload:</span> <var>\"18\"</var></div><div class=\"indent-topic-text\"> <i class=\"fa fa-tasks\" aria-hidden=\"true\"></i><span>Topic: </span> <var>Hom/cmd/Wohnz/iSetTemp</var></div></div>"
            }
        ],
        "payloadDefault": "19",
        "payloadDefaultType": "str",
        "payloadDefaultTimeFormat": 0,
        "payloadDefaultOffset": 0,
        "payloadDefaultOffsetType": "none",
        "payloadDefaultOffsetMultiplier": 60000,
        "x": 650,
        "y": 160,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "1df28e68.76cf02",
        "type": "ui_slider",
        "z": "265d3756.5a1d68",
        "g": "3644af6d.d42f6",
        "name": "WohnzimmerTemp",
        "label": "Wohn",
        "tooltip": "",
        "group": "5b512b5d.99aec4",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "outs": "end",
        "topic": "Hom/cmd/Wohnz/iSetTemp",
        "topicType": "str",
        "min": "15",
        "max": "30",
        "step": "0.5",
        "x": 590,
        "y": 220,
        "wires": [
            [
                "404dde09.449bf"
            ]
        ]
    },
    {
        "id": "c70dc234.9d2b2",
        "type": "mqtt in",
        "z": "265d3756.5a1d68",
        "g": "3644af6d.d42f6",
        "name": "",
        "topic": "Hom/stat/Wohnz/bBalkont√ºreAuf",
        "qos": "0",
        "datatype": "auto",
        "broker": "19cf2a10.f9d4a6",
        "x": 190,
        "y": 340,
        "wires": [
            [
                "e6e8fe31.e3e38",
                "e38e18ad.3476f8"
            ]
        ]
    },
    {
        "id": "e6e8fe31.e3e38",
        "type": "debug",
        "z": "265d3756.5a1d68",
        "g": "3644af6d.d42f6",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 590,
        "y": 340,
        "wires": []
    },
    {
        "id": "38d7b5c0.b2603a",
        "type": "change",
        "z": "265d3756.5a1d68",
        "g": "3644af6d.d42f6",
        "name": "Balkont√ºre",
        "rules": [
            {
                "t": "set",
                "p": "BalkonOffen",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "e38e18ad.3476f8",
        "type": "link out",
        "z": "265d3756.5a1d68",
        "g": "3644af6d.d42f6",
        "name": "Balkont√ºre Offen",
        "links": [
            "18eca755.0bbeb9"
        ],
        "x": 435,
        "y": 300,
        "wires": []
    },
    {
        "id": "18eca755.0bbeb9",
        "type": "link in",
        "z": "7e5a345d.05161c",
        "name": "",
        "links": [
            "e38e18ad.3476f8"
        ],
        "x": 75,
        "y": 1840,
        "wires": [
            [
                "2d76da21.b8b846"
            ]
        ]
    },
    {
        "id": "2d76da21.b8b846",
        "type": "change",
        "z": "7e5a345d.05161c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "trigger",
                "pt": "msg",
                "to": "true",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 210,
        "y": 1840,
        "wires": [
            [
                "b0373bec.1ade48"
            ]
        ]
    },
    {
        "id": "3d0abac7.6df4e6",
        "type": "switch",
        "z": "265d3756.5a1d68",
        "g": "3644af6d.d42f6",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Hom/stat/Wohnz/iSetTemp",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 250,
        "y": 220,
        "wires": [
            [
                "1df28e68.76cf02",
                "529c3dd9.9b5374"
            ]
        ]
    },
    {
        "id": "529c3dd9.9b5374",
        "type": "debug",
        "z": "265d3756.5a1d68",
        "g": "3644af6d.d42f6",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 370,
        "y": 180,
        "wires": []
    },
    {
        "id": "90fc0e46.96ed",
        "type": "influxdb in",
        "z": "6f61cfd3.3d721",
        "influxdb": "e3f4c3e8.b52ee",
        "name": "",
        "query": "",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "organisation",
        "x": 450,
        "y": 1400,
        "wires": [
            [
                "a1db9440.b8f0b8"
            ]
        ]
    },
    {
        "id": "19ce9555.9529cb",
        "type": "inject",
        "z": "6f61cfd3.3d721",
        "name": "",
        "props": [
            {
                "p": "query",
                "v": "SELECT last(\"iVentEck\") FROM \"two_month\".\"Wohnz\" WHERE time >= now() - 48h and time <= now()",
                "vt": "str"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 230,
        "y": 1420,
        "wires": [
            [
                "90fc0e46.96ed"
            ]
        ]
    },
    {
        "id": "a1db9440.b8f0b8",
        "type": "debug",
        "z": "6f61cfd3.3d721",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 750,
        "y": 1400,
        "wires": []
    },
    {
        "id": "7365b52e.c6858c",
        "type": "debug",
        "z": "265d3756.5a1d68",
        "g": "3644af6d.d42f6",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 100,
        "wires": []
    },
    {
        "id": "ddb9da78.77be18",
        "type": "function",
        "z": "265d3756.5a1d68",
        "g": "5e94d88a.fb01e8",
        "name": "Heater Needed",
        "func": "var topic=msg.topic;\nvar i = 0;\nswitch(topic){\n    case \"Hom/stat/Wohnz/iVentEck\":\n    case \"Hom/stat/Wohnz/iVentEss\":\n    case \"Hom/stat/Olga/iVent\":\n    case \"Hom/stat/Tom/iVent\":\n       i = flow.get(\"iVentEss\") + flow.get(\"iVentEck\")\n       + flow.get(\"iVentTom\")  + flow.get(\"iVentOlga\")\n       if (i > 0) msg.payload= \"true\"\n       else msg.payload = \"false\"\n       msg.value = i;\n    return msg;\n   \n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is deployed.\n flow.set(\"iVentEss\", 0)\n flow.set(\"iVentEck\", 0)\n flow.set(\"iVentOlga\", 0)\n flow.set(\"iVentTom\", 0)",
        "finalize": "",
        "x": 480,
        "y": 760,
        "wires": [
            [
                "f0b72f63.75383"
            ]
        ]
    },
    {
        "id": "2a95bc9b.1c66a4",
        "type": "mqtt in",
        "z": "265d3756.5a1d68",
        "g": "5e94d88a.fb01e8",
        "name": "",
        "topic": "Hom/stat/#",
        "qos": "0",
        "datatype": "auto",
        "broker": "19cf2a10.f9d4a6",
        "x": 100,
        "y": 780,
        "wires": [
            [
                "77634598.aeeb5c"
            ]
        ]
    },
    {
        "id": "89c04ca8.7c10c",
        "type": "debug",
        "z": "265d3756.5a1d68",
        "g": "5e94d88a.fb01e8",
        "name": "Heater needed",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 960,
        "y": 820,
        "wires": []
    },
    {
        "id": "7fce1939.2cfb98",
        "type": "link out",
        "z": "265d3756.5a1d68",
        "g": "5e94d88a.fb01e8",
        "name": "",
        "links": [
            "6c8377f8.cdd248"
        ],
        "x": 895,
        "y": 780,
        "wires": []
    },
    {
        "id": "6c8377f8.cdd248",
        "type": "link in",
        "z": "6f61cfd3.3d721",
        "g": "5d7bb23e.6c04ec",
        "name": "HeaterNeeded",
        "links": [
            "7fce1939.2cfb98"
        ],
        "x": 95,
        "y": 1120,
        "wires": [
            [
                "3c079b7c.3bb374"
            ]
        ]
    },
    {
        "id": "f0b72f63.75383",
        "type": "change",
        "z": "265d3756.5a1d68",
        "g": "5e94d88a.fb01e8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "HeaterNeeded",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 780,
        "wires": [
            [
                "7fce1939.2cfb98",
                "89c04ca8.7c10c"
            ]
        ]
    },
    {
        "id": "77634598.aeeb5c",
        "type": "delay",
        "z": "265d3756.5a1d68",
        "g": "5e94d88a.fb01e8",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 290,
        "y": 780,
        "wires": [
            [
                "ddb9da78.77be18"
            ]
        ]
    },
    {
        "id": "bb147727.808968",
        "type": "inject",
        "z": "511989b1.670cc8",
        "g": "18ca9346.bdbedd",
        "name": "Shutdown",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "octoprint/system",
        "payload": "shutdown",
        "payloadType": "str",
        "x": 960,
        "y": 1040,
        "wires": [
            [
                "550eb938.78f938"
            ]
        ]
    },
    {
        "id": "997e000a.2be07",
        "type": "change",
        "z": "511989b1.670cc8",
        "g": "18ca9346.bdbedd",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "octoprint/system",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1340,
        "y": 920,
        "wires": [
            [
                "550eb938.78f938"
            ]
        ]
    },
    {
        "id": "66335075.9471e",
        "type": "blind-control",
        "z": "7e5a345d.05161c",
        "g": "7ce4548d.b8ed0c",
        "name": "RolloTom",
        "topic": "",
        "addIdType": "none",
        "addId": "",
        "positionConfig": "9a5a8534.25d4d8",
        "autoTrigger": true,
        "autoTriggerTime": 3600000,
        "startDelayTime": 10000,
        "contextStore": "",
        "results": [
            {
                "p": "",
                "pt": "msgTopic",
                "v": "",
                "vt": "topic"
            },
            {
                "p": "",
                "pt": "msgPayload",
                "v": "",
                "vt": "level"
            },
            {
                "p": "slat",
                "pt": "msg",
                "v": "",
                "vt": "slat"
            },
            {
                "p": "blindCtrl",
                "pt": "msg",
                "v": "",
                "vt": "ctrlObj"
            }
        ],
        "blindIncrement": "1",
        "blindOpenPos": "100",
        "blindClosedPos": 0,
        "blindPosReverse": false,
        "blindPosDefault": "open (max)",
        "blindPosDefaultType": "levelFixed",
        "slatPosDefault": "",
        "slatPosDefaultType": "none",
        "overwriteExpire": "1200000",
        "rules": [
            {
                "index": 0,
                "name": "HolidayWeekend",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [
                    {
                        "valueType": "global",
                        "value": "day.today.isWeekendOrHoliday",
                        "operator": "true",
                        "operatorText": "ist true",
                        "thresholdType": "num",
                        "threshold": 0
                    }
                ],
                "level": {
                    "type": "levelFixed",
                    "value": "closed (min)",
                    "operator": 0,
                    "operatorText": "‚Üï  Absolut"
                },
                "slat": {
                    "type": "none",
                    "value": ""
                },
                "topic": "",
                "resetOverwrite": false,
                "importance": 0,
                "time": {
                    "type": "entered",
                    "value": "7:45",
                    "operator": 0,
                    "operatorText": "‚Ü• bis",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000,
                    "days": "*",
                    "months": "*"
                },
                "description": "<div><i class=\"fa fa-code-fork\" aria-hidden=\"true\"></i> <var>global.day.today.isWeekendOrHoliday</var> ist true</div><div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ‚Ü• bis <var>7:45</var></div><div><div class=\"indent-level-text\"> <i class=\"fa fa-angle-down\" aria-hidden=\"true\"></i><span>Rollladenposition: </span> ‚Üï  Absolut <var>geschlossen (min)</var></div></div>"
            },
            {
                "index": 1,
                "name": "Sonnenaufgang",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [],
                "level": {
                    "type": "levelFixed",
                    "value": "closed (min)",
                    "operator": 0,
                    "operatorText": "‚Üï  Absolut"
                },
                "slat": {
                    "type": "none",
                    "value": ""
                },
                "topic": "",
                "resetOverwrite": false,
                "importance": 0,
                "time": {
                    "type": "pdsTime",
                    "value": "sunriseStart",
                    "operator": 0,
                    "operatorText": "‚Ü• bis",
                    "offsetType": "num",
                    "offset": "10",
                    "multiplier": 60000,
                    "days": "*",
                    "months": "*"
                },
                "timeMin": {
                    "type": "entered",
                    "value": "6:00",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000
                },
                "timeMax": {
                    "type": "entered",
                    "value": "8:00",
                    "offsetType": "randmNumCachedDay",
                    "offset": "30",
                    "multiplier": 60000
                },
                "description": "<div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ‚Ü• bis <var>Sonnenaufgang Beginn</var> + 00:10<div class=\"indent-time-text\"><i class=\"fa fa-step-backward\" aria-hidden=\"true\"></i> <span>fr√ºhestens (min)</span> <var>6:00</var></div><div class=\"indent-time-text\"><i class=\"fa fa-step-forward\" aria-hidden=\"true\"></i> <span>sp√§testens (max)</span> <var>8:00</var> offset <var>zuf√§llig (t√§glich) bis 30</var></div></div><div><div class=\"indent-level-text\"> <i class=\"fa fa-angle-down\" aria-hidden=\"true\"></i><span>Rollladenposition: </span> ‚Üï  Absolut <var>geschlossen (min)</var></div></div>"
            },
            {
                "index": 2,
                "name": "Sonnenuntergang",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [],
                "level": {
                    "type": "levelFixed",
                    "value": "33%",
                    "operator": 0,
                    "operatorText": "‚Üï  Absolut"
                },
                "slat": {
                    "type": "none",
                    "value": ""
                },
                "topic": "",
                "resetOverwrite": false,
                "importance": 0,
                "time": {
                    "type": "pdsTime",
                    "value": "sunsetEnd",
                    "operator": 1,
                    "operatorText": "‚Üß von",
                    "offsetType": "num",
                    "offset": "15",
                    "multiplier": 60000,
                    "days": "*",
                    "months": "*"
                },
                "timeMax": {
                    "type": "entered",
                    "value": "21:00",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000
                },
                "description": "<div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ‚Üß von <var>Sonnenuntergang Ende</var> + 00:15<div class=\"indent-time-text\"><i class=\"fa fa-step-forward\" aria-hidden=\"true\"></i> <span>sp√§testens (max)</span> <var>21:00</var></div></div><div><div class=\"indent-level-text\"> <i class=\"fa fa-angle-down\" aria-hidden=\"true\"></i><span>Rollladenposition: </span> ‚Üï  Absolut <var>33%</var></div></div>"
            },
            {
                "index": 3,
                "name": "WochenendeGeschlossen",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [
                    {
                        "valueType": "global",
                        "value": "day.today.isWeekendOrHoliday",
                        "operator": "true",
                        "operatorText": "ist true",
                        "thresholdType": "num",
                        "threshold": 0
                    }
                ],
                "level": {
                    "type": "levelFixed",
                    "value": "closed (min)",
                    "operator": 0,
                    "operatorText": "‚Üï  Absolut"
                },
                "slat": {
                    "type": "none",
                    "value": ""
                },
                "topic": "",
                "resetOverwrite": false,
                "importance": 0,
                "time": {
                    "type": "entered",
                    "value": "22:00",
                    "operator": 0,
                    "operatorText": "‚Ü• bis",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000,
                    "days": "*",
                    "months": "*"
                },
                "description": "<div><i class=\"fa fa-code-fork\" aria-hidden=\"true\"></i> <var>global.day.today.isWeekendOrHoliday</var> ist true</div><div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ‚Ü• bis <var>22:00</var></div><div><div class=\"indent-level-text\"> <i class=\"fa fa-angle-down\" aria-hidden=\"true\"></i><span>Rollladenposition: </span> ‚Üï  Absolut <var>geschlossen (min)</var></div></div>"
            },
            {
                "index": 4,
                "name": "WochentagGeschlossen",
                "version": 3,
                "enabled": true,
                "isValid": true,
                "conditions": [],
                "level": {
                    "type": "levelFixed",
                    "value": "closed (min)",
                    "operator": 0,
                    "operatorText": "‚Üï  Absolut"
                },
                "slat": {
                    "type": "none",
                    "value": ""
                },
                "topic": "",
                "resetOverwrite": false,
                "importance": 0,
                "time": {
                    "type": "entered",
                    "value": "21:45",
                    "operator": 1,
                    "operatorText": "‚Üß von",
                    "offsetType": "none",
                    "offset": "1",
                    "multiplier": 60000,
                    "days": "*",
                    "months": "*"
                },
                "description": "<div><i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i> ‚Üß von <var>21:45</var></div><div><div class=\"indent-level-text\"> <i class=\"fa fa-angle-down\" aria-hidden=\"true\"></i><span>Rollladenposition: </span> ‚Üï  Absolut <var>geschlossen (min)</var></div></div>"
            }
        ],
        "sunControlMode": "0",
        "sunFloorLengthType": "num",
        "sunFloorLength": "",
        "sunMinDelta": "",
        "blindPosMin": "closed (min)",
        "blindPosMinType": "levelFixed",
        "blindPosMax": "open (max)",
        "blindPosMaxType": "levelFixed",
        "blindOpenPosOffset": 0,
        "blindClosedPosOffset": 0,
        "sunSlat": "",
        "sunSlatType": "none",
        "smoothTime": "",
        "sunTopic": "",
        "windowTopType": "num",
        "windowTop": "",
        "windowBottomType": "num",
        "windowBottom": "",
        "windowAzimuthStartType": "numAzimuth",
        "windowAzimuthStart": "",
        "windowAzimuthEndType": "numAzimuth",
        "windowAzimuthEnd": "",
        "oversteers": [],
        "oversteerTopic": "",
        "x": 400,
        "y": 2900,
        "wires": [
            [
                "b9f43bc.ca86bc8"
            ],
            []
        ]
    },
    {
        "id": "b9f43bc.ca86bc8",
        "type": "mqtt out",
        "z": "7e5a345d.05161c",
        "g": "7ce4548d.b8ed0c",
        "name": "",
        "topic": "cmnd/RolloTom/ShutterPosition",
        "qos": "",
        "retain": "",
        "broker": "19cf2a10.f9d4a6",
        "x": 750,
        "y": 2900,
        "wires": []
    },
    {
        "id": "52626602.a80e18",
        "type": "inject",
        "z": "265d3756.5a1d68",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "Hom/stat/Wohnz/iVentEck",
        "payload": "0",
        "payloadType": "str",
        "x": 270,
        "y": 940,
        "wires": [
            [
                "ddb9da78.77be18"
            ]
        ]
    },
    {
        "id": "833077af.3ad7e8",
        "type": "inject",
        "z": "7e5a345d.05161c",
        "g": "7ce4548d.b8ed0c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "str",
        "x": 410,
        "y": 2960,
        "wires": [
            [
                "b9f43bc.ca86bc8"
            ]
        ]
    },
    {
        "id": "92d65e6b.520fb",
        "type": "inject",
        "z": "7e5a345d.05161c",
        "g": "7ce4548d.b8ed0c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "100",
        "payloadType": "str",
        "x": 410,
        "y": 3040,
        "wires": [
            [
                "b9f43bc.ca86bc8"
            ]
        ]
    },
    {
        "id": "efee2e6a.18bbf",
        "type": "inject",
        "z": "7e5a345d.05161c",
        "g": "7ce4548d.b8ed0c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "50",
        "payloadType": "str",
        "x": 410,
        "y": 3000,
        "wires": [
            [
                "b9f43bc.ca86bc8"
            ]
        ]
    },
    {
        "id": "fbb3d4c7.4328d8",
        "type": "link in",
        "z": "7e5a345d.05161c",
        "name": "WeatherID",
        "links": [
            "f69a51fd.3a899"
        ],
        "x": 415,
        "y": 860,
        "wires": [
            [
                "7c0e361f.f82ce8"
            ]
        ]
    },
    {
        "id": "f69a51fd.3a899",
        "type": "link out",
        "z": "7e5a345d.05161c",
        "name": "WeatherID",
        "links": [
            "fbb3d4c7.4328d8"
        ],
        "x": 515,
        "y": 580,
        "wires": []
    },
    {
        "id": "e1e1185c.2c8d88",
        "type": "link in",
        "z": "7e5a345d.05161c",
        "name": "Wohnzimmer Zentralschalter",
        "links": [
            "89de660e.32b288"
        ],
        "x": 675,
        "y": 800,
        "wires": [
            [
                "5eac9c57.76c314"
            ]
        ]
    },
    {
        "id": "29e92fc.65284d",
        "type": "ui_slider",
        "z": "7e5a345d.05161c",
        "g": "7ce4548d.b8ed0c",
        "name": "Rollo Tom Position",
        "label": "Tom",
        "tooltip": "",
        "group": "13a03688.c43e99",
        "order": 7,
        "width": "6",
        "height": "1",
        "passthru": true,
        "outs": "end",
        "topic": "cmd/RolloTom/ShutterPosition",
        "topicType": "msg",
        "min": 0,
        "max": "100",
        "step": 1,
        "x": 430,
        "y": 2840,
        "wires": [
            [
                "b9f43bc.ca86bc8"
            ]
        ]
    },
    {
        "id": "bc21088d.1042d8",
        "type": "mqtt in",
        "z": "7e5a345d.05161c",
        "g": "7ce4548d.b8ed0c",
        "name": "",
        "topic": "stat/RolloTom/SHUTTER1",
        "qos": "2",
        "datatype": "auto",
        "broker": "19cf2a10.f9d4a6",
        "x": 190,
        "y": 2840,
        "wires": [
            [
                "29e92fc.65284d"
            ]
        ]
    },
    {
        "id": "7fb09d6a.3d4694",
        "type": "ui_slider",
        "z": "7e5a345d.05161c",
        "g": "c1953c38.acea1",
        "name": "Rollo Olga Position",
        "label": "Olga",
        "tooltip": "",
        "group": "13a03688.c43e99",
        "order": 8,
        "width": "6",
        "height": "1",
        "passthru": true,
        "outs": "end",
        "topic": "cmd/RolloOlga/ShutterPosition",
        "topicType": "msg",
        "min": 0,
        "max": "100",
        "step": 1,
        "x": 430,
        "y": 2540,
        "wires": [
            [
                "9541504a.3de58"
            ]
        ]
    },
    {
        "id": "5f0f2d7a.f23d34",
        "type": "mqtt in",
        "z": "7e5a345d.05161c",
        "g": "c1953c38.acea1",
        "name": "",
        "topic": "stat/RolloOlga/SHUTTER1",
        "qos": "2",
        "datatype": "auto",
        "broker": "19cf2a10.f9d4a6",
        "x": 190,
        "y": 2540,
        "wires": [
            [
                "7fb09d6a.3d4694"
            ]
        ]
    },
    {
        "id": "44ca9388.fa0d3c",
        "type": "inject",
        "z": "7e5a345d.05161c",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "600",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "TempOut",
        "payloadType": "global",
        "x": 330,
        "y": 420,
        "wires": [
            [
                "243db6c7.15d31a"
            ]
        ]
    },
    {
        "id": "243db6c7.15d31a",
        "type": "ui_text",
        "z": "7e5a345d.05161c",
        "group": "8e157408.1ce3a8",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Balkon Temp",
        "format": "{{msg.payload}} ¬∞C  ",
        "layout": "row-spread",
        "x": 590,
        "y": 420,
        "wires": []
    }
]